<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tamsiree</title>
  <icon>https://www.gravatar.com/avatar/6f05c6132e630e969d55a8ea105fd562</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tamsiree.com/"/>
  <updated>2020-03-27T13:37:39.709Z</updated>
  <id>https://tamsiree.com/</id>
  
  <author>
    <name>Tamsiree</name>
    <email>tamsiree.com@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker镜像搭建操作系统</title>
    <link href="https://tamsiree.com/TechnicalResearch/Docker/Docker%E9%95%9C%E5%83%8F%E6%90%AD%E5%BB%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>https://tamsiree.com/TechnicalResearch/Docker/Docker%E9%95%9C%E5%83%8F%E6%90%AD%E5%BB%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-03-18T14:11:04.000Z</published>
    <updated>2020-03-27T13:37:39.709Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我一直都很喜欢思考怎样管理装在自己电脑上的桌面系统，近些年来，Docker由于提供了一套非常方便地创建并运行应用容器的方法，而在全球掀起了一股容器化的热潮。容器通过将软件及其所需要的运行环境一同打包带走，从而将人们从依赖的苦海中拯救出来。虽然Docker设计的初衷并不是操作系统容器，更不是一个直接运行在裸机上的操作系统，但是docker这套强大的工具也会给我们管理操作系统带来巨大的便利。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>为什么要用Docker镜像当作桌面系统？这就要从普通桌面系统的不方便之处说起。通常我们都拥有不止一台电脑，我们希望这些电脑能够保持一致。这里所说的“一致”，用一个例子来讲，就是我在一台电脑上编辑了一半的文件，不需要认为拷贝到另一台电脑上，而是直接打开电脑就能编辑。如果这个文件只是一个纯文本文件，或者一个Microsoft Word文档，那么实现这个一致性非常简单：把文件扔到Dropbox之类的云同步盘就好。然而对于专业用户来讲，这种一致性的保持并非单纯的扔到Dropbox里面那么简单：比如说你最近忙于一个项目，这个项目要用到若干编程语言，然后在电脑里装了一堆库，一堆工具软件，有图形界面的，也有命令行的。在工作的过程中，你有可能不断安装新的工具，或者决定弃用某个之前计划使用的库或者工具。要让你的工作在你的若干台电脑上都能工作，就要一直维护不同机器的环境的一致性：在一台机器上安装的工具，要在所有机器上重新安装一遍。在一台机器上升级了的库，要在所有机器上都升级，稍微有所差池，就有可能出现某个脚本/程序在一台机器上跑的好好的，在另一台机器上却无法运行的问题。</p><h1 id="docker哲学"><a href="#docker哲学" class="headerlink" title="docker哲学"></a><a href="#docker哲学" title="docker哲学"></a>docker哲学</h1><p>不熟悉docker的读者可以戳<a href="https://docs.docker.com/get-started/" target="_blank" rel="noopener">这里</a>来了解docker。Docker的使用非常简单：我们通过写一个Dockerfile，在Dockerfile中写入相应的命令来安装以及配置我们想要的库跟工具。不熟悉docker的读者可以看一下下面这个<a href="https://github.com/kstaken/dockerfile-examples/blob/master/nodejs/Dockerfile" target="_blank" rel="noopener">抄来的Dockerfile的例子</a>，来了解一下Dockerfile长啥样子：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">dockerfile</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight dockerfile"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu  </span><br><span class="line"><span class="keyword">MAINTAINER</span> Kimbro Staken  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get install -y software-properties-common python  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> add-apt-repository ppa:chris-lea/node.js  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"deb http://us.archive.ubuntu.com/ubuntu/ precise universe"</span> >> /etc/apt/sources.list  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get install -y nodejs  </span></span><br><span class="line"><span class="comment">#RUN apt-get install -y nodejs=0.6.12~dfsg1-1ubuntu1  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir /var/www  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> app.js /var/www/app.js  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> \[<span class="string">"/usr/bin/node"</span>, <span class="string">"/var/www/app.js"</span>\]</span></span><br></pre></td></tr></tbody></table></figure></div><p>有了Dockerfile，只需要<code>docker build</code>一条命令就可以创建一个docker镜像。同时Docker公司提供一个叫做DockerHub的服务，可以免费托管公开镜像。只需要使用<code>docker push</code>就可以直接把镜像上传到DockerHub。在不同的电脑上只需要<code>docker pull</code>就可以从DockerHub获取最新版的镜像。DockerHub还支持自动构建，通过把DockerHub帐号跟GitHub帐号关联起来，就可以让DockerHub在GitHub上面的Dockerfile出现更改的时候自动重新生成镜像。</p><p>本文开头所说的这种一致性的维护，docker实际上已经在给我们提供答案了：我们通过构建一个docker镜像，让这个镜像包含着我们项目所需要的所有的一切。这样的话，我们开发，测试，部署等等一切任务，都可以在先用<code>docker run</code>来开启一个容器，然后在容里面进行所有的工作。当我们决定修改运行环境，比如引入新的库的时候，就在Dockerfile中进行相应的修改，重新生成镜像，然后在不同的机器上用<code>docker pull</code>来更新一下就好。这种使用哲学，通过一个中心化了的仓库，非常优雅地解决了不同机器上环境一致的问题。美中不足的是，并不是所有的程序都能在容器里运行的，也并不是所有的程序都方便在容器里运行的。如果你用到了图形界面的程序，或者说是一些系统级别的程序，那么在容器里面使用这些程序会麻烦很多，有的甚至根本无法实现。于是自然地就会想到，如果我们能够在每次开机的时候，直接把某个docker生成的镜像挂载起来当根目录来使用，就可以让这个镜像直接在裸机上（而不是在容器中）运行，来做我们的日常桌面系统了。</p><p>这种做法，除了在保持一致性方面带来的便利以外，还有一些其他的好处：</p><ul><li>整个系统保存在云端，本地的内容仅仅是云端的一份缓存而已，这样就完全没有必要定期对系统进行备份了。</li><li>你的系统是如何从零开始一步一步配置成你想要的样子的，所有的一切都清晰地展现在Dockerfile里面。Dockerfile就是你最好的笔记。</li><li>完全不用担心系统长时间使用产生一些残余的垃圾文件、或者某些系统中某些程序的数据出现损坏，因为每次开机，我们用的都是一个全新的系统。</li><li>要装一台新机器，并不需要从头安装操作系统，只要从DockerHub拉取镜像拿来用就好，安装系统这个过程变得极其方便。</li><li>系统更新的过程实际上就是根据Dockerfile从最新的软件仓库重新从头安装生成docker镜像的过程，不会出现某些更新遇到文件冲突或者依赖无法处理，需要人为干预才能完成的问题。</li></ul><h1 id="docker存储驱动的工作原理"><a href="#docker存储驱动的工作原理" class="headerlink" title="docker存储驱动的工作原理"></a><a href="#docker存储驱动的工作原理" title="docker存储驱动的工作原理"></a>docker存储驱动的工作原理</h1><p>Docker的存储驱动<a href="https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/" target="_blank" rel="noopener">官方有介绍其工作原理</a>，这里只是简单概括一下。Docker使用了层的概念，docker在构建镜像的时候，会逐行执行我们的Dockerfile中的每一行，每执行一行的时候，docker就会创建出一个新的层来存放新的内容。当我们执行<code>docker pull</code>或者<code>docker push</code>的时候，docker实际上传跟下载的是这些层之间的增量。每当执行<code>docker run</code>，docker就会把这些下载下来的层组合到一起，组合成一个完整的镜像，然后新建一个读写层，所有运行过程中的写入都会被写入到读写层中，而镜像本身则是保持只读，不会被更改。“层”这个概念具体实现起来，根据docker目录（通常为<code>/var/lib/docker</code>这个目录）所在的文件系统的不同而不同，具体的实现在docker中被称为graph driver，docker自带的graph driver包括aufs、 overlay、btrfs、zfs、devicemapper等。这些graph driver大多使用了写时复制的技术，这样在把各个层组合在一起的过程不需要重新拷贝一份数据，实际的拷贝是在写入的时候发生的。</p><p>由于笔者使用的是btrfs，所以本文就以btrfs为例子来介绍怎么让系统启动到docker镜像上去。btrfs是一个写时复制的系统，由于docker的镜像是由一个一个的层叠在一起组成的，docker在使用btrfs的时候，每往上叠一层，docker就会创建一个原来层的快照，然后把新层的内容写到快照里面去。然后docker会在从镜像创建容器的时候，给镜像的最顶层做个快照，把这个快照当作容器读写层来用。</p><h1 id="启动到docker镜像中去"><a href="#启动到docker镜像中去" class="headerlink" title="启动到docker镜像中去"></a><a href="#启动到docker镜像中去" title="启动到docker镜像中去"></a>启动到docker镜像中去</h1><p>明白了docker存储驱动的工作原理，还需要知道Linux的启动过程才能达成我们的目标。Linux在启动的时候，一般会让启动器给内核装载一个内存盘initramfs，然后内核完成简单的早期初始化以后，就会解压内存盘的内容到根目录<code>/</code>，然后启动内存盘中的init程序（一般为<code>/init</code>），这个init程序会进行进一步的初始化（比如说加载文件系统的驱动，对文件系统进行fsck等），这一步初始化完成了以后，这个init程序就会根据内核选项中的<code>root</code>、<code>rootflags</code>等内容挂载真正的根目录，然后通过<code>switch_root</code>程序启动真正根目录中的init程序，这个init程序则会完成最后的初始化工作，比如挂载fstab、加载图形界面等等。很多发行版都提供制作initramfs的工具，比如archlinux的mkinitcpio，这些工具通常都是模块化的，允许用户自己添加hook。</p><p>让系统启动到docker镜像所需要的知识已经完备了。思路也清晰了：通过给initramfs中添加hook，让initramfs中的init在挂载root之前从docker本地缓存中的镜像中创建出一个快照作为读写层，然后把这个读写层当作真正的root来挂载。具体操作上，在启动管理器里面写启动项的内核选项的时候，<code>root</code>就写<code>/var/lib/docker</code>所在的分区，而<code>rootflags</code>里面至少要有一项<code>subvol=XXXXX</code>，其中XXXXX是我们打算创建的读写层的位置。然后重中之重则是，写一个hook，这个hook干的事情是：找到想要的docker镜像对应的btrfs子卷，给这个子卷创建一个快照，命名为XXXXX（跟内核选项中的名字保持一致）。这样的话，在Linux把控制权交给initramfs中的init程序以后，init程序会先去从docker缓存中的子卷创造出XXXXX快照，然后把XXXXX快照当作root来挂载以及进行接下来的操作。如果读者跟笔者一样使用Arch Linux的话，那么所有的这些工作笔者已经做了，读者可以直接拿来用。</p><p>笔者的源码位于GitHub： <a href="https://github.com/zasdfgbnm/mkinitcpio-docker-hooks" target="_blank" rel="noopener">https://github.com/zasdfgbnm/mkinitcpio-docker-hooks</a> ，同时读者也可以直接从AUR中搜索<code>mkinitcpio-docker-hooks</code>来安装笔者的hook。下面就来介绍一下这个hook的使用方法。</p><h1 id="mkinitcpio-docker-hooks的使用"><a href="#mkinitcpio-docker-hooks的使用" class="headerlink" title="mkinitcpio-docker-hooks的使用"></a><a href="#mkinitcpio-docker-hooks的使用" title="mkinitcpio-docker-hooks的使用"></a>mkinitcpio-docker-hooks的使用</h1><p>mkinitcpio-docker-hooks的使用流程大概分为如下几步：</p><ol><li>确保你的<code>/var/lib/docker</code>位于某个btrfs分区中</li><li>准备一个适合在裸机上启动的docker镜像</li><li>然后在这个镜像中安装并配置mkinitcpio-docker-hooks</li><li>准备内核跟initramfs</li><li>准备top layer的内容</li><li>设置启动管理器</li></ol><h2 id="docker镜像的准备"><a href="#docker镜像的准备" class="headerlink" title="docker镜像的准备"></a><a href="#docker镜像的准备" title="docker镜像的准备"></a>docker镜像的准备</h2><p>要想启动到docker镜像中去，首先你得有一个适合在裸机上启动的docker镜像。很多docker镜像，为了减小镜像的大小，是不会附带只有裸机上才能用到的软件包（比如<code>dhcpcd</code>）的，所以读者可能需要在Dockerfile中手动安装这些软件包，对于Arch Linux来讲，只需要安装base组就可以了。由于接下来要安装<code>mkinitcpio-docker-hooks</code>，这里推荐使用一个已经内置yaourt的镜像，笔者使用的是自己的archlinux-yaourt镜像<a href="https://cloud.docker.com/swarm/zasdfgbnm/repository/docker/zasdfgbnm/archlinux-yaourt/general" target="_blank" rel="noopener">zasdfgbnm/archlinux-yaourt</a>。所以，Dockerfile的开头看起来是这个样子的：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">dockerfile</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight dockerfile"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> zasdfgbnm/archlinux-yaourt  </span><br><span class="line"><span class="keyword">USER</span> root  </span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pacman -Syu --noconfirm base</span></span><br></pre></td></tr></tbody></table></figure></div><p>作为示例，这里就不安装base之外的其他软件了，读者请自己根据需要安装其他软件。</p><h2 id="安装并配置mkinitcpio-docker-hooks"><a href="#安装并配置mkinitcpio-docker-hooks" class="headerlink" title="安装并配置mkinitcpio-docker-hooks"></a><a href="#安装并配置mkinitcpio-docker-hooks" title="安装并配置mkinitcpio-docker-hooks"></a>安装并配置mkinitcpio-docker-hooks</h2><p><code>mkinitcpio-docker-hooks</code>的安装是在docker里面而不是当前运行在裸机上的系统中进行的。之所以要把这个软件包安装在docker镜像里面，很重要的原因是因为Linux内核不提供ABI的稳定性，所以内核模块跟内核的版本必须严格对应，不然模块是无法加载的。为了保持这种一致性，我们采取的措施是，在docker里面安装<code>mkinitcpio-docker-hooks</code>，在docker中生成initramfs，并且在启动的时候用镜像里面的内核启动，就可以确保内核、initramfs中的模块、启动到镜像以后的<code>/lib/modules</code>三者保持一致。安装过程在Dockerfile中的写法如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">dockerfile</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight dockerfile"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> sudo -u user yaourt -S --noconfirm mkinitcpio-docker-hooks</span></span><br></pre></td></tr></tbody></table></figure></div><p>安装完了<code>mkinitcpio-docker-hooks</code>以后还需要配置，配置文件在<code>/etc/docker-btrfs.json</code>，初始内容如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">json</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line">{  </span><br><span class="line"> <span class="attr">"docker\_image"</span>: <span class="string">"archlinux/base"</span>,  </span><br><span class="line"> <span class="attr">"docker\_tag"</span>: <span class="string">"latest"</span>  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>我们需要做的就是把这两个变量的值替换为我们想要的值，比如说这里我打算把我的docker镜像的名字叫做“sample_image”。同时，我们还需要在<code>/etc/mkinitcpio.conf</code>中添加<code>docker-btrfs</code>这个hook。<br>综上，可以在Dockerfile中使用如下命令来配置：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">dockerfile</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight dockerfile"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">'s/archlinux\\/base/sample\_image/g'</span> /etc/docker-btrfs.json  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> perl -i -p -e <span class="string">'s/(?<=^HOOKS=\\()(.\*)(?=\\))/$1 docker-btrfs/g'</span> /etc/mkinitcpio.conf</span></span><br></pre></td></tr></tbody></table></figure></div><p>现在，我们有了一个完整的示例Dockerfile了：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">dockerfile</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight dockerfile"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> zasdfgbnm/archlinux-yaourt  </span><br><span class="line"><span class="keyword">USER</span> root  </span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pacman -Syu --noconfirm base  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sudo -u user yaourt -S --noconfirm mkinitcpio-docker-hooks  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">'s/archlinux\\/base/sample\_image/g'</span> /etc/docker-btrfs.json  </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> perl -i -p -e <span class="string">'s/(?<=^HOOKS=\\()(.\*)(?=\\))/$1 docker-btrfs/g'</span> /etc/mkinitcpio.conf</span></span><br></pre></td></tr></tbody></table></figure></div><p>只需要通过<code>docker build . -t sample_image</code>就可以构建自己的镜像了。</p><h2 id="准备内核跟initramfs"><a href="#准备内核跟initramfs" class="headerlink" title="准备内核跟initramfs"></a><a href="#准备内核跟initramfs" title="准备内核跟initramfs"></a>准备内核跟initramfs</h2><p>镜像生成好了以后，下一步就是准备内核跟构建initramfs了。注意这一步操作尽量在你打算用来启动docker镜像的机器上进行，因为mkinitcpio会自动根据机器把相应的内核模块放入initramfs中去，如果在别的机器上进行的话，那就可能会有一些驱动没有被自动装入initramfs中。如前所述，这一步的工作是在docker容器中进行的。首先运行容器并开启一个shell：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">docker run -v $(pwd):/workspace -w /workspace -it sample\_image bash</span><br></pre></td></tr></tbody></table></figure></div><p>然后在容器中执行如下命令：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">mkinitcpio -p linux  </span><br><span class="line">cp /boot/\* .  </span><br><span class="line">exit</span><br></pre></td></tr></tbody></table></figure></div><p>然后就可以在当前目录下看到准备好的<code>initramfs-linux-fallback.img</code>、<code>initramfs-linux.img</code>以及<code>vmlinuz-linux</code>了。</p><h2 id="准备top-layer的内容"><a href="#准备top-layer的内容" class="headerlink" title="准备top layer的内容"></a><a href="#准备top-layer的内容" title="准备top layer的内容"></a>准备top layer的内容</h2><p>Top layer是<code>mkinitcpio-docker-hooks</code>引入的新概念，它指的是某个驱动器中的某个目录，这个目录会在启动的时候读写层创建之后，真正的root挂载之前，通过busybox的<code>cp -a</code>命令整个拷贝到读写层里面去。为什么需要top layer呢？因为我们需要在多台机器上启动同一个镜像，而不同机器上的往往会根据需要配置不同的配置文件，比如<code>/etc/fstab</code>以及<code>/etc/X11/xorg.conf</code>。另外，DockerHub免费账户上的镜像都是公开的，<code>/etc/passwd</code>、<code>/etc/shadow</code>等的私密性文件也不适合放在镜像里面存储。</p><p>准备top layer的内容，实际上就是找一个文件夹，把需要单独配置的文件，按照从根目录算起的相对路径存放在这个文件夹里面。比如说如果你想给某台机器单独配置<code>/etc/fstab</code>，那么你就应该在top layer的目录中添加<code>etc/fstab</code>这个文件。这里推荐的具体的操作流程是：首先通过<code>docker run -v $(pwd):/workspace -w /workspace -it sample_image bash</code>进入容器中的shell，然后在其中做各种配置，比如<code>useradd ...</code>，完了以后把新生成的配置文件拷贝到top layer的文件夹中去</p><h2 id="设置启动管理器"><a href="#设置启动管理器" class="headerlink" title="设置启动管理器"></a><a href="#设置启动管理器" title="设置启动管理器"></a>设置启动管理器</h2><p>设置好了top layer以后，我们基本上可以算是万事具备只差东风了。我们只需要简单设置一下启动管理器就可以启动我们的系统了。这里以refind为例子，这里假设我们的所有东西放在一个label为“linux”的btrfs分区中，docker目录（也就是你系统启动以后会挂载到<code>/var/lib/docker</code>的目录）存放在这个分区根目录下的一个叫做“docker”的子卷中，而内核、initramfs以及top layer都是位于分区根目录下的“boot_docker”文件夹中，而我们希望创建的读写层名字叫做“docker_rwlayer”，那么相应的<code>refind.conf</code>中的菜单项的代码如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">menuentry archlinux-docker {  </span><br><span class="line"> icon EFI/refind/icons/os\_arch.png  </span><br><span class="line"> volume linux  </span><br><span class="line"> loader boot\_docker/vmlinuz-linux  </span><br><span class="line"> initrd boot\_docker/initramfs-linux.img  </span><br><span class="line"> options "root=LABEL=linux rootflags=subvol=docker\_rwlayer rw docker\_path=docker toplayer=LABEL=linux toplayer\_path=boot\_docker"  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>其中内核选项中，我们通过<code>root</code>来指定docker目录所在的分区，<code>rootflags</code>中的<code>subvol</code>来指定读写层的位置，<code>docker_path</code>来指定docker目录在<code>root</code>中的相对位置；通过<code>toplayer</code>来指定top layer目录所在的分区，<code>toplayerflags</code>来指定top layer所在分区的挂载选项，<code>toplayer_path</code>来指定top layer的目录在<code>toplayer</code>分区中的相对位置。</p><p>一切就绪，重启并享受吧！</p><p>另外，有兴趣的读者可以看一下这位网友的docker镜像作为参考：<br><a href="https://cloud.docker.com/swarm/zasdfgbnmsystem/repository/docker/zasdfgbnmsystem/archlinux-kde/general" target="_blank" rel="noopener">https://cloud.docker.com/swarm/zasdfgbnmsystem/repository/docker/zasdfgbnmsystem/archlinux-kde/general</a><br><a href="https://github.com/zasdfgbnm-dockers/archlinux-kde" target="_blank" rel="noopener">https://github.com/zasdfgbnm-dockers/archlinux-kde</a></p><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      我一直都很喜欢思考怎样管理装在自己电脑上的桌面系统，近些年来，Docker由于提供了一套非常方便地创建并运行应用容器的方法，而在全球掀起了一股容器化的热潮。容器通过将软件及其所需要的运行环境一同打包带走，从而将人们从依赖的苦海中拯救出来。虽然Docker设计的初衷并不是操作系统容器，更不是一个直接运行在裸机上的操作系统，但是docker这套强大的工具也会给我们管理操作系统带来巨大的便利。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="Docker" scheme="https://tamsiree.com/categories/TechnicalResearch/Docker/"/>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="Docker" scheme="https://tamsiree.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>GoLand免费开源授权</title>
    <link href="https://tamsiree.com/Software/GoLand/GoLand%E5%85%8D%E8%B4%B9%E5%BC%80%E6%BA%90%E6%8E%88%E6%9D%83/"/>
    <id>https://tamsiree.com/Software/GoLand/GoLand%E5%85%8D%E8%B4%B9%E5%BC%80%E6%BA%90%E6%8E%88%E6%9D%83/</id>
    <published>2020-03-17T14:48:51.000Z</published>
    <updated>2020-03-27T13:20:49.648Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近在研究go语言，需要用到goland编辑器，准备开工。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>我是一个gopher， <code>vim</code> ， <code>vs code</code> 都使用过，最后还是切换到了 <code>goland</code> ，可能对于我来说，使用的goland更习惯了（当然其他人使用其它工具可能更方便，不抬杠:<）</p><p>这篇文章并不是利用什么漏洞后门，而是告知大家 <code>jetbrains</code> 对于开源项目的支持，可以免费通过项目申请得到免费开源授权 。</p><h2 id="申请"><a href="#申请" class="headerlink" title="申请"></a><a href="#申请"></a>申请</h2><p>申请条件可以看这里：<br><a href="https://www.jetbrains.com/community/opensource/" target="_blank" rel="noopener">https://www.jetbrains.com/community/opensource/</a></p><p><a href="https://silenceper.com/img/20200222/jetbrains-apply-condition.png" data-fancybox="group" data-caption="申请条件" class="fancybox"><img alt="申请条件" title="申请条件" data-src="https://silenceper.com/img/20200222/jetbrains-apply-condition.png" class="lazyload"></a></p><p>申请条件</p><p>大概要求是在3个月内活跃的项目，并且是项目是免费开放使用的就可以得到一年的申请，到期后可继续申请。</p><h3 id="许可条款"><a href="#许可条款" class="headerlink" title="许可条款"></a><a href="#许可条款"></a>许可条款</h3><ul><li>许可证提供1年，并允许在1年内免费升级软件的所有新版本。</li><li>如果您的项目仍满足要求，可根据要求提供许可证续订。</li><li>一个许可证可以安装在任意数量的计算机上，但不能在两个或更多计算机上同时使用。</li><li>许可证仅提供给核心团队开发人员。</li></ul><h3 id="许可限制"><a href="#许可限制" class="headerlink" title="许可限制"></a><a href="#许可限制"></a>许可限制</h3><ul><li>许可证仅可用于非商业OS开发。请考虑购买单独的许可证以处理商业项目。</li><li>该软件的使用仅限于许可用户，无权将软件转让给任何第三方。 完整许可说明：<a href="https://www.jetbrains.com/store/license_opensource.html" target="_blank" rel="noopener">https://www.jetbrains.com/store/license_opensource.html</a></li></ul><p>点击<strong>APPLY</strong>，进入如下页面，填写项目信息进行申请：</p><p><a href="https://silenceper.com/img/20200222/jetbrains-apply-form.png" data-fancybox="group" data-caption="申请表单" class="fancybox"><img alt="申请表单" title="申请表单" data-src="https://silenceper.com/img/20200222/jetbrains-apply-form.png" class="lazyload"></a></p><p>申请表单</p><p>预计1个工作日后我就收到了申请通过的邮件：</p><p><a href="https://silenceper.com/img/20200222/jetbrains-apply-success.png" data-fancybox="group" data-caption="申请成功的邮件" class="fancybox"><img alt="申请成功的邮件" title="申请成功的邮件" data-src="https://silenceper.com/img/20200222/jetbrains-apply-success.png" class="lazyload"></a></p><p>申请成功的邮件</p><p>这是我申请的开发工具的许可证：</p><p><a href="https://silenceper.com/img/20200222/jetbrains-license.png" data-fancybox="group" data-caption="我的许可证" class="fancybox"><img alt="我的许可证" title="我的许可证" data-src="https://silenceper.com/img/20200222/jetbrains-license.png" class="lazyload"></a></p><p>我的许可证</p><blockquote><p>不得不点赞jetbrains拥抱开源的精神！同时该授权必须在遵循开源许可的范围内使用</p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      最近在研究go语言，需要用到goland编辑器，准备开工。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="GoLand" scheme="https://tamsiree.com/categories/Software/GoLand/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="GoLand" scheme="https://tamsiree.com/tags/GoLand/"/>
    
      <category term="Golang" scheme="https://tamsiree.com/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>Golang</title>
    <link href="https://tamsiree.com/TechnicalResearch/Golang/Golang/"/>
    <id>https://tamsiree.com/TechnicalResearch/Golang/Golang/</id>
    <published>2020-03-16T16:06:32.000Z</published>
    <updated>2020-04-28T13:45:16.126Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Go语言是Google开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言，它用批判吸收的眼光，融合C语言、Java等众家之长，将简洁、高效演绎得淋漓尽致。</p><p>Go语言起源于2007年，当时Google的技术大神们备受C++越来越臃肿的困扰，决心开发一种新的语言来取代C++。他们认为：与其在臃肿的语言上不断增加新的特性，不如简化编程语言。于是，Golang这门新语言应运而生。</p><p>在十年多的时间里，Go语言发展势头强劲，凭借其简洁、高效的特性，在竞争激烈的编程语言市场中占据了一席之地。Google、腾讯、阿里等大公司纷纷选择使用Go语言来开发服务应用项目。当然，和其他的编程语言一样，Go语言也有其自身的缺陷。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="特点及优势"><a href="#特点及优势" class="headerlink" title="特点及优势"></a>特点及优势</h2><p>Go语言的设计者们一直致力于降低构建简单、可靠、高效软件的门槛。相比于其他语言，Go语言具有众多令人兴奋不已的特点和优势：</p><p><strong>1.自动垃圾回收降低了开发难度</strong></p><p>内存和资源管理一直是一个让人非常抓狂的难题。在其他语言（如C或C++）中，使用内存前要先分配这段内存，使用完毕后再将其释放掉，一个小疏忽就可能引发内存泄漏，导致程序甚至系统崩溃。而Go语言的现代化垃圾回收机制显著地降低了开发难度，把无趣的内存管理交给专业的编译器去做，而让程序员专注于更有趣的事情。</p><p><strong>2.更丰富的内置类型</strong></p><p>Go语言是一种典型的实战派语言，它内置了一个其他静态语言通常用库方式来支持的字典类型（map），理由很简单：既然绝大多数开发者都需要用到这个类型，为什么还非要每个人都写一行import语句来包含一个库？</p><p>Go语言还新增了一个数据类型：数组切片（Slice）。我们可以将数组切片看作是一种可动态增长的数组，其功能与C++标准库中的vector类似，但有效地消除了反复写以下几行代码的工作量：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">golang</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight golang"><table><tbody><tr><td class="code"><pre><span class="line">#include <vector></vector></span><br><span class="line">#include<<span class="keyword">map</span>></span><br><span class="line">#include<algorithm></algorithm></span><br><span class="line">using namespace std;</span><br></pre></td></tr></tbody></table></figure></div><p>使用Go语言，开发者<strong>不用再费事添加依赖的包</strong>，既减少了输入工作量，又可以让代码更简洁。</p><p><strong>3.支持函数多返回值</strong></p><p>目前的主流语言中除Python外基本都不支持函数的多返回值功能，但很多情况下开发者非常需要这个功能。比如，我们要定义一个函数，用于返回个人的名字信息，而名字信息包含多个部分——姓氏、名字、中间字，在不支持多返回值的语言中有两种做法来实现名字信息的返回：</p><p>专门定义一个结构体：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">golang</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight golang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> name</span><br><span class="line">{</span><br><span class="line">  char first_name[<span class="number">20</span>];</span><br><span class="line">  char middle_name[<span class="number">20</span>];</span><br><span class="line">  char last_name[<span class="number">20</span>];</span><br><span class="line">};</span><br><span class="line">extern name get_name()；<span class="comment">//函数原型</span></span><br><span class="line">name n = get_name();<span class="comment">//函数调用</span></span><br></pre></td></tr></tbody></table></figure></div><p>或以传出参数的方式返回：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">golang</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight golang"><table><tbody><tr><td class="code"><pre><span class="line">extern void get_name(</span><br><span class="line">char* first_name,</span><br><span class="line">char* middle_name,</span><br><span class="line">char* last_name)；<span class="comment">//函数原型</span></span><br><span class="line"><span class="comment">//先分配内存</span></span><br><span class="line">char first_name[<span class="number">20</span>];</span><br><span class="line">char middle_name[<span class="number">20</span>];</span><br><span class="line">char last_name[<span class="number">20</span>];</span><br><span class="line"><span class="comment">//函数调用</span></span><br><span class="line">get_name(first_name,middle_name,last_name);</span><br></pre></td></tr></tbody></table></figure></div><p>Go语言的多返回值功能让开发者既不用再只为了返回多个值而专门定义一个数据结构，也不用再区分参数列表中哪几个用于输入，哪几个用于输出。</p><p>使用Go语言返回名字信息可以这样写：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">golang</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight golang"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getName</span><span class="params">(firstName,middleName,lastName <span class="keyword">string</span>)</span></span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"May"</span>,<span class="string">"M"</span>,<span class="string">"Chen"</span></span><br><span class="line">}</span><br><span class="line">fn,mn,ln,nn ：= getName()<span class="comment">//函数调用</span></span><br></pre></td></tr></tbody></table></figure></div><p><strong>4.漂亮的错误处理</strong></p><p>漂亮的错误处理规范是Go语言最大的亮点之一。Go语言引入了defer关键字用于标准的错误处理流程，并提供了内置函数panic、recover完成异常的抛出与捕获。与C++和Java等语言中的异常捕获机制相比，Go语言的错误处理机制可以大量减少代码量，开发者无需再仅为了程序安全而添加大量一层套一层的try-catch语句。</p><p>5.匿名函数和闭包</p><p>在Go语言中，所有的函数也是值类型，可以作为参数传递。Go语言支持常规的匿名函数和闭包，比如下列代码就定义了一个名为f的匿名函数，开发者可以随意对该匿名函数变量进行传递和调用：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">golang</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight golang"><table><tbody><tr><td class="code"><pre><span class="line">f := <span class="function"><span class="keyword">func</span><span class="params">(x,y,<span class="keyword">int</span>)</span> <span class="title">int</span></span>{</span><br><span class="line">  <span class="keyword">return</span> x+y</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p><strong>6.简洁的类型和“非侵入式”接口</strong></p><p>Go语言的类型定义非常接近C语言中的结构（struct），甚至直接沿用了struct关键字。为了保持简洁，Go语言没有直接沿袭C++和Java的传统去设计一个超级复杂的类型系统，不支持继承和重载，而只是支持最基本的类型组合功能。虽然看起来过于简洁，但Go语言依然能够实现C++和Java使用复杂的类型系统才能实现的功能。</p><p>而引入强大的“非侵入式”接口让开发者从以往对C++和Java开发中的接口管理问题中解脱了出来。</p><p><strong>7.并发编程更轻盈更安全</strong></p><p>Go语言引入了goroutine概念。goroutine是一种比线程更加轻盈、更省资源的协程。通过使用goroutine而不是裸用操作系统的并发机制，以及使用消息传递来共享内存而不是使用共享内存来通信，并发编程变得更加轻盈和安全。</p><h2 id="主要应用场景"><a href="#主要应用场景" class="headerlink" title="主要应用场景"></a>主要应用场景</h2><p>Golang非常适合用来做网络并发方面的服务，比如消息推送、监控、容器等。国内外的很多著名公司都使用了Go语言来开发服务及应用，比如：</p><ul><li>Google最核心的搜索和广告业务；</li><li>腾讯的Docker容器化</li><li>百度的运维BFE（Baidu Front End）项目，应对庞大的前端页面访问量。</li><li>小米的运维监控系统，小米商城、小米视频等团队也在使用Go语言</li></ul><h2 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h2><p>尽管Go语言独特的垃圾回收机制和并发编程机制等设计使代码更简洁，并大大提高了程序的性能，但与Python、Java、C/C++等语言相比，Go语言还是太年轻。</p><p><strong>1.软件包版本管理不完善</strong></p><p>Go语言的软件包版本管理一直被开发人员吐槽。Go语言没有制定特定版本的依赖库，在不同时间构建时，创建的生成可能会基于不同版本的包。在这方面，Go语言还无法与Python、Java等语言的软件包管理系统相媲美。</p><p><strong>2.错误信息难获得</strong></p><p>Go语言的错误处理最被人所诟病的一点是，开发者不能从函数上知道下层函数可能返回哪些类型的错误，很容易丢失错误发生的范围，难以提供有效的错误信息。</p><p>作为一门新兴的语言，Go语言难免存在种种缺陷。但出身名门的它拥有强大的后备力量，开源社区的用户不断地贡献新的轮子，Google也组建了一个独立的小组全职开发Go语言，在Google内部，Go语言有逐渐取代Java和Python主流地位的趋势。未来Go语言的身影应该会出现在越来越多的应用服务当中。</p><p>如果你对Go语言感兴趣的话，可以参考以下两本图书，深入地学习Go的特性，并与其他语言进行比较和判断。</p><p><a href="https://pic1.zhimg.com/v2-c641082382a5c9a1605df0965eef3490_b.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://pic1.zhimg.com/v2-c641082382a5c9a1605df0965eef3490_b.jpg" class="lazyload"></a></p><p>《Go语言实战》，作者：[美]William Kennedy [美]Brian Ketelsen [美]Erik St. Martin，译者：李兆海，审校：谢孟军</p><p>本书向读者提供了一个专注、全面且符合语言习惯的视角。本书同时关注语言的规范和实现，涉及的内容包括语法、类型系统、并发、管道、测试，以及其他一些主题。 作者William Kennedy是一位熟练的软件开发者，也是博客<a href="https://link.zhihu.com/?target=http%3A//GoingGo.Net">http://GoingGo.Net</a>的作者。 Brian Ketelsen和Erik St. Martin是全球Go语言大会GopherCon的组织者，也是Go语言框架Skynet的联合作者。</p><p><a href="https://pic1.zhimg.com/v2-53643ebde03b6d4c31fb21b0240dd63c_b.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://pic1.zhimg.com/v2-53643ebde03b6d4c31fb21b0240dd63c_b.jpg" class="lazyload"></a></p><p>《Go语言编程》，作者：许式伟 吕桂华</p><p>这本书首先引领读者快速浏览Go 语言的全貌，迅速消除读者对这门语言的陌生感，然后循序渐进地介绍了Go 语言的面向过程和面向对象的编程语法，其中穿插了一些与其他主流语言的比较，以让读者理解Go 语言的设计动机，接着探讨了Go 语言重要的并行编程方法，之后介绍了网络编程、工程管理、安全编程、开发工具等非语法相关但非常重要的内容，适合所有层次的开发者阅读。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="#ref_1_0">^</a>Additional IP Rights Grant”. The Go Programming Language. Google. Retrieved October 5, 2012.</li></ol><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer
      
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="Golang" scheme="https://tamsiree.com/categories/TechnicalResearch/Golang/"/>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="Golang" scheme="https://tamsiree.com/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>GoLand激活码</title>
    <link href="https://tamsiree.com/Software/GoLand/GoLand%E6%BF%80%E6%B4%BB%E7%A0%81/"/>
    <id>https://tamsiree.com/Software/GoLand/GoLand%E6%BF%80%E6%B4%BB%E7%A0%81/</id>
    <published>2020-03-16T16:03:21.000Z</published>
    <updated>2020-03-27T13:37:45.179Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这里是前言介绍。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>激活GoLand时，选择License server方式<br>地址填入：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">http://fls.jetbrains-agent.com</span><br></pre></td></tr></tbody></table></figure></div><p>点击：”Activate”。按照以下图片操作-操作完毕-重启IDE，激活完成。</p><p><a href="https://www.frankblog.cn/zb_users/upload/2020/02/202002121581489194443306.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://www.frankblog.cn/zb_users/upload/2020/02/202002121581489194443306.png" class="lazyload"></a></p><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer
      
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="GoLand" scheme="https://tamsiree.com/categories/Software/GoLand/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="GoLand" scheme="https://tamsiree.com/tags/GoLand/"/>
    
      <category term="Golang" scheme="https://tamsiree.com/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>AndroidX</title>
    <link href="https://tamsiree.com/TechnicalResearch/Android/AndroidX/"/>
    <id>https://tamsiree.com/TechnicalResearch/Android/AndroidX/</id>
    <published>2020-03-13T05:34:33.000Z</published>
    <updated>2020-03-14T12:15:25.409Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="AndroidX的前世今生"><a href="#AndroidX的前世今生" class="headerlink" title="AndroidX的前世今生"></a>AndroidX的前世今生</h1><p>Android技术迭代更新很快，各种新出的技术和名词也是层出不穷。不知从什么时候开始，总是会时不时听到AndroidX这个名词，这难道又是什么新出技术吗？相信有很多朋友也会存在这样的疑惑，那么我来探一探AndroidX的前世今生。</p><p>Android系统在刚刚面世的时候，可能连它的设计者也没有想到它会如此成功，因此也不可能在一开始的时候就将它的API考虑的非常周全。随着Android系统版本不断地迭代更新，每个版本中都会加入很多新的API进去，但是新增的API在老版系统中并不存在，因此这就出现了一个向下兼容的问题。</p><p>举个例子，当Android系统发布到3.0版本的时候，突然意识到了平板电脑的重要性，因此为了让Android可以更好地兼容平板，Android团队在3.0系统（API 11）中加入了Fragment功能。但是Fragment的作用并不只局限于平板，以前的老系统中也想使用这个功能该怎么办？于是Android团队推出了一个鼎鼎大名的Android Support Library，用于提供向下兼容的功能。比如我们每个人都熟知的support-v4库，appcompat-v7库都是属于Android Support Library的，这两个库相信任何做过Android开发的人都使用过。</p><p>但是可能很多人并没有考虑过support-v4库的名字到底是什么意思，这里跟大家解释一下。4在这里指的是Android API版本号，对应的系统版本是1.6。那么support-v4的意思就是这个库中提供的API会向下兼容到Android 1.6系统。它对应的包名如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">gradle</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight gradle"><table><tbody><tr><td class="code"><pre><span class="line">android.support.v4.app</span><br></pre></td></tr></tbody></table></figure></div><p>类似地，appcompat-v7指的是将库中提供的API向下兼容至API 7，也就是Android 2.1系统。它对应的包名如下:  </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">gradle</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight gradle"><table><tbody><tr><td class="code"><pre><span class="line">android.support.v7.appcompat</span><br></pre></td></tr></tbody></table></figure></div><p>可以发现，Android Support Library中提供的库，它们的包名都是以android.support.*开头的。</p><p>但是慢慢随着时间的推移，什么1.6、2.1系统早就已经被淘汰了，现在Android官方支持的最低系统版本已经是4.0.1，对应的API版本号是15。support-v4、appcompat-v7库也不再支持那么久远的系统了，但是它们的名字却一直保留了下来，虽然它们现在的实际作用已经对不上当初命名的原因了。</p><p>那么很明显，Android团队也意识到这种命名已经非常不合适了，于是对这些API的架构进行了一次重新的划分，推出了AndroidX。因此，AndroidX本质上其实就是对Android Support Library进行的一次升级，升级内容主要在于以下两个方面。</p><p>第一，包名。之前Android Support Library中的API，它们的包名都是在android.support.* 下面的，而AndroidX库中所有API的包名都变成了在androidx.* 下面。这是一个很大的变化，意味着以后凡是android.* 包下面的API都是随着Android操作系统发布的，而androidx.* 包下面的API都是随着扩展库发布的，这些API基本不会依赖于操作系统的具体版本。</p><p>第二，命名规则。吸取了之前命名规则的弊端，AndroidX所有库的命名规则里都不会再包含具体操作系统API的版本号了。比如，像appcompat-v7库，在AndroidX中就变成了appcompat库。</p><p>一个AndroidX完整的依赖库格式如下所示:  </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">gradle</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight gradle"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'androidx.appcompat:appcompat:1.0.2'</span></span><br></pre></td></tr></tbody></table></figure></div><p>了解了AndroidX是什么之后，现在你应该放轻松了吧？它其实并不是什么全新的东西，而是对Android Support Library的一次升级。因此，AndroidX上手起来也没有任何困难的地方，比如之前你经常使用的RecyclerView、ViewPager等等库，在AndroidX中都会有一个对应的版本，只要改一下包名就可以完全无缝使用，用法方面基本上都没有任何的变化。</p><p>但是有一点需要注意，AndroidX和Android Support Library中的库是非常不建议混合在一起使用的，因为它们可能会产生很多不兼容的问题。最好的做法是，要么全部使用AndroidX中的库，要么全部使用Android Support Library中的库。</p><p>而现在Android团队官方的态度也很明确，未来都会为AndroidX为主，Android Support Library已经不再建议使用，并会慢慢停止维护。另外，从Android Studio 3.4.2开始，我发现新建的项目已经强制勾选使用AndroidX架构了。</p><p><a href="https://img-blog.csdnimg.cn/20190824070204547.png" data-fancybox="group" data-caption="s" class="fancybox"><img alt="s" title="s" data-src="https://img-blog.csdnimg.cn/20190824070204547.png" class="lazyload"></a></p><p>那么对于老项目的迁移应该怎么办呢？由于涉及到了包名的改动，如果从Android Support Library升级到AndroidX需要手动去改每一个文件的包名，那可真得要改死了。为此，Android Studio提供了一个一键迁移的功能，只需要对着你的项目名右击 → Refactor → Migrate to AndroidX，就会弹出如下图所示的窗口。</p><p><a href="https://img-blog.csdnimg.cn/20190824070402776.png" data-fancybox="group" data-caption="d" class="fancybox"><img alt="d" title="d" data-src="https://img-blog.csdnimg.cn/20190824070402776.png" class="lazyload"></a></p><p>这里点击Migrate，Android Studio就会自动检查你项目中所有使用Android Support Library的地方，并将它们全部改成AndroidX中对应的库。另外Android Studio还会将你原来的项目备份成一个zip文件，这样即使迁移之后的代码出现了问题你还可以随时还原回之前的代码。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="AndroidStudio-项目适配-Android-X-Android-9-0"><a href="#AndroidStudio-项目适配-Android-X-Android-9-0" class="headerlink" title="AndroidStudio 项目适配 Android X (Android 9.0)"></a>AndroidStudio 项目适配 Android X (Android 9.0)</h2><blockquote><p>老项目、大项目适配Android X 注意了，一定要谨慎、谨慎、再谨慎。项目中用到的第三方库多的话会很麻烦，有些第三方库还没有适配Android X。<br>适配Android X的两种情况：一种是老项目适配Android X ，另外一种是新项目要求适配Android 9.0</p></blockquote><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><blockquote><p>Android Studio 3.5.2<br>targetSdkVersion 28<br>[gradle-wrapper.properties文件内] distributionUrl 5.4.1<br>[build.gradle文件内] gradle 3.5.2  </p></blockquote><p>在 gradle.properties 中加入如下代码，表示支持 Android X.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">gradle</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight gradle"><table><tbody><tr><td class="code"><pre><span class="line">android.useAndroidX=<span class="keyword">true</span></span><br><span class="line">android.enableJetifier=<span class="keyword">true</span></span><br></pre></td></tr></tbody></table></figure></div><p>然后在 AndroidStudio 顶部菜单栏中 $\Rightarrow$ Refactor $\Rightarrow$ Migrate to androidx,，一键转为 androidX.</p><p>接着在 build.gradle(Module:app) 的 android 添加 支持 <code>Java 1.8</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">gradle</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight gradle"><table><tbody><tr><td class="code"><pre><span class="line">compileOptions {</span><br><span class="line">  <span class="keyword">sourceCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class="line">  <span class="keyword">targetCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>修复无效的旧引用导致的错误：  </p><ol><li>修改代码内报错的 import 语句  </li><li>修改布局中的标签头,例如</li></ol><table><thead><tr><th align="center">名称</th><th align="center">变化之前</th><th align="center">Android X</th></tr></thead><tbody><tr><td align="center">RecyclerView</td><td align="center">android.support.v7.widget.RecyclerView</td><td align="center">androidx.recyclerview.widget.RecyclerView</td></tr><tr><td align="center">ConstraintLayout</td><td align="center">android.support.constraint.ConstraintLayout</td><td align="center">androidx.constraintlayout.widget.ConstraintLayout</td></tr><tr><td align="center">CardView</td><td align="center">android.support.v7.widget.CardView</td><td align="center">androidx.cardview.widget.CardView</td></tr></tbody></table><h2 id="升级-AndroidX-之后-常用的依赖"><a href="#升级-AndroidX-之后-常用的依赖" class="headerlink" title="升级 AndroidX 之后 常用的依赖"></a>升级 AndroidX 之后 常用的依赖</h2><h3 id="1、CardView"><a href="#1、CardView" class="headerlink" title="1、CardView"></a>1、CardView</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'androidx.cardview:cardview:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="2、TabLayout"><a href="#2、TabLayout" class="headerlink" title="2、TabLayout"></a>2、TabLayout</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'com.google.android.material:material:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="3、RecycleView"><a href="#3、RecycleView" class="headerlink" title="3、RecycleView"></a>3、RecycleView</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'androidx.recyclerview:recyclerview:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="4、Snackbar"><a href="#4、Snackbar" class="headerlink" title="4、Snackbar"></a>4、Snackbar</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'com.google.android.material.snackbar.Snackbar:1.0.0-rc01'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="5、swiperefreshlayout"><a href="#5、swiperefreshlayout" class="headerlink" title="5、swiperefreshlayout"></a>5、swiperefreshlayout</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="6、viewpager"><a href="#6、viewpager" class="headerlink" title="6、viewpager"></a>6、viewpager</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'androidx.viewpager:viewpager:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="7、design-ui-库"><a href="#7、design-ui-库" class="headerlink" title="7、design ui 库"></a>7、design ui 库</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'com.google.android.material:material:1.0.0-rc01'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="8、coordinatorlayout"><a href="#8、coordinatorlayout" class="headerlink" title="8、coordinatorlayout"></a>8、coordinatorlayout</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'androidx.coordinatorlayout:coordinatorlayout:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="9、constraintlayout-约束布局"><a href="#9、constraintlayout-约束布局" class="headerlink" title="9、constraintlayout 约束布局"></a>9、constraintlayout 约束布局</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'androidx.constraintlayout:constraintlayout:1.1.2'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="10、NavigationView-侧滑"><a href="#10、NavigationView-侧滑" class="headerlink" title="10、NavigationView 侧滑"></a>10、NavigationView 侧滑</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'com.google.android.material.navigation.NavigationView：1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="11、drawerlayout-抽屉布局"><a href="#11、drawerlayout-抽屉布局" class="headerlink" title="11、drawerlayout 抽屉布局"></a>11、drawerlayout 抽屉布局</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation<span class="string">'androidx.drawerlayout:drawerlayout:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="12、gridlayout-网格布局"><a href="#12、gridlayout-网格布局" class="headerlink" title="12、gridlayout 网格布局"></a>12、gridlayout 网格布局</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation<span class="string">'androidx.gridlayout:gridlayout:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="13、recyclerview-selection-RecycleView-高亮显示方案"><a href="#13、recyclerview-selection-RecycleView-高亮显示方案" class="headerlink" title="13、recyclerview-selection RecycleView 高亮显示方案"></a>13、recyclerview-selection RecycleView 高亮显示方案</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation<span class="string">'androidx.recyclerview:recyclerview-selection:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="14、国内可打开的-官方对照连接"><a href="#14、国内可打开的-官方对照连接" class="headerlink" title="14、国内可打开的 官方对照连接"></a>14、国内可打开的 官方对照连接</h3><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdeveloper.android.google.cn%2Fjetpack%2Fandroidx%2Fmigrate%2Fclass-mappings%3Fhl%3Dzh_cn" target="_blank" rel="noopener">AndroidX 依赖对比 google官方</a></p><h3 id="15、viewPager-2-这个是2与viewPager不同哦"><a href="#15、viewPager-2-这个是2与viewPager不同哦" class="headerlink" title="15、viewPager 2 这个是2与viewPager不同哦"></a>15、viewPager 2 这个是2与viewPager不同哦</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">implementation <span class="string">'androidx.viewpager2:viewpager2:1.0.0'</span></span><br></pre></td></tr></tbody></table></figure></div><hr><blockquote><p>参考来源：<br><a href="https://blog.csdn.net/guolin_blog/article/details/97142065" target="_blank" rel="noopener">CSDN guolin</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      Android技术迭代更新很快，各种新出的技术和名词也是层出不穷。不知从什么时候开始，总是会时不时听到AndroidX这个名词，这难道又是什么新出技术吗？相信有很多朋友也会存在这样的疑惑，那么我来探一探AndroidX的前世今生。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="Android" scheme="https://tamsiree.com/categories/TechnicalResearch/Android/"/>
    
    
      <category term="Android" scheme="https://tamsiree.com/tags/Android/"/>
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="AndroidX" scheme="https://tamsiree.com/tags/AndroidX/"/>
    
  </entry>
  
  <entry>
    <title>Android研究Fragment</title>
    <link href="https://tamsiree.com/TechnicalResearch/Android/Android%E7%A0%94%E7%A9%B6Fragment/"/>
    <id>https://tamsiree.com/TechnicalResearch/Android/Android%E7%A0%94%E7%A9%B6Fragment/</id>
    <published>2020-03-05T06:56:50.000Z</published>
    <updated>2020-03-14T12:15:06.702Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Fragment，简称碎片，是Android 3.0（API 11）提出的，为了兼容低版本，support-v4库中也开发了一套Fragment API，最低兼容Android 1.6。</p><p>过去support-v4库是一个jar包，24.2.0版本开始，将support-v4库模块化为多个jar包，包含：support-fragment, support-ui, support-media-compat等，这么做是为了减少APK包大小，你需要用哪个模块就引入哪个模块。</p><p>如果想引入整个support-v4库，则compile ‘com.android.support:support-v4:24.2.1’，如果只想引入support-fragment库，则com.android.support:support-fragment:24.2.1。</p><blockquote><p>因为support库是不断更新的，因此建议使用support库中的android.support.v4.app.<br>Fragment，而不要用系统自带的android.app.Fragment。而如果要使用support库的Fragment，Activity必须要继承FragmentActivity（AppCompatActivity是FragmentActivity的子类）。</p></blockquote><h1 id="问题归纳"><a href="#问题归纳" class="headerlink" title="问题归纳"></a>问题归纳</h1><h2 id="Could-not-find-Fragment-constructor"><a href="#Could-not-find-Fragment-constructor" class="headerlink" title="Could not find Fragment constructor"></a>Could not find Fragment constructor</h2><p>本次排查Bug的fragment基于AndroidX1.1.0<br>线上bugly报了一个Could not find Fragment constructor，先看一下Fragment的构造函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor used by the default {<span class="doctag">@link</span> FragmentFactory}. You must</span></span><br><span class="line"><span class="comment">     * {<span class="doctag">@link</span> FragmentManager#setFragmentFactory(FragmentFactory) set a custom FragmentFactory}</span></span><br><span class="line"><span class="comment">     * if you want to use a non-default constructor to ensure that your constructor</span></span><br><span class="line"><span class="comment">     * is called when the fragment is re-instantiated.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <p>It is strongly recommended to supply arguments with {<span class="doctag">@link</span> #setArguments}<br><span class="line"><span class="comment">     * and later retrieved by the Fragment with {<span class="doctag">@link</span> #getArguments}. These arguments</span></span><br><span class="line"><span class="comment">     * are automatically saved and restored alongside the Fragment.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * </span></span></p><p>Applications should generally not implement a constructor. Prefer<br><span class="line"><span class="comment">     * {<span class="doctag">@link</span> #onAttach(Context)} instead. It is the first place application code can run where</span></span><br><span class="line"><span class="comment">     * the fragment is ready to be used - the point where the fragment is actually associated with</span></span><br><span class="line"><span class="comment">     * its context. Some applications may also want to implement {<span class="doctag">@link</span> #onInflate} to retrieve</span></span><br><span class="line"><span class="comment">     * attributes from a layout resource, although note this happens when the fragment is attached.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fragment</span><span class="params">()</span> </span>{</span><br><span class="line">        initLifecycle();</span><br><span class="line">    }</span><br></p></span></span></pre></td></tr></tbody></table></figure></div><p>主要看一下注释说明，如果你想要的使用非默认的构造函数，需要自己实现一个FragmentFactory去初始化，然后强烈推荐使用setArguments和getArguments存取参数。看了一下报错的类，可以基本确定是使用了带参数的构造函数</p><p>然后看一下报错的位置，在Fragment里搜索could not find Fragment constructor</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Fragment <span class="title">instantiate</span><span class="params">(@NonNull Context context, @NonNull String fname,</span></span></span><br><span class="line"><span class="function"><span class="params">            @Nullable Bundle args)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            Class<!--? extends Fragment--> clazz = FragmentFactory.loadFragmentClass(</span><br><span class="line">                    context.getClassLoader(), fname);</span><br><span class="line">            Fragment f = clazz.getConstructor().newInstance();</span><br><span class="line">            <span class="keyword">if</span> (args != <span class="keyword">null</span>) {</span><br><span class="line">                args.setClassLoader(f.getClass().getClassLoader());</span><br><span class="line">                f.setArguments(args);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> f;</span><br><span class="line">        } <span class="keyword">catch</span> (java.lang.InstantiationException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InstantiationException(<span class="string">"Unable to instantiate fragment "</span> + fname</span><br><span class="line">                    + <span class="string">": make sure class name exists, is public, and has an"</span></span><br><span class="line">                    + <span class="string">" empty constructor that is public"</span>, e);</span><br><span class="line">        } <span class="keyword">catch</span> (IllegalAccessException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InstantiationException(<span class="string">"Unable to instantiate fragment "</span> + fname</span><br><span class="line">                    + <span class="string">": make sure class name exists, is public, and has an"</span></span><br><span class="line">                    + <span class="string">" empty constructor that is public"</span>, e);</span><br><span class="line">        } <span class="keyword">catch</span> (NoSuchMethodException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InstantiationException(<span class="string">"Unable to instantiate fragment "</span> + fname</span><br><span class="line">                    + <span class="string">": could not find Fragment constructor"</span>, e);</span><br><span class="line">        } <span class="keyword">catch</span> (InvocationTargetException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InstantiationException(<span class="string">"Unable to instantiate fragment "</span> + fname</span><br><span class="line">                    + <span class="string">": calling Fragment constructor caused an exception"</span>, e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><p>可以看到这里通过反射，调用了空的构造函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">Fragment f = clazz.getConstructor().newInstance();</span><br></pre></td></tr></tbody></table></figure></div><p>但是对应的类没有空的构造函数，所以抛出了这个异常。然后看一下初始的地方，是FragmentActivity在onCreate中调用的mFragments.restoreSaveState(p);</p><p>解决方案：<br>Fragment必须有一个无参public的构造函数，否则在数据恢复的时候，会报crash<br>ps：手动测试发现私有的构造函数无法通过该Constructor.newInstance方法调用</p><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      Fragment，简称碎片，是Android 3.0（API 11）提出的，为了兼容低版本，support-v4库中也开发了一套Fragment API，最低兼容Android 1.6。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="Android" scheme="https://tamsiree.com/categories/TechnicalResearch/Android/"/>
    
    
      <category term="Android" scheme="https://tamsiree.com/tags/Android/"/>
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="Fragment" scheme="https://tamsiree.com/tags/Fragment/"/>
    
  </entry>
  
  <entry>
    <title>Android原生开发现状分析</title>
    <link href="https://tamsiree.com/TechnicalResearch/Android/Android%E5%8E%9F%E7%94%9F%E5%BC%80%E5%8F%91%E7%8E%B0%E7%8A%B6%E5%88%86%E6%9E%90/"/>
    <id>https://tamsiree.com/TechnicalResearch/Android/Android%E5%8E%9F%E7%94%9F%E5%BC%80%E5%8F%91%E7%8E%B0%E7%8A%B6%E5%88%86%E6%9E%90/</id>
    <published>2020-02-24T05:29:10.000Z</published>
    <updated>2020-03-14T06:23:46.731Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>许多 Android 开发者经常会问我，要学会哪些东西才能成为一个优秀的 Android 工程师？对于这个问题，他们的描述或多或少都有些差异。但是，总体来说，我们都需要学习一系列的技能，才能成为一个优秀的 Android 工程师。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-b740026db5b545ba.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-b740026db5b545ba.webp" class="lazyload" title></a></p><blockquote><p>当你好不容易学会了某个框架或者工具，觉得它很好用的时候，它或许就要过时了。</p></blockquote><p>Android 原生开发的生态系统变化得非常快。至少在过去的五年时间里，我经历过很多 Android 的变化，并且花费大量的时间参与其中。这几年里，Google 每两到三年，就会推出一组新的库和框架作为官方 Android 原生开发的指导方针。我花了大量的时间，回顾了这几年的变化，希望从中找出好坏。我相信，有很多的 Android 开发者，也和我一样。</p><p>过去的一年，大量的内容被添加、被废弃或被删除，文档被更改，新的官方指导方针被引入等等。即使我以 Android 原生开发生态系统的的标准来看待这些问题，所发生的这些事情，都是非常疯狂的。当我开始思考这些内容的时候，我已经无法在我的脑海中描绘出一个完整的、详细的 Android 开发环境。</p><p>因此，我决定要花一些时间去整理这些内容，然后再来写这篇文章。本文中，我会<strong>试图去总结 Android 原生开发的生态系统中发的事情，并且对原生开发未来的走向做一些预测。</strong>我会将我的想法分成不同的章节去叙述，这些内容没有特定的顺序，但我会把最有争议的内容放在文章最后。</p><p>我希望我的这篇文章可以给你带来一些启发和帮助，但是你需要记住，本文不可能包含所有的内容，有可能会漏掉许多重要的观点，并且本文中的内容可能会包含我个人的一些偏见。</p><h2 id="AndroidX"><a href="#AndroidX" class="headerlink" title="AndroidX"></a><strong>AndroidX</strong></h2><p>这个事情说起来有点儿疯狂，Google 官方在一年半前就发布了 AndroidX 的预览版本。并且在一年前， AndroidX 库就已经很稳定了，与此同时，Google 官方也宣布不再对遗留的库进行支持与开发。</p><p>用“稳定”来描述 AndroidX 这个库有点讽刺，现在关于 AndroidX 的任何东西都是不稳定的。Google 不断地在 AndroidX 下添加新的库和框架，使用 androidx 作为命名空间。许多“老”的 API（目前还不到一年）以非常快的速度发展。</p><p>到目前为止，我已经将两个应用程序迁移到了 AndroidX 上了。一切都很顺利，我已经不记得在这个过程中，带给了我多少的“惊喜“。Google 也提供了一个工具，Jetifier 可将依赖于支持库的库迁移为依赖于等效的 AndroidX 软件包，一个非常好用的工具。然而，即使是一个很小的工程，也不能实现“一键迁移”。</p><p>我也参与了没有迁移 AndroidX 的项目（项目并不计划迁移到 AndroidX）， 现在也没有任何问题，所以，不迁移 AndroidX， 在有些情况下，也是一种可行的方案。</p><p>总而言之，<strong>在新的 Android 项目中，建议直接使用 AndroidX。****并且，针对老项目，我也推荐你们将迁移到 AndroidX 列到计划中</strong>，虽然现在你看不到迁移 AndroidX 过后，带来的任何收益。无论如何，你都有可能在某个时间点进行 AndroidX 的迁移，所以最好能够按照自己的进度进行迁移，而不是在 6 个月后，你需要使用某个新的 AndroidX 库时，再进行紧急迁移。</p><h2 id="Jetpack"><a href="#Jetpack" class="headerlink" title="Jetpack"></a><strong>Jetpack</strong></h2><p>在讨论 AndroidX 过后，还必须要提到 Jetpack。在我的印象中，Jetpack 开始是作为“架构组件”的一把保护伞推出的。但是到后面，引入了几乎所有关于 AndroidX 的 API。因此，现在来看，我们看不到它与 AndroidX 之间的任何区别，除了 Marketing 和 PR（即市场和公关）。</p><p>当你查看 Jetpack 主页[2]时，会发现，这个页面并不是一个技术文档页面。这个更像是一个早期的 SaaS 页面。</p><p>看看例子，开发者“赞誉”：</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-6e09d340798bc752.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-6e09d340798bc752.webp" class="lazyload" title></a></p><p>或者“信赖应用”列表：</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-57e748ebf4d4215f.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-57e748ebf4d4215f.webp" class="lazyload" title></a></p><p>这些在市场公关层面更受关注，如果 Jetpack 在 2020 年申请独立 IPO，我都不会感到惊讶。</p><p>不过，说真的，尝试向自己生态系统内的开发者“销售”API 的想法，我觉得存在一些问题，比如说，谁会想看搜索出来第一个就是 ViewModel 广告呢？</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-0f7fc726bc069f4f.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-0f7fc726bc069f4f.webp" class="lazyload" title></a></p><p>总而言之，Jetpack 只是 AndroidX 库的一个聚合，所以在前面写到的 AndroidX 的内容，在很大的程度上也适用于 Jetpack。在后面的内容中，我将单独讨论其中一些 API。</p><h2 id="后台作业"><a href="#后台作业" class="headerlink" title="后台作业"></a><strong>后台作业</strong></h2><p>在 Android 应用程序不在前台执行逻辑时，你可以有很多种方式来实现后台运行，这也是 Android 动态化的用例之一。如果你不引入 doze , SyncAdapter , CGMNetworkManager , FirebaseJobDispatcher , JobScheuler 和最近的 WorkManager，可以使用常规的启动服务（非绑定服务）来实现。这些都是 Google 提供的 API ， 我可以说出所有的使用方式。当然，还有一些第三方库可以使用， 例如：Android-Job。</p><p>不过，Google 最近宣布，他们将围绕 WorkManager 来统一后台任务调度[3]。这听起来非常棒，我再也不用学习那么多后台调度的知识了，只是，不知道为什么，我好像以前在哪儿听到过这句话……</p><p>我们不管将来是否会统一使用 WorkManager，WorkManager 都还存在一些问题，比如可靠性。我不想在本文中解释为什么，但是请你一定要记住，如果你想在应用程序中使用 WorkManager，实现后台作业，一定要去读一下 dontkillmyapp.com 上的所有内容，并且要关注一下与 WorkManager 相关的 Google 问题列表[4]。</p><p><strong>Android 的后台作业由于碎片化等原因，导致它们一团糟，而且还很不可靠。</strong></p><p>在过去，我一直主张尽可能对数据和其它类型的后台处理进行同步。我或许是 SyncAdapter 最后的粉丝。今天，考虑到可靠性的问题，我建议，尽可能避免后台作业。如果你的老板一直坚持要使用这个功能，请将上面的链接发给他们，告诉他们，后台作业可能会需要数百小时的工作，才能实现，并且它带来的问题也会比它带来的好处多很多。</p><p>很多情况下，后台作业的需求是不可避免的。但是在大多数情况下，你都可以不使用它。虽然有时候会给用户带来一些不便，但是这可能是到目前为止的最佳方案。</p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a><strong>数据库</strong></h2><p>在有关 SQLite ORMs 的内容里面，没有什么令人吃惊的内容—— Room 主宰着一切。Room 从 2.2.0 开始，添加增量注解解析支持。不过，请你一定要记住，你应用程序的架构不应该关心你使用的是什么样的 ORM 框架。说到 Room，<strong>“架构组件”也只是一个营销术语，并不是一个技术角色。</strong></p><p>在 Android ORM 框架中，与 Room 竞争的主要是 SQLDelight。这是一个比 Room 老很多的库。但是据我所知，<strong>在过去的一年里，它几乎被全部重写。****但新版本的 SQLDelight 只针对 Kotlin。****另一方面，SQLDelight 也支持 Kotlin Multiplatform，所以，随着 Kotlin 使用的增多，我预计， SQLDelight 的采用率也会随之增加。</strong></p><p>顺便说一下，在 AndroidX 的命名空间下，也有 SQLite 的镜像。我不知道这个会有什么用处，但是如果你在应用程序中直接使用 SQLite，也可以对这个进行深入的研究。</p><p>此外，我们也不要忘记非关系型数据库，比如 Realm、Parse、Firebase、ObjectBox 等等 （其中一些，核心还是使用的 SQLite 来实现的），如果我没有记错的话，这些非关系型数据库中，大多数（甚至全部）都具有自动数据同步的功能。在之前有段时间里，它们非常地流行。但是现在，据我所知，已经不再流行了。也就是说，在短期内，我会持续关注非关系型数据库。</p><p>去年，我写了一个非常复杂的应用程序，对接了一个 Parse 的服务。这个 App 具有完全的离线支持，服务端本地化，用户指定的系统和语言设定，复杂的多媒体系统等功能。我在 Android 端上使用了 Parse 的 SDK。除了一些小的 WTF 以外，其他体验都非常棒。如果你们公司有很多后台开发人员，或者说你需要实现大量的服务端逻辑，这也许并不是最佳解决方案。但是对于仅仅只需要执行简单的 CRUD 操作的初创公司，这或许是一个不错的选择。</p><p><strong>一个警告：如果你打算采用数据库即服务解决方案（如 Firebase），请你一定要关注长期使用的成本和影响。</strong></p><h2 id="外部存储"><a href="#外部存储" class="headerlink" title="外部存储"></a><strong>外部存储</strong></h2><p>Android 外部存储发生了一个“很有意思”的变动。</p><p>如果，你在开发 App 的时候，把 Target API 调整为 29 及以上，之前获取 SD 卡文件的方法，现在都不能使用了，并且不会提示任何异常。现在，你需要使用 Android 存储访问框架来进行更细粒度的文件访问。不幸的是，Android 存储访问框架的工作原理与之前的读取方式完全不同，你可能需要对代码进行大量的重构，来实现新的文件访问和读取。</p><p>Google 原本希望在 Android 10 上，对所有的应用程序进行文件访问的限制，推广使用 Android 存储访问框架的方式进行文件访问。但是这个改动引起了社区内的强烈抗议，所以 Google 决定推迟推出这个功能。因此，现在即使你的应用程序在 Target API 29 及以上，也可以设置为在“Legacy”模式下可读取文件。不过，有可能在 Android 的下一个版本，不管你设置的 Target API 为多少，都会限制应用程序使用新的作用域访问模式。</p><p>到目前为止，我也还没有更新我应用程序的文件访问方式。但是从互联网上的讨论来看，实现新的文件访问方式是一项很具挑战的任务，虽然你的应用程序在“Legacy”模式下，没有任何异常，但是我建议你最好从现在开始，着手对代码进行重构和测试，以防发生不可控的事情。</p><h2 id="Shared-Preferences"><a href="#Shared-Preferences" class="headerlink" title="Shared Preferences"></a><strong>Shared Preferences</strong></h2><p>在几周前，AndroidX 家族增加了一个新的库，这条提交信息写道：</p><blockquote><p>新的库用来替换 SharedPreferences，新库的名称还没有确定下来，这次提交只是为了评审和设计文档（请自行申请设计文档）。</p></blockquote><p>现在还没有什么值得担心的。不过，<strong>从长远来看，SharedPreferences 会被废弃掉，取而代之，使用新的库来实现类似的功能。</strong></p><p>与 SharedPreferences 不同的是，这个新的库默认情况下使用的是异步的方式。换句话说，如果你需要取某个值，你需要实现回调，通过这个回调才能拿到值。</p><p>如果你对这种异步回调的原理感兴趣，你可以去看看 StackOverflow 上的这个回答。Reddit 的一个用户 Tolriq 分享了他们的 App 遇到的一个 SharedPreferences 的 Bug，这个问题影响了万分之一的月活用户。对于一般的应用程序来说，这个问题并没有什么明显的影响。但在一些需要高可靠性的应用上，就显得很不可靠了。举个例子，如果在 Android 汽车上，应用程序的无响应和崩溃会引起驾驶员的注意力被分散，这将有可能导致出现交通意外。</p><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a><strong>依赖注入</strong></h2><p>在依赖注入领域，最大的新闻莫过于 Dagger-Android 被弃用，有两点需要强调一下，首先我所说的弃用，不是正式的弃用，因为官方并没有发布声明。其次，Dagger-Android 并不是指整个 Dagger 2 框架，只是指其中相对比较新的部分。详细细节可以看我的另一篇文章[8]。</p><p>在 Android 领域也存在其他的依赖注入框架，但是我不认为他们会比 Dagger 更好。值得一提的是，Koin 是一个不错的依赖注入框架，但是我依然觉得它也不会引起多大的潮流。它之所以会被采用，无非是这两个原因，一个是，它拥有比 Dagger 好很多的文档，降低了很大的学习成本。第二个是它基于 Kotlin 进行编写，因为 Kotlin 的热度，给它也带来了不少的关注。到目前为止，Kotlin 的热潮几乎已经全部过去了，所以，我预测，Koin 的关注也将会逐渐减少。</p><p>不管这些框架如何发展，手动依赖注入的发展都会很缓慢。</p><p>Google 声称：随着应用程序的增大，手动依赖注入的成本会出现指数级增长。但是我并不这么认为，我觉得 Google 既不了解 “指数” 的含义，也没有实际去“衡量”过任何东西。这个申明的内容是错误的，我希望 Google 不再使用这种方式误导社区。</p><p>事实上，这种手动依赖注入在后端比较常见（尤其是微服务中，你并不想在每个服务中都添加对注入框架的依赖），也可以正常的工作。在后端，反射被经常用到，所以后端的依赖注入框架并不需要解析编译时的代码。</p><p>在 Android 上，解决方案与后端有一些不同，我们几乎不会用反射方案的依赖注入框架，所以就只剩下 Dagger 可以用了。其实，反射虽然会影响性能，但是在大多数项目，都是可以用的。我的意思并不是建议你们使用反射方案的依赖注入框架，这个选择并非是非黑即白的，你需要按照你的要求来进行选择。</p><p>无论如何，Android 领域上， Dagger 作为依赖注入框架的现行标准，我们所有人都在使用它。尽管 Google 在宣传上，对 Dagger 的使用成本使用漂亮的绿色图形进行展示，但是 Dagger 使用成本在实际上依然会随着时间增长而快速增长。越来越多的代码，在编译构建的时候需要花费更多的时间；你的开发人员越多，代码编译的次数就越多。当然，所有的开发人员都需要学习如何使用 Dagger ， 这本身就是一项很大的成本。</p><p>换句话说，<strong>虽然 Dagger 可以减少项目中编写的代码，但是需要花更多的时间去培训新人，在编译上花费更多的时候。****所以，对大型项目来说，使用 Dagger 会更耗时。</strong></p><p>在一个大型项目中，编译耗时会逐渐成为生产力的瓶颈。当然， Dagger 也提供了很多优秀新的功能来帮助你优化编译时间，但前提是，你需要知道如何使用这些工具。读到这里，我相信你对手动依赖注入会很感兴趣。</p><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a><strong>数据绑定</strong></h2><p>作为一个 Android 开发者，都知道在写布局的时候，会经常调用 findViewById() 这个方法。DataBinding 诞生就是为了取代掉这个模板方法。老实说，在使用 findViewById 的时候，我并没有遇到过任何问题，虽然希望摆脱掉它，但我并不认为使用 DataBinding 就是一个更合理的方式。有一个好消息，<strong>很快我们就可以使用 ViewBinding 来摆脱 findViewById 了，也不需要使用 DataBinding。</strong></p><p>说句实话，我不相信 DataBinding。对于它想解决的问题来说，这种方案在过于复杂。在使用 DataBinding 的时候，需要把代码逻辑放到 XML 布局中，这听起来很不错，但是经验丰富的开发人员都不会这么做，这个做法也是 Databinding 的另一个缺点。</p><p>早在 2016 年 11 月的时候，那个时候 Google 还在大肆宣传 DataBinding。我在 StackOverflow 的回答中作了如下预测：</p><blockquote><p>我可以非常自信地预测：DataBinding 不会成为行业标准。DataBinding 可以带来短期收益，但是从长远来看，它将会使代码变得不可维护。一旦 Databinding 被长期使用，它的缺点就会暴露出来，将来它一定会被废弃掉。</p></blockquote><p>我没有统计过使用 DataBinding 的项目，但是很明显，它没有成为行业标准。我从来没有在自己的项目中使用过它，也很少看到其他开发者使用。据我猜测，当 ViewBinding 逐渐成熟，并且被广泛采用，DataBinding 将会作为一个“传统”框架，大量地被引用到。</p><h2 id="状态保存"><a href="#状态保存" class="headerlink" title="状态保存"></a><strong>状态保存</strong></h2><p>自从引入 ViewModel 架构组件以来，在 Android 应用程序中，当配置发生更改，保存与恢复状态的逻辑，就变成了一个烂摊子，没有人去管理。虽然这样子说有点过分，但是我觉得，这已经是我最温和的表达方式了。</p><p>Gabor Varadi（又叫 Zhuinden）在 Reddit 论坛中描述了 ViewModel 引入带来的问题，我不需要再去写一遍了。再次强调，不推荐使用 onRetainCustomNonConfigurationInstance()，推荐使用 ViewModel。</p><p>在帖子的末尾，Gabor 作了一些预测：</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-3e19af393ababcf5.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-3e19af393ababcf5.webp" class="lazyload" title></a></p><p>你知道吗？Fragment 状态保存的方法已经被弃用了。</p><p>在我看来，废弃 Fragment 状态保存的方法是非常好的主意，众所周知， Fragment 的 onAttach() 和 onDetach() 方法就是为了支持状态保存的，现在废弃了状态保存的方法，那这两个方法也可以被废弃掉，并且这样子可以简化 Fragment 的生命周期。我长期以来都建议不保存 Fragments 的状态，忽略掉 onAttach 和 onDetach 方法，和我之前写的处理 Framgent 生命周期方法一致[12]。</p><p>尽管有很多理由表明，要废弃掉 Fragment 的状态保存，但是也不可能废弃掉 onRetainCustomNonConfigurationInstance()，这个可不是我说的，是 Jake Wharton 说的。在上面 Gabor 的帖子上，他的回复获得了最多的点赞。虽然我不太赞成 Jake 所说的话，但是我找不到更好的理由去说服自己。这个方法和 ViewModel 后台使用的原理完全一致，完全没有理由废弃掉它。</p><p>那我们应该怎么对待这些废弃的方法呢？Google 不管这些方法使用的技术方案和优势，都强制所有的 Andorid 应用迁移到 ViewModel。即使这些方案有可能优于 ViewModel 本身，他们也愿意放弃。听起来有点像是阴谋论吧。</p><p>我确实不喜欢保存非配置的状态，并且废弃掉对我没有任何影响，因为我从来都没有使用过它。事实上，大多数应用程序都不需要这些方法，当然，ViewModel 也不需要。我们需要处理状态改变的方法仅仅只有 onSaveInstanceState(Bundle) 这个方法。这个方法非常简单明了，可以同时处理保存和恢复的逻辑。所以，只要能用这种方式保存状态就可以了，我相信，我不是唯一一个使用这个方法的人。虽然 Google 对 ViewModel 进行了大量的营销宣传，但是对于很多经验丰富的开发者来说， ViewModel 还是太复杂了，我们有更简单有效的方法来处理状态存储。</p><p>如果 Google 别有用心，想强制所有项目使用 ViewModel ， 那么它还将废弃掉 onSaveInstanceState(Bundle)方法。这听起来有点不可思议，如果将来真的这样发展，那说明我的基础理论是正确的。</p><p>考虑到 Android 的内存管理机制，Google 不可能在没有稳定的解决方案之前就废弃掉 onSaveInstanceState(Bundle) 。“幸运的是”，我们已经可以使用 ViewModel 来完成相关工作了。</p><p>我想，在一两年内，就能看到我的理论是否正确。</p><p>总而言之，如在本节开头所说，Android 状态保存将变成一个烂摊子。两年多前，我曾经写过 ViewModel 架构组件有害的文章[13]时，我就预测 ViewModel 会对保存与恢复状态的一点点造成影响。我所预测的都变成了现实，而且现在的情况比我曾经的预测更糟。</p><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a><strong>并发</strong></h2><p>在 Android 并发编程中，一个重要的 API 就是 AsyncTask， 不过它现在已经被弃用掉了。我之前已经写过很详细的文章分析过它了[14]，在这里，将不再赘述。</p><p>下面我要说的内容，有可能会伤害很多读者，但是，请不要“恨”我。</p><p><strong>RxJava，是一个 Andorid 中常见的多线程框架。但是它现在将逐渐退出历史的舞台。</strong>从 StackOverflow 的趋势图可以看出：</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-5c34315e36b66374.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1095900-5c34315e36b66374.webp" class="lazyload" title></a></p><p>很多开发者对这个说法提出了质疑，他们反驳说这个数据不具有代表性，并且我们可以找到其它的理由来解释图上所发生的事情。他们所说可能是正确的，我个人本身也不是数据科学家。但是从图中我们可以看到，RxJava 与 AsnycTask 有相同的斜率。</p><p><strong>如果你没有时间去学习 RxJava 如何使用，并且你的项目中也没有使用过 RxJava，我建议你不要在你的项目中使用 RxJava。</strong>事实上，我也一直不推荐使用 RxJava ，现在已经有数据支持我的这个观点了。</p><p>如果你的项目中使用了 RxJava，你也不用慌张，不需要紧急去重构你的项目。如果你的项目只有你一个人，或者整个项目组成员基本不会变动，保持项目现状就好了。但是你需要记住，<strong>以后要招具有 RxJava 开发经验的人会越来越困难，新招开发人员可能需要学习使用 RxJava。</strong>广泛使用 RxJava 的项目，在以后也会被认为”不酷”，就像今天还在使用 AsyncTask 和 Loader 的项目一样。</p><p>我知道，很多 RxJava 的开发者都是 RxJava 骨灰级的粉丝，他们花了数周的时间去学习 RxJava，付出巨大的努力才说服队友在项目中使用 RxJava。现在我却在这里说 RxJava 已经过时了。我只能说，这不是我的个人意见，我只是对现有的情况进行分析，并根据我所看到的内容做出预测。我也有可能是错的。两军交战，不斩来使，请大家不要“攻击”我。</p><p>在 Kotlin 中，使用协程来实现多并发。最近使用协程实现了一些简单的用例，我发现它复杂、不稳定，甚至还有一些 Bug。</p><p>所有的人都在说，协程可以降低并发的复杂度，使用并发变得简单。我从来都不相信这句话，因为我知道并发从根本上来说就是很复杂的。我动手写过一些测试用例过后，据我的经验，我可以很自信的告诉你，协程不能使并变得简单。我认为，协程会增加复杂性，我建议你们谨慎使用他们。</p><p>在 Kotlin 中，协程将作为处理多线程的默认方式，如果你已经开始使用 Kotlin 进行开发，那么你应该花点时间，去学习一下，协程的使用。</p><p>据我所知，还有一个 Flow 框架，它是基于协程，添加了流运算符。在几个月之前，已经稳定了。所以现在也没啥好评价的。</p><h2 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a><strong>Kotlin</strong></h2><p>现在，让我们来讨论一下 Kotlin 在 Android 领域的现状。根据我个人的经验来看，这是一个很敏感的话题，不论我所说的话有多么公正客观，都会有一些粉丝评价我所说的话是“Shit”。但从专业的角度来说，Kotlin 的话题是跳不过去的，所以，我要强调的是，这些内容只是我的个人观点，仅供参考。</p><p><strong>在 Android 开发中，使用 Kotlin，会大大地增加你的编译时间。</strong></p><p>在我的另一篇文章中，我统计了使用 Kotlin 过后，编译时间的增长情况。结果是，全量编译的情况下，会增加 18%左右的耗时，如果是增量编译，则会增加 8% 左右的耗时。</p><p>Uber 和 JetBrains 联合发表了他们有关 Kotlin 对项目编译时间的影响， 在文章中，显示的结果非常的悲观。他们表示，如果你不开启 IDE 中的 annotation processors ，引入 Kotlin 的项目，编译构建的时间大约会增加四倍，如果开启了 annotation processors，编译构建的时间也会增加 50% ~ 100%。</p><p>Uber 的结果与 OkHttp 迁移到 Kotlin 后得到的结果是一致的，都是编译时长都增加了 4 倍。</p><p>别担心，虽然这个结果让人吃惊，这个也不是你的错，很多人都和你一样，正在使用 Kotlin。这个问题，虽然很重要，但是它并没有引起广泛的关注。我觉得，Google 也在试图解决这个问题。我曾问过 Google 相关的开发者，并进行了深度的交流，他们在这个问题给我的回答是：“这是一个很棘手的问题，我宁愿不做”。</p><p>Kotlin 除了会增加编译时间，直到上周，才支持增量注解处理，而 Java ，在 10 个月以前就支持了。</p><p>在两年前，我就写了篇文章用于告诫大家，<strong>过早使用 Kotlin 会存在很大的风险</strong>。你可以从评论中可以看出，我在很长的一段时间里面，都是“Kotlin 的黑粉”。</p><p>在你的实际工作中，你会发现，与上面的数据相比，Kotlin 的问题远不止于此。在大型的 Android 项目中，编译构建的时间会严重阻碍项目的发展。即使到了今天，Kotlin 已经被正式使用两年了，Kotlin 编译效率依然比 Java 差很多。不管 Kotlin 能给你带来多少优点，编译耗时的问题，都有可能导致你不在使用它。</p><p>不管如何，Google 向整个 Android 的开发生态推出 Kotlin 作为第一首选语言，现在 Kotlin 的使用量也越来越大，我们也不得不进行跟进。就我个人而言，我还没有在我的项目中使用 Kotlin。因为 Kotlin 还不够成熟，并且我的客户也不会为我的学习付费，并且我也不希望在 Kotlin 上浪费时间。但是从现在开始，Kotlin 已经逐渐稳定，我也在我拿手的项目上尝试过， 在新项目中，我也会考虑使用它进行开发。有一些开发者认为：“必须在新项目中使用 Kotlin 进行开发“，我不同意这个观点，我觉得这是一个权衡的问题，Kotlin 现在已经成为了一个重要的选项，只要适合当前的项目，就是最好的语言。</p><p>对于是否要将已有的项目迁移到 Kotlin 上， 我不能给你太好的建议。你需要根据你项目的情况，具体问题具体分析。如果你一旦决定要进行迁移，这篇文章中列举的一些可能存在的问题，可能对你有帮助。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>请允许我用 Android 开发者的背景，描述一下我这两年所经历的事情：</p><p>在过去的两年里，我启动了三个项目，我一直争取，至少参与其中一个项目的开发工作。我回过头来看这些已经存在的项目，并分析这些项目前期所做的技术决定对整个项目的影响。我写了这篇文章，也制作了很多 Android 开发的高级课程，也花了很多时间在互联网上讨论 Android 相关的主题。</p><p>即使这样，我今天依然感觉跟不上 Android 整个生态系统的变化。可想而知，对于那些经验不足，需要指导的 Android 开发者而言，是多么地绝望。我现在已经无法想像，现在从头开始学习 Android 的感觉。<strong>当你好不容易学会了某个框架或者工具，觉得它很好用的时候，它或许就要过时了。</strong>现在也许是加入 Android 开发大家庭最坏的时候。Google 正为他们的“包容性”沾沾自喜，但这一切，对初学者来说，都是极其痛苦的。</p><p>Google 在 Android 框架中所做的事情，会导致大量的时间浪费。我们需要花费数小时的时间才能读完所有更改的内容，更别说在项目中应用它们了。我宁愿花时间来创造价值，而不是舍本逐末。</p><p>在本文中，我试图总结 Android 开发的现状，并对未来作出了一些预测。文章中，可能包含错误和漏掉一些重要信息，请随时在下面的评论中告知我。文章中的内容都是客观内容，虽然我提出了一些有争议观点，但我相信我是对的。</p><p>还有，在文章中，我引用了很多之前写的帖子，我并不是为了炫耀。而是让你能够阅读之前的预测与现在的状况进行对比，虽然那些文章在那个时候读起来很疯狂，就像现在你读本文一样，但是我的这些预测都是很准确的。当然，我也想说：“看，我说得对吧”。鉴于我发布的内容具有争议，当得知没有误导读者，我也会感到很欣慰。有时候，我也宁愿我的预测是错的，Google 正在为开发者着想。但是到目前为止，情况并非如此。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>不论以后选择什么方向发展，目前重要的是把Android方面的技术学好，毕竟其实对于程序员来说，要学习的知识内容、技术有太多太多，要想不被环境淘汰就只有不断提升自己，<strong>从来都是我们去适应环境，而不是环境来适应我们！</strong></p><p>当程序员容易，当一个优秀的程序员是需要不断学习的，从初级程序员到高级程序员，从初级架构师到资深架构师，或者走向管理，从技术经理到技术总监，每个阶段都需要掌握不同的能力。早早确定自己的职业方向，才能在工作和能力提升中甩开同龄人。</p><hr><blockquote><p>作者：Vasiliy Zukanov，独立 Android 开发及软件顾问<br>链接：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.techyourchance.com%2Fthe-state-of-native-android-development-november-2019" target="_blank" rel="noopener">https://www.techyourchance.com/the-state-of-native-android-development-november-2019</a><br>译者：罗昭成，Android 开发者</p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      许多 Android 开发者经常会问我，要学会哪些东西才能成为一个优秀的 Android 工程师？对于这个问题，他们的描述或多或少都有些差异。但是，总体来说，我们都需要学习一系列的技能，才能成为一个优秀的 Android 工程师。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="Android" scheme="https://tamsiree.com/categories/TechnicalResearch/Android/"/>
    
    
      <category term="Android" scheme="https://tamsiree.com/tags/Android/"/>
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
  </entry>
  
  <entry>
    <title>Android之Room库的使用</title>
    <link href="https://tamsiree.com/TechnicalResearch/Android/Room/Android%E4%B9%8BRoom%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://tamsiree.com/TechnicalResearch/Android/Room/Android%E4%B9%8BRoom%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-02-22T06:29:49.000Z</published>
    <updated>2020-02-24T07:07:12.996Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近疫情待在家里，想着没事就做一个APP练练手，需要用到数据库的本地化方案，便尝试深入了解以下 Google官方的ORM库 <code>Room</code>，配置和使用还算比较简单，没用过的可以查看 <a href="https://developer.android.google.cn/training/data-storage/room/" target="_blank" rel="noopener">官方文档</a>,上手还算比较容易。可以参考Google官方在GitHub上的示例库 <a href="https://codelabs.developers.google.com/codelabs/android-room-with-a-view/" target="_blank" rel="noopener">[Android Room with a View]</a> ,一步一步非常清晰的展现了框架的架构与流程。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h1 id="问题归纳"><a href="#问题归纳" class="headerlink" title="问题归纳"></a>问题归纳</h1><blockquote><p>新入手的库当然会遇到坑的啦！  </p></blockquote><h2 id="模糊查询的Sql语句拼写问题"><a href="#模糊查询的Sql语句拼写问题" class="headerlink" title="模糊查询的Sql语句拼写问题"></a>模糊查询的Sql语句拼写问题</h2><p>本来一切增删改查都进行的很顺利，然后 APP 中有一个模糊搜索的功能。<br>例如查找 person 表中 name 或者 name_pinyin 包含某字符串的所有用户，一般sql语句是这样</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">From</span> person <span class="keyword">Where</span> <span class="keyword">Name</span> <span class="keyword">Like</span> %<span class="keyword">name</span>% <span class="keyword">OR</span> Name_Pinyin <span class="keyword">Like</span> %name_pinyin%</span><br></pre></td></tr></tbody></table></figure></div><p>在Android端里面一般用的数据库都是注解 @query ，后面拼上需要查询的语句，当然每个数据库框架要求的格式可能不一样，但是最终编译成的最终语句肯定是上面那种格式的。</p><p>终于，皇天不负有心人，最终经一个群里大佬提醒以及在Stack Overflow上面搜了一下，找到了最终答案，应该是这样的</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">@Query</span>(<span class="string">"SELECT * FROM person WHERE Name LIKE '%' || :name || '%' OR Name_Pinyin LIKE '%' || :name_pinyin || '%'"</span>)</span><br></pre></td></tr></tbody></table></figure></div><p>原来是用双竖杠去拼接，而不是加号,在sql语句拼接中:</p><blockquote><p>在SQL中的SELECT语句中，可使用一个特殊的操作符来拼接两个列。<br>根据你所使用的DBMS，此操作符可用加号（+）或两个竖杠（||）表示。<br>在MySQL和MariaDB中，必须使用特殊的函数。<br>说明：是+还是||？<br>Access和SQL Server使用+号。DB2、Oracle、PostgreSQL、SQLite和Open Office Base使用||。详细请参阅具体的DBMS文档。</p></blockquote><p><code>Stack Overflow</code>上的评论：  </p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2998957-75ac0ad97fecc0c4.webp" data-fancybox="group" data-caption="Stack Overflow" class="fancybox"><img alt="Stack Overflow" title="Stack Overflow" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2998957-75ac0ad97fecc0c4.webp" class="lazyload"></a></p><hr><blockquote><p>参考链接：<br><a href="https://www.jianshu.com/p/cfde3535233d" target="_blank" rel="noopener">[<code>Android—Room数据库（介绍）</code>]</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      最近疫情待在家里，想着没事就做一个APP练练手，需要用到数据库的本地化方案，便尝试深入了解以下 Google官方的ORM库 `Room`。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="Android" scheme="https://tamsiree.com/categories/TechnicalResearch/Android/"/>
    
      <category term="Room" scheme="https://tamsiree.com/categories/TechnicalResearch/Android/Room/"/>
    
    
      <category term="Android" scheme="https://tamsiree.com/tags/Android/"/>
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="Room" scheme="https://tamsiree.com/tags/Room/"/>
    
  </entry>
  
  <entry>
    <title>Android之JetPack库</title>
    <link href="https://tamsiree.com/TechnicalResearch/Android/Android%E4%B9%8BJetPack%E5%BA%93/"/>
    <id>https://tamsiree.com/TechnicalResearch/Android/Android%E4%B9%8BJetPack%E5%BA%93/</id>
    <published>2020-02-20T16:07:43.000Z</published>
    <updated>2020-02-24T07:12:19.117Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近好几个小伙伴问我什么是<strong>Android JetPack</strong>，听说这个包好像有点牛，你会不？</p><p>我心想什么鬼！Android JetPack这货不是一个库，是一整套的库，是一种信仰一种态度好么。从前，Android开发者基本都是被放养的。生态基本全靠自建，代表有Square全家桶，Glide，Google自己也肯定是出力的，但是并没有明确Android开发的几个大方向，所以安卓的开发生态一直是百花齐放百家争鸣。带来的问题就是经常出现包引用莫名报错。</p><p>事情从2017年发生了转机，在Google IO 2017，官方终于正视了这个问题开始尝试管理这个混乱的Android开发环境，并推出了Architecture Component，主要有以下几项：</p><p>Room: 官方的ORM库（个人认为比GreenDao好用）ViewModel/LiveData：生命周期管理工具，自此Android才真正的应用上了MVVM（BTW，DataBinding也归到了JetPack里）</p><p>在2018年，AndroidX横空出世，并且从1开始，意图取代经常自己打自己脸的Support Lib。</p><p>一张图来看看Google对JetPack有多看重</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/636954-4718fd5832dda024.webp" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/636954-4718fd5832dda024.webp" class="lazyload"></a></p><h1 id="一、那JetPack到底是啥呢？"><a href="#一、那JetPack到底是啥呢？" class="headerlink" title="一、那JetPack到底是啥呢？"></a>一、<strong>那JetPack到底是啥呢？</strong></h1><blockquote><p>Jetpack is a suite of libraries, tools, and guidance to help developers write high-quality apps easier. These components help you follow best practices, free you from writing boilerplate code, and simplify complex tasks, so you can focus on the code you care about.</p></blockquote><p>Jetpack 是一套库、工具和指南，可帮助开发者更轻松地编写优质应用。这些组件可帮助您遵循最佳做法、让您摆脱编写样板代码的工作并简化复杂任务，以便您将精力集中放在所需的代码上。</p><h1 id="二、JetPack里的组件"><a href="#二、JetPack里的组件" class="headerlink" title="二、JetPack里的组件"></a>二、JetPack里的组件</h1><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/636954-729fe067ddf62ef8.webp" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/636954-729fe067ddf62ef8.webp" class="lazyload"></a></p><p>上图就是JetPack中包含的组件列表，每个组件都是相对独立的，可以被单独使用和构建。其中像被介绍的最多，也是最常被使用的LiveData, ViewModel, Room, Navigation, WorkManager之类的都发布了正式版，而<strong>CameraX</strong>, Compose之类的还处在Alpha版本，未正式发布，官方并不建议在生产环境中使用。</p><p>然后说下，JetPack所有的组件都是基于AndroidX构建的，如果想在项目中使用JetPack需要先将项目中对Support Lib的依赖全部换成<strong>AndroidX</strong>。</p><p>Android目前已经发展了11年，可以说是比较成熟的技术了，一开始时框架很少，也没有什么规范，所有的代码都是要自己写，比如网络请求，数据库请求，数据解析等等。后来出现了一些框架来帮助开发者快速进行开发，比如XUtils、Volley、OKHttp、EventBus等，随着框架越来越多，一个应用可以有多种技术选型，直接导致应用开发越来越不规范，导致做出来的应用质量参差不齐，这显然不是谷歌想看到的。谷歌随后推出了MVP和MVVM相关的官方例子，效果很一般，而且覆盖面只是在架构上，Goole I/O 2018大会上推出的Android Jetpack有望解决以上的问题。</p><h1 id="三、Android-Jetpack简介"><a href="#三、Android-Jetpack简介" class="headerlink" title="三、Android Jetpack简介"></a><strong>三、Android Jetpack简介</strong></h1><p>Jetpack并不是一个框架或者组件，它是一套库、工具和指南的集合，可帮助开发者更轻松地编写优质应用。这些组件可帮助开发者遵循最佳做法、摆脱编写样板代码的工作并简化复杂任务，以便将精力集中放在所需的代码上。<br>Android Jetpack中的很多组件并不都是新开发的，而是很早就有了，比如在Goole I/O 2017大会时推出了 Android Architecture Component（AAC），它包括了LifeCycle、LiveData、ViewModel、Room。在Goole I/O 2018大会上，<br>用AndroidX替代了Android Support Library，并在Android Architecture Component的基础上发布了Android Jetpack，AndroidX也是属于Android Jetpack。</p><p>Jetpack主要特性有以下三点：</p><p><strong>1.加速开发</strong><br>组件可单独使用，也可以协同工作，当使用kotlin语言特性时，可以提高效率。</p><p><strong>2.消除样板代码</strong><br>Android Jetpack可管理繁琐的Activity（如后台任务、导航和生命周期管理）。</p><p><strong>3.构建高质量的强大应用</strong><br>Android Jetpack组件围绕现代化设计实践构建而成，具有向后兼容性，可以减少崩溃和内存泄漏。</p><h1 id="四、Android-Jetpack分类"><a href="#四、Android-Jetpack分类" class="headerlink" title="四、Android Jetpack分类"></a><strong>四、Android Jetpack分类</strong></h1><p>下图是Jetpack的分类。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1417629-accd8be7a6cf03f0.webp" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1417629-accd8be7a6cf03f0.webp" class="lazyload"></a></p><p>谷歌仍旧不断的完善Android Jetpack，截至到2019年8月已经有很多新加的组件并没有显示在上图中，比如CameraX等。Android Jetpack分类有4种，分别是Architecture、Foundationy、Behavior、UI，下面分别介绍下。</p><h4 id="1-Architecture（架构组件）"><a href="#1-Architecture（架构组件）" class="headerlink" title="1. Architecture（架构组件）"></a><strong>1. Architecture（架构组件）</strong></h4><p>Architecture指的是架构组件，帮助开发者设计稳健、可测试且易维护的应用。架构组件可以说是对应用开发帮助最大的组件，本系列也是围绕着架构组件进行讲解。</p><p><strong>DataBinding</strong>：以声明方式将可观察数据绑定到界面元素，通常和ViewModel配合使用。</p><p><strong>Lifecycle</strong>：用于管理Activity和Fragment的生命周期，可帮助开发者生成更易于维护的轻量级代码。</p><p><strong>LiveData</strong>: 在底层数据库更改时通知视图。它是一个可观察的数据持有者，与常规observable不同，LiveData是生命周期感知的。<br>Navigation:处理应用内导航。</p><p><strong>Paging</strong>:可以帮助开发者一次加载和显示小块数据，按需加载部分数据可减少网络带宽和系统资源的使用。</p><p><strong>Room</strong>:友好、流畅的访问SQLite数据库。它在SQLite的基础上提供了一个抽象层，允许更强大的数据库访问。</p><p><strong>ViewModel</strong>: 以生命周期的方式管理界面相关的数据，通常和DataBinding配合使用，为开发者实现MVVM架构提供了强有力的支持。</p><p><strong>WorkManager</strong>: 管理Android的后台的作业，即使应用程序退出或设备重新启动也可以运行可延迟的异步任务。</p><p>官方推荐的Android应用架构如下图所示。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1417629-5811fbd287c2f453.webp" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1417629-5811fbd287c2f453.webp" class="lazyload"></a></p><p>这些架构组件既可以配合使用，也可以单独使用，这里建议还是尽量按照官方推荐的来。</p><h4 id="2-Foundationy（基础组件）"><a href="#2-Foundationy（基础组件）" class="headerlink" title="2. Foundationy（基础组件）"></a><strong>2. Foundationy（基础组件）</strong></h4><p>基础组件提供横向功能，例如向后兼容性、测试、安全、Kotlin 语言支持，并包括多个多个平台开发的组件。</p><p><strong>Android KTX</strong>：优化了供Kotlin使用的Jetpack和Android平台API。帮助开发者以更简洁、更愉悦、更惯用的方式使用Kotlin进行Android开发。<br><strong>AppCompat</strong>：帮助较低版本的Android系统进行兼容。<br><strong>Auto</strong>: 开发Android Auto应用的组件，提供了适用于所有车辆的标准化界面和用户交互。<br><strong>检测</strong>：从AndroidStudio中快速检测基于Kotlin或Java的代码。<br><strong>多Dex处理</strong>：为具有多个Dex文件应用提供支持。<br><strong>安全</strong>：安全的读写加密文件和共享偏好设置。<br><strong>测试</strong>：用于单元和运行时界面测试的Android 测试框架。<br><strong>TV</strong>: 构建可让用户在大屏幕上体验沉浸式内容的应用。<br><strong>Wear OS</strong>:开发Wear应用的组件。</p><h4 id="3-Behavior（行为组件）"><a href="#3-Behavior（行为组件）" class="headerlink" title="3. Behavior（行为组件）"></a><strong>3. Behavior（行为组件）</strong></h4><p>行为组件可帮助开发者的应用与标准Android服务（如通知、权限、分享）相集成。</p><p><strong>CameraX</strong>：帮助开发简化相机应用的开发工作。它提供一致且易于使用的界面，适用于大多数Android。 设备，并可向后兼容至Android 5.0（API 21）。<br><strong>DownloadManager</strong>：处理长时间运行的HTTP下载的系统服务。<br><strong>媒体和播放</strong>：用于媒体播放和路由（包括Google Cast）的向后兼容API。<br><strong>通知</strong>：提供向后兼容的通知API，支持Wear和Auto。<br><strong>权限</strong>：用于检查和请求应用权限的兼容性API。<br><strong>设置</strong>：创建交互式设置，建议使用AndroidX Preference Library库将用户可配置设置集成到应用中。<br><strong>分享操作</strong>：可以更轻松地实现友好的用户分享操作。<br><strong>切片</strong>：切片是一种UI模板，创建可在应用外部显示应用数据的灵活界面元素。</p><h4 id="4-UI（界面组件）"><a href="#4-UI（界面组件）" class="headerlink" title="4. UI（界面组件）"></a><strong>4. UI（界面组件）</strong></h4><p><strong>Animation and Transition</strong>：该框架包含用于常见效果的内置动画，并允许开发者创建自定义动画和生命周期回调。<br><strong>Emoji Compatibility</strong>：即便用户没有更新Android系统也可以获取最新的表情符号。<br><strong>Fragment</strong>：组件化界面的基本单位。<br><strong>布局</strong>：用XML中声明UI元素或者在代码中实例化UI元素。<br><strong>调色板</strong>:从调色板中提取出有用的信息。</p><h1 id="五、在应用中引入Jetpack相关组件"><a href="#五、在应用中引入Jetpack相关组件" class="headerlink" title="五、在应用中引入Jetpack相关组件"></a><strong>五、在应用中引入Jetpack相关组件</strong></h1><p>在项目build.gradle中添加google() 库，如下所示。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">gradle</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight gradle"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">allprojects</span> {</span><br><span class="line">      <span class="keyword">repositories</span> {</span><br><span class="line">          google()</span><br><span class="line">          jcenter()</span><br><span class="line">      }</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure></div><p>如果想引入Room，可以在模块build.gradle中这么写：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">gradle</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight gradle"><table><tbody><tr><td class="code"><pre><span class="line">implementation   <span class="string">"android.arch.persistence.room:runtime:1.1.1"</span></span><br><span class="line">annotationProcessor   <span class="string">"android.arch.persistence.room:compiler:1.1.1 "</span></span><br><span class="line">androidTestImplementation  <span class="string">"android.arch.persistence.room:testing:1.1.1"</span></span><br></pre></td></tr></tbody></table></figure></div><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h1><p>这篇文章内部不多，旨在让大家了解Android Jetpack是什么，包括什么，如何引用，我们要准备开始学习Android Jetpack的架构组件。</p><p>最后对于程序员来说，要学习的知识内容、技术有太多太多，要想不被环境淘汰就只有不断提升自己，<strong>从来都是我们去适应环境，而不是环境来适应我们！</strong></p><blockquote><p>当程序员容易，当一个优秀的程序员是需要不断学习的，从初级程序员到高级程序员，从初级架构师到资深架构师，或者走向管理，从技术经理到技术总监，每个阶段都需要掌握不同的能力。早早确定自己的职业方向，才能在工作和能力提升中甩开同龄人。</p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      最近好几个小伙伴问我什么是**Android JetPack**，听说这个包好像有点牛,Android JetPack这货不是一个库，是一整套的库。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="Android" scheme="https://tamsiree.com/categories/TechnicalResearch/Android/"/>
    
    
      <category term="Android" scheme="https://tamsiree.com/tags/Android/"/>
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="JetPack" scheme="https://tamsiree.com/tags/JetPack/"/>
    
  </entry>
  
  <entry>
    <title>Shadowsocks对检测和封锁的探究</title>
    <link href="https://tamsiree.com/TechnicalResearch/Shadowsocks/Shadowsocks%E5%AF%B9%E6%A3%80%E6%B5%8B%E5%92%8C%E5%B0%81%E9%94%81%E7%9A%84%E6%8E%A2%E7%A9%B6/"/>
    <id>https://tamsiree.com/TechnicalResearch/Shadowsocks/Shadowsocks%E5%AF%B9%E6%A3%80%E6%B5%8B%E5%92%8C%E5%B0%81%E9%94%81%E7%9A%84%E6%8E%A2%E7%A9%B6/</id>
    <published>2020-02-09T02:31:05.000Z</published>
    <updated>2020-02-09T02:40:34.092Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在中国，<a href="https://shadowsocks.org/en/" target="_blank" rel="noopener"><em>Shadowsocks</em></a> 是最流行的翻墙软件之一。<br>从2019年5月起，大量的中国网民反馈他们的Shadowsocks服务器被封锁了。<br>这篇报告是我们对中国的防火长城（GFW）是如何检测和封锁 Shadowsocks 及其衍生翻墙软件的初步调查结果。<br>通过网络测量实验，我们发现GFW会<strong>被动的监视网络流量</strong>从而识别出疑似Shadowsocks的网络流量；然后对对应的Shadowsocks服务器进行<strong>主动探测</strong>已验证其怀疑的正确与否。Shadowsocks的封锁程度可能受<strong>人为因素</strong>在政治敏感时期的控制。<br>我们提出一种<strong>规避方法</strong>，即改变网络数据包在Shadowsocks握手阶段的大小。这种方法被证明可以在现阶段有效减少主动探测。我们会继续与开发者合作让Shadowsocks及其衍生工具变得更加难以封锁。  </p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="主要发现"><a href="#主要发现" class="headerlink" title="主要发现"></a><a href="#主要发现" title="主要发现"></a>主要发现</h2><ul><li>防火长城（GFW）已经启用主动探测的手段来识别Shadowsocks服务器。GFW采用被动监测与主动探测相结合的方式：其首先监测网络连接找出疑似Shadowsocks的连接，然后再把自己伪装成一个客户端，尝试对疑似Shadowsocks的服务器进行连接，从而验证自己的猜测。<a href="https://ensa.fi/active-probing/" target="_blank" rel="noopener"><em>我们知道GFW可以对多种翻墙工具进行主动探测</em></a>，现在Shadowsocks也成了其中一员。</li><li>主动探测系统可以发送多种不同类型的探测。其中一些探测是基于对之前合法客户端建立的连接的<strong>重放</strong>；而另一些探测则似乎与之前的合法连接并不相关。</li><li>如同之前的研究发现，主动探测来自<strong>大量不同的源IP地址</strong>。这使得基于源IP来过滤GFW探测包不太可行。亦如之前的研究发现，网络层面的侧通道显示这些来自数以千计的IP地址的主动探测并非完全相互独立，而是源于GFW的集中控制。</li><li>很少量的（大于13个）合法连接即足以触发对于Shadowsocks服务器的主动探测。只要合法客户端还在使用服务器，主动探测就会持续下去。GFW通常在合法连接到达服务器后的数秒内发送第一个主动探测。</li><li>一旦GFW主动识别出Shadowsocks服务器，GFW可能会丢弃所有发送自服务器IP地址，或服务器Shadowsocks端口的数据包。但GFW也可能不立即采取封锁措施。Shadowsocks的封锁程度可能受人为因素在政治敏感时期的控制。</li><li>GFW的被动监测模块至少会根据网络数据包的长度来怀疑可疑流量。改变数据包的长度，比如所在服务端安装<a href="https://github.com/NullHypothesis/brdgrd" target="_blank" rel="noopener"><em>brdgrd</em></a>，即可通过干扰被动监测模块对Shadowsocks流量的识别，进而显著减少主动探测的数量。</li></ul><h2 id="我们怎么知道的？"><a href="#我们怎么知道的？" class="headerlink" title="我们怎么知道的？"></a><a href="#我们怎么知道的？" title="我们怎么知道的？"></a>我们怎么知道的？</h2><p>我们在境外搭建了自己的Shadowsocks服务器并从中国用客户端连接它们，与此同时，在服务器和客户端两端抓包进行分析。所有的实验都是在2019年7月5号到2019年11月11号之间进行的。其中的绝大部分实验都是在<a href="https://github.com/net4people/bbs/issues/16" target="_blank" rel="noopener"><em>2019年9月16日开始的一次大规模封锁</em></a>后进行的。</p><p>在绝大部分实验中，我们使用了<a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="noopener"><em>shadowsocks-libev</em></a> <a href="https://github.com/shadowsocks/shadowsocks-libev/tree/v3.3.1" target="_blank" rel="noopener"><em>v3.3.1</em></a>作为客户端和服务端，因为它是一个被积极维护且具有代表性的Shadowsocks实现。我们相信我们所发现的这些弱点在其他Shadowsocks及其衍生工具，如<a href="https://getoutline.org/" target="_blank" rel="noopener"><em>Outline VPN</em></a>，中同样存在。</p><p>若非明确指出，我们未对任何实验中的客户端及服务器的网络功能进行修改，比如更改防火墙的设置。Shadowsocks可以使用不同的加密设置，我们对<a href="https://shadowsocks.org/en/spec/Stream-Ciphers.html" target="_blank" rel="noopener"><em>Stream ciphers</em></a>和<a href="https://shadowsocks.org/en/spec/AEAD-Ciphers.html" target="_blank" rel="noopener"><em>AEAD ciphers</em></a>都进行了测试。</p><h2 id="主动探测的一些细节"><a href="#主动探测的一些细节" class="headerlink" title="主动探测的一些细节"></a><a href="#主动探测的一些细节" title="主动探测的一些细节"></a>主动探测的一些细节</h2><p>Shadowsocks是一项加密通讯协议，其数据包的内容被设计得（应）不包含任何固定特征。其两种加密模式都基于一个主密码，两种模式分别为：<a href="https://shadowsocks.org/en/spec/Stream-Ciphers.html" target="_blank" rel="noopener"><em>Stream</em></a>(不推荐使用) 和 <a href="https://shadowsocks.org/en/spec/AEAD-Ciphers.html" target="_blank" rel="noopener"><em>AEAD</em></a> (推荐)。这两种加密模式虽都要求客户端事先知道主密码；但是Stream加密模式的服务器仅能对客户端进行较弱的验证。除非使用额外的技术手段，两种模式都不能防御对之前发送过的验证数据包的重放攻击。</p><h3 id="主动探测的类型及审查者意图"><a href="#主动探测的类型及审查者意图" class="headerlink" title="主动探测的类型及审查者意图"></a><a href="#主动探测的类型及审查者意图" title="主动探测的类型及审查者意图"></a>主动探测的类型及审查者意图</h3><p>我们目前观察到五种不同的主动探测荷载。</p><p>基于重放的探测：</p><ol><li>重放某一合法连接中第一个携带数据的数据包中的荷载。</li><li>重放某一合法连接中第一个携带数据的数据包中的荷载，但更改第0字节。</li><li>重放某一合法连接中第一个携带数据的数据包中的荷载，但更改第0–7和第62–63字节。</li></ol><p>看似随机的探测（并非基于我们所观察到的合法连接）：</p><ol><li>荷载长度为7到50字节，占所有看似随机的主动探测的70%。</li><li>荷载长度为221字节，占所有看似随机的主动探测的30%。</li></ol><p><a href="https://gfw.report/blog/gfw_shadowsocks/images/image1.png" data-fancybox="group" data-caption="CDF: Payload Lengths of PSH/ACKs Received by Outline Server" class="fancybox"><img alt="CDF: Payload Lengths of PSH/ACKs Received by Outline Server" title="CDF: Payload Lengths of PSH/ACKs Received by Outline Server" data-src="https://gfw.report/blog/gfw_shadowsocks/images/image1.png" class="lazyload"></a></p><p>我们怀疑GFW的主动探测系统根据服务器对这几种不同类型的主动探测的反馈来判定其是否为Shadowsocks服务器。</p><p>Shadowsocks-libev有一个<a href="https://github.com/shadowsocks/shadowsocks-org/issues/44" target="_blank" rel="noopener"><em>重放过滤器</em></a>; 但是大多数的Shadowsocks实现则没有。重放过滤器可以防御一模一样的重放（类型1），如果载荷的最初几字节被改变了（类型2和3）那么过滤器就无法防御了。过滤器本身也不够阻止主动探测模块去比较服务器对多种探测的反应。</p><h3 id="多少次合法连接就能触发主动探测"><a href="#多少次合法连接就能触发主动探测" class="headerlink" title="多少次合法连接就能触发主动探测"></a><a href="#多少次合法连接就能触发主动探测" title="多少次合法连接就能触发主动探测"></a>多少次合法连接就能触发主动探测</h3><p>对主动探测的触发似乎需要达到一定的阀值。比如在一项实验中，仅仅13次连接就足以引起GFW的怀疑并触发主动探测。初步结果显示，使用了AEAD的Shadowsocks，可能需要稍微多一点点的连接才会触发主动探测。</p><h3 id="合法连接与主动探测的关系"><a href="#合法连接与主动探测的关系" class="headerlink" title="合法连接与主动探测的关系"></a><a href="#合法连接与主动探测的关系" title="合法连接与主动探测的关系"></a>合法连接与主动探测的关系</h3><p>我们让客服端每5分钟对Shadowsocks服务器进行16次连接。虽然我们的服务器触发了大量的主动探测，但不知为何，其并未被GFW封锁。</p><p><a href="https://gfw.report/blog/gfw_shadowsocks/images/image6.png" data-fancybox="group" data-caption="Number of SYN Received Across Time" class="fancybox"><img alt="Number of SYN Received Across Time" title="Number of SYN Received Across Time" data-src="https://gfw.report/blog/gfw_shadowsocks/images/image6.png" class="lazyload"></a></p><p>上图显示在客户端与服务器有通讯的时间里，服务器会收到主动探测。当合法客户端与服务器的通讯停止下来后，大部分的主动探测也停了。值得指出的是，每小时中主动探测的数量并非固定值，与合法客服端的连接数目比也并非1:1。</p><h3 id="主动探测的延迟性"><a href="#主动探测的延迟性" class="headerlink" title="主动探测的延迟性"></a><a href="#主动探测的延迟性" title="主动探测的延迟性"></a>主动探测的延迟性</h3><p>GFW的主动探测系统可以将合法连接的载荷保存下来，然后延迟一段时间再发起一个新的连接进行重放。下图显示了合法连接与重放攻击之间的延时关系。由于一个合法的载荷可能被多次重放（某一次实验中观察到的最大值为47次），我们呈现两组关系：桔黄色的线代表基于一个合法载荷的第一次重放；蓝色的线代表所有基于重放的探测（不限定为第一次）。</p><p>结果显示多于90%的重放攻击发生在合法连接发送后的一小时之内。观察到的最短的延迟仅有0.4秒，而最长延迟竟有大约400小时。</p><p><a href="https://gfw.report/blog/gfw_shadowsocks/images/image2.png" data-fancybox="group" data-caption="CDF: Delay of Replay-based Probes" class="fancybox"><img alt="CDF: Delay of Replay-based Probes" title="CDF: Delay of Replay-based Probes" data-src="https://gfw.report/blog/gfw_shadowsocks/images/image2.png" class="lazyload"></a></p><h3 id="主动探测的源"><a href="#主动探测的源" class="headerlink" title="主动探测的源"></a><a href="#主动探测的源" title="主动探测的源"></a>主动探测的源</h3><p>我们在目前所有实验中总计观察到3,5477次主动探测。它们来自1,0547个不同的IP地址，IP地址均属于中国。</p><p><strong>源自治系统</strong>。主动探测来源占比最多的两个自治系统 AS 4837 (CHINA169-BACKBONE CNCGROUP China169 Backbone,CN) 和 AS 4134 (CHINANET-BACKBONE No.31,Jin-rong Street,CN)，分别为中国联通和中国电信的主干网。这一结果与之前对<a href="https://ensa.fi/active-probing/imc2015.pdf#page=8" target="_blank" rel="noopener"><em>主动探测的研究</em></a>一致。</p><p><a href="https://gfw.report/blog/gfw_shadowsocks/images/image3.png" data-fancybox="group" data-caption="ASN of unique probing IPs throughout all experiments" class="fancybox"><img alt="ASN of unique probing IPs throughout all experiments" title="ASN of unique probing IPs throughout all experiments" data-src="https://gfw.report/blog/gfw_shadowsocks/images/image3.png" class="lazyload"></a></p><p><strong>中心化结构。</strong>尽管这些主动探测来源于上千个不同的IP地址，有迹象显示它们的行为均受到一小撮进程的集中管控。下图显示了每个主动探测的SYN包所携带的<a href="https://tools.ietf.org/html/rfc7323#section-3" target="_blank" rel="noopener"><em>TCP timestamp</em></a>值。TCP timestamp是一个32位的计数器，其以固定的速度进行增长。其不是一个绝对值，而是一个取决于TCP实现和系统上次重启时间的相对值。下图显示这些来源于上千个独立的IP地址的主动探测，共享着很少量的TCP timestamp序列。在这次实验中，至少观察到9个不同的物理系统或进程，而绝大多数主动探测似乎来源于同一进程。我们说“至少”和“似乎”是因为如果两个或以上的独立进程的截距非常相近，那么我们可能把它们误认为一个进程。序列的斜率显示timestamp的增长速度为250HZ。</p><p><a href="https://gfw.report/blog/gfw_shadowsocks/images/image5.png" data-fancybox="group" data-caption="TCP TSval of SYN Segments from Probers" class="fancybox"><img alt="TCP TSval of SYN Segments from Probers" title="TCP TSval of SYN Segments from Probers" data-src="https://gfw.report/blog/gfw_shadowsocks/images/image5.png" class="lazyload"></a></p><h2 id="如何规避针对Shadowsocks的封锁？"><a href="#如何规避针对Shadowsocks的封锁？" class="headerlink" title="如何规避针对Shadowsocks的封锁？"></a><a href="#如何规避针对Shadowsocks的封锁？" title="如何规避针对Shadowsocks的封锁？"></a>如何规避针对Shadowsocks的封锁？</h2><p>GFW对于Shadowsocks的检测需要两步：</p><ol><li>第一步，被动监测并识别疑似Shadowsocks的连接。</li><li>第二步，主动探测疑似Shadowsocks的服务器。</li></ol><p>因此，为避免封锁，我们可以（1）设法避免被监测模块怀疑到，或者（2）让服务器以不被怀疑的方式回应主动探测。我们将展示如何通过安装改变数据包大小的软件来达到目标（1）。</p><p><a href="https://github.com/NullHypothesis/brdgrd" target="_blank" rel="noopener"><em>Brdgrd</em></a>是一款可以被安装在Shadowsocks服务器上，从而导致Shadowsocks客服端发送较小的数据包的软件。它设计之初衷是用来干扰GFW识别Tor节点，因为它迫使GFW在检测之前首先对TCP流进行复杂的重组。但这里我们利用它可以改变从客户端到服务器的数据包大小的功能。改变数据包的大小可以干扰流量识别环节，从而在极大程度上缓解主动探测。</p><p><a href="https://gfw.report/blog/gfw_shadowsocks/images/image4.png" data-fancybox="group" data-caption="Effectiveness of brdgrd on Server" class="fancybox"><img alt="Effectiveness of brdgrd on Server" title="Effectiveness of brdgrd on Server" data-src="https://gfw.report/blog/gfw_shadowsocks/images/image4.png" class="lazyload"></a></p><p>上图显示了一个受到主动探测的Shadowsocks服务器，在开启brdgrd后的数小时内不再收到主动探测。而当我们关闭brdgrd，主动探测立刻继续。我们第二次开启brdgrd，主动探测在之后的40小时里完全停止，但之后又有些许主动探测。</p><p>另一组实验显示，在第一次运行Shadowoscks之初就启用brdgrd也许更加的有效。</p><p>Brdgrd的原理是将TCP Window Size改写为一个小得罕见的值。因此，审查者可能可以检测出brdgrd被使用了。因此，尽管brdgrd可以在现阶段有效的减少主动探测，其不能被看作是一个一劳永逸的解决方案。</p><h2 id="尚未解决的问题"><a href="#尚未解决的问题" class="headerlink" title="尚未解决的问题"></a><a href="#尚未解决的问题" title="尚未解决的问题"></a>尚未解决的问题</h2><p>尽管我们已经清楚GFW会主动探测Shadowsocks服务器，我们仍不清楚主动探测与Shadowsocks服务器被封之间的关系。我们有33组Shadowsocks服务器分布于世界各地。尽管它们中的大多数都遭受到了大量的主动探测，但是仅有3台服务器被封锁。更有趣的是，其中一台被封锁的服务器只被使用了很短的一段时间，因此受到的主动探测数量应该比很多未被封锁的服务器要少得多。</p><p>我们提出3种假设试图解释这一有趣的现象：</p><ul><li><p>Shadowsocks服务器的封锁是由人为的因素控制的。也就是说，GFW也许维护了一份在不同程度上被怀疑为Shadowsocks服务器的清单，然后根据人工因素来决定对服务器进行封锁还是解封。这一假设可以解释为什么更多的服务器是在政治敏感时期被封锁的。</p></li><li><p>另一个假设是GFW的主动探测对于一些我们实验采用的Shadowsocks实现无效。确实，我们被封锁的那3台服务器都是使用了与其他实验中的Shadowsocks不同的实现。如果GFW是根据某些Shadowsocks服务器实现对主动探测的特有反应来识别判断的话，那么这一假设更有可能为真。</p></li><li><p>第三个假设是对于Shadowsocks的封锁在地理上存在着不一致性。我们被封锁的那3台服务器所在的数据中心不同于其他大多数实验，使用的客服端也是位于一般的居民网络，而非数据中心。如果GFW更注意属于某些数据中心的IP地址，抑或更注意来自一般居民网络的客户端连接，那么这一假设更有可能为真。</p></li></ul><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a><a href="#致谢" title="致谢"></a>致谢</h2><p>我们想在此感谢以下人员对此主题的讨论和研究：</p><ul><li>Shadowsocks-libev 的开发者们</li><li>OutlineVPN 的开发者们</li><li>Eric Wustrow以及其他多名来自科罗拉多大学博尔德分校的研究人员</li></ul><h2 id="联系我们"><a href="#联系我们" class="headerlink" title="联系我们"></a><a href="#联系我们" title="联系我们"></a>联系我们</h2><p>这篇报告首发于GFW Report。我们还在<a href="https://github.com/net4people/bbs/issues/22" target="_blank" rel="noopener">net4people</a>和<a href="https://ntc.party/t/how-china-detects-and-blocks-shadowsocks/289" target="_blank" rel="noopener">ntc.party</a>同步更新了这篇报告。</p><p>我们鼓励您公开或私下地分享与报告中的发现和假设相关的问题、评论或证据。我们私下的联系方式可见<a href="https://gfw.report/" target="_blank" rel="noopener">GFW Report</a>的页脚。</p><hr><blockquote><p>参考来源：<a href="https://gfw.report/blog/gfw_shadowsocks" target="_blank" rel="noopener"><code>[English Version: How China Detects and Blocks Shadowsocks]</code></a><br>日期: 2019年12月29日，星期日<br><strong>作者:</strong> 匿名作者A, 匿名作者B, 匿名作者C, 大卫·菲尔德 [David Fifield] , 阿米尔 [Amir Houmansadr]</p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      在中国，[_Shadowsocks_](https://shadowsocks.org/en/) 是最流行的翻墙软件之一。从2019年5月起，大量的中国网民反馈他们的Shadowsocks服务器被封锁了。这篇报告是我们对中国的防火长城（GFW）是如何检测和封锁Shadowsocks及其衍生翻墙软件的初步调查结果。通过网络测量实验，我们发现GFW会**被动的监视网络流量**从而识别出疑似Shadowsocks的网络流量；然后对对应的Shadowsocks服务器进行**主动探测**已验证其怀疑的正确与否。Shadowsocks的封锁程度可能受**人为因素**在政治敏感时期的控制。我们提出一种**规避方法**，即改变网络数据包在Shadowsocks握手阶段的大小。这种方法被证明可以在现阶段有效减少主动探测。我们会继续与开发者合作让Shadowsocks及其衍生工具变得更加难以封锁。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="Shadowsocks" scheme="https://tamsiree.com/categories/TechnicalResearch/Shadowsocks/"/>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="Shadowsocks" scheme="https://tamsiree.com/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>Unity合理导入模型</title>
    <link href="https://tamsiree.com/Software/Unity/Unity%E5%90%88%E7%90%86%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/"/>
    <id>https://tamsiree.com/Software/Unity/Unity%E5%90%88%E7%90%86%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/</id>
    <published>2020-02-07T15:07:19.000Z</published>
    <updated>2020-02-17T12:56:06.344Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>相信在游戏中，模型相当于游戏必要的元素，例如游戏的一个人物角色，我们可以称它为一个模型，今天学习一下导入 Unity 3d 模型，我们应该注意哪些细节！当然我们知道常用的模型都可以通过 Maya/3D Max 等三维动画软件制作的。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>官方学习文档：<a href="https://docs.unity3d.com/Manual/FBXImporter-Model.html" target="_blank" rel="noopener">https://docs.unity3d.com/Manual/FBXImporter-Model.html</a>  </p><ol><li>模型自身规范：<br>   1.0 所有的模型在原点创建，没有具体的特定要求下，需要以物体对象中心为轴心；<br>   1.1 模型面数：移动端（ 300-1500 个多边形达到比较好的效果） PC端（ 1500-4000 比较适宜）正常的单个物体最好控制在 1000 面以下，所有的物体面数不超过20000 个三角面；<br>   1.2 模型大小：模型文件做到最大的优化，对于看不到的面，我们可以采用直接删除，合并断开的点，移除孤立的点；<br>   1.3 模型命名：命名最好做到规范化，模型在给绑定之前必须做一次重置变换；<br>   1.4 模型复制：如果物体可以复制的话，就尽量复制；例如一个 500   面的物体，烘培好之后复制出去 50 个，那么他所消耗资源基本和一个物体消耗的资源基本是一样；<br>   1.5 模型单位：在建模型之前设定好单位，在 Unity3d 中用到的单位设置必须要一样，模型和模型之间的比例要正确，和程序导入的单位要一致，如果到程序中单位需要缩放也尽可能统一调整缩放比例，统一单位为米；  </li><li>模型导入中的规范：<br>   2.0 模型使用的材质，首先在 3d Max 和 Maya 中，不是所有的材质在 Unity3d 中都可以支持使用，只有 Standard（标准材质）和 Multi/Sub-Object（多维/子物体材质）被 Unity3d 软件所支持。<br>   2.1 模型贴图格式和尺寸：常用的图片格式是 .tga 和  .png (带透明通道) 、不带通道为 .jpg ，贴图的尺寸最好为 2 的 N 次方,最大的贴图尺寸不能超过 1024X1024 ，当然特定的要求，尺寸可以根据具体的需求而定。<br>   2.2 模型贴图其他注意点：  <pre><code>2.2.0 贴图命名不要有中文字命名，并且不能有重名；  2.2.1 材质命名和物体名称最好保持一致，易于整理，材质球的父子层级的命名尽可能一致；  2.2.2 同种贴图可以使用同一个材质球；  2.2.3 带Alpha 通道贴图图片格式最好为 tga 和 png 格式，在命名可以加 _al 加以区分；  2.2.4 模型需要通过通道处理时，在制作通道纹理，最好将透明部分改成模型的主色，这样渲染可以使有效边缘部分大颜色正确，通道纹理在程序渲染占用的资源同尺寸大普通纹理要多，通道命名也最好以 _al 结尾；  </code></pre>   2.3 Unity资源导入：对于游戏中资源导入可以导入图片，网格等，Project 面板右键（ Import New Asset ）。  <pre><code>2.3.0 图片设置：        TextureType：贴图类型。        AlphafromGrayscal :使用灰度创建 Alpha，当需要unity为贴图创建一条 alpha 通道，使用它转换得到的灰度值来渲染透明度，可以开启它。        WrapMode：所谓的包裹模式，决定贴图会无限次平铺还是只绘制一次。Repeat 就是重复平铺。Clamp 会让贴图的边缘拉升并在改变大小时候填满任何缝隙。        FilterMode：所谓的图像过滤模式，在拉伸时候对贴图过滤，比如 [Point] 点过滤，在很近看贴图时候，可能感觉不均。Bilinear 它会时近看贴图显得模糊。Trilinear 它会在不同 mipmap 层次之间模糊。        AnisoLevel：设置各项异性过滤器的级别，同属的可以理解为当你从一个比较陡的角度来看，贴图现实的可以有多细腻，渲染的等级越高，越占内存。想要确定贴图页面会占用多大内存，可以长X宽，再乘以他的位深度 [bpp,每像素位数] ，如果贴图包含 mipmap ，还需要扩大 1.33 倍。  2.3.1 网格设置：      网格就是那些 Maya ，C4D，3DSMAX，C3D，LW 等软件导出的文件。比如导入一个 .fbx 文件。选中后，在Inspector面板中，我们能看到下面的属性：        ScaleFactor：缩放系数，使用这个属性在导入资源后设置其大小，调整资源在场景现实过大，或者过小的问题。        MeshCompression：网格压缩的比例（ Off，Low，Medium，High ）不可否认，压缩时可以节约内存的。        OptimizeMesh：为提高 GPU 性能记录网格顶点和索引。        GenerateColliders：是否在场景中让网格对象具有碰状体表现，通俗的说就是实心的，不可以穿体而过。        SwapUVs：交换 UV ，当你导入一个网格对象时候，着色器可能会使用错误的 UV 通道，如果发现资源异常（比如带光照图时候），可以选中这个复选框。        Generate Lightmap UVs：为UV2生成光照贴图。        Normals&Tangents：该项设置计算法线切线        Normals：计算法线，import 表示使用导入的网格法线，Calculate 表示从新计算网格法线。        Tangents：计算切线，import 表示使用导入的网格切线，Calculate 表示从新计算切线。        Smoothing angle：法线平滑角度，告诉引擎在角度值为多少时候把一个边缘视为硬边缘。        Split Tangents：是否分离切线,如果模型在场景渲染后现实 UV 缝隙，要开启它。        Materials：              Import Materials:是否导入材质，默认选中。              Material Naming:材质名字生成模式。              Material Search：材质搜索方案。  </code></pre></li><li>模型在制作软件中具体设置：<br>   3.0 贴图烘培设置：在进行Completemap 烘培方式，贴图通道和物体 UV 坐标通道必须为1 通道。<br>   3.1 lightingMap 烘培设置时，和 completemap 设置有些不同，贴图通道和物体 UV 坐标必须为 3 通道，烘培时灯光的阴影方式为 adv.raytraced 高级光线跟踪阴影，背景色要改白色，可以避免黑边的情况，主要物件的贴图 UV 必须手动展开；<br>   3.2 模型绑定及动画  <pre><code>3.2.0 骨骼必须为 IK 、CAT、BIP 三类，Unity 不认虚拟动画，单个物体骨骼数量不超过 60 个；  3.2.1 动画帧率、帧数的控制，一般情况下每秒 10 帧，一个动画尽量控制 1 秒内完成；  </code></pre>   3.3 模型导出  <pre><code>3.3.0 将烘培材质改为标准材质球，通道为 1 ，自发光 100% ；  3.3.1 合并顶点，删除多余的材质球（不重要贴图缩小）;  3.3.2 物体名称、材质球名、贴图名保持一致；  3.3.3 按要求导出的 .fbx （检查是否要按组导出，导出 fbx 后，再重新导入 3D Max／Maya 中动画是否正确）  </code></pre></li></ol><hr><blockquote><p>参考链接：<br><a href="https://connect.unity.com/p/unity3d-shi-yong-ji-qiao-kuai-su-xue-hui-mo-xing-he-li-dao-ru-unity3d-yin-qing" target="_blank" rel="noopener">Unity3D 实用技巧 - 快速学会模型合理导入 Unity3D 引擎</a><br><a href="http://www.manew.com/thread-108019-1-1.html" target="_blank" rel="noopener">Unity3D 模型导入的注意事项</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      相信在游戏中，模型相当于游戏必要的元素，例如游戏的一个人物角色，我们可以称它为一个模型，今天学习一下导入 Unity 3d 模型，我们应该注意哪些细节！当然我们知道常用的模型都可以通过 Maya/3D Max 等三维动画软件制作的。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/categories/Software/Unity/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>PT站</title>
    <link href="https://tamsiree.com/TechnicalResearch/PT%E7%AB%99/PT%E7%AB%99/"/>
    <id>https://tamsiree.com/TechnicalResearch/PT%E7%AB%99/PT%E7%AB%99/</id>
    <published>2020-02-06T12:28:35.000Z</published>
    <updated>2020-02-08T04:26:49.034Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>PT（Private Tracker）是一种改良自 BitTorrent 协定的 P2P 下载方式，“Private Tracker”指私有种子服务器。与 BT 最大的不同点分别为可进行私密范围下载，及可统计每个用户的上载及下载量。</p><h1 id="PT站的架构"><a href="#PT站的架构" class="headerlink" title="PT站的架构"></a>PT站的架构</h1><h2 id="NexusPHP"><a href="#NexusPHP" class="headerlink" title="NexusPHP"></a>NexusPHP</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>根据其代码中的介绍（<code>aboutnexus.php</code> 页面）来看：</p><blockquote><p>NexusPHP由来自浙江大学的Nexus团队发起并开发完成。主要是提供一个完整的、有序的、重视用户信誉和知识的资源分享社区的解决方案，是一个PT（Private Tracker，即私有的Tracker服务器，是BT下载的一种）开源软件。</p></blockquote><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/4003688781.jpg" data-fancybox="group" data-caption="aboutnexus.jpg" class="fancybox"><img alt="aboutnexus.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/4003688781.jpg" class="lazyload" title="aboutnexus.jpg"></a></p><p>（当然也有人和我说，这是某浙大生毕业设计作品Orz）</p><p>虽然一遍一遍的在群里鄙视着NexusPHP的垃圾代码，但不得不承认就目前来看国内PT圈依然在大量使用NP（这里应该不用做详细数据统计了吧2333）。</p><p>而其他一些尝试，诸如：</p><ul><li><a href="https://github.com/WhatCD/Gazelle" target="_blank" rel="noopener">Gazelle</a>：国外著名PT架构，然而部署安装略麻烦，且纯英文界面。国内曾有人尝试翻译并建站，然而该主比我还不靠谱，以致于在17年度被人提及是开站狂魔2333。此外就目前看TVPlay这个基于Gazelle的国内剧集站点现状比一滩死水还不如。</li><li><a href="https://gitee.com/mojie126/YoRHa" target="_blank" rel="noopener">YoRHa</a>：根本没有人知道的国内构架，主要原因是因为基于ThinkPHP的构架并没有完成23333，作者曾在PT吧发过主贴 <a href="https://tieba.baidu.com/p/5363288147" target="_blank" rel="noopener">【20171009】开源一个国产PT项目…【pt吧】_百度贴吧</a> ，而且目前demo还存活（并开放debug模式），但已经有一段时间没有进行更新了Orz。</li><li><a href="https://github.com/taobataoma/meanTorrent" target="_blank" rel="noopener">meanTorrent</a>：同样是一个国内开源框架，基于Node.js，同样部署安装麻烦（后面会具体讲~）。目前主站被人戏称（实际是官方简称）是<a href="http://mean.im/" target="_blank" rel="noopener">地雷站</a> ，但就我目前感觉，迈的步子有些大——一方面，过于绚丽的前端对于PT是否需要值得思榷；另一方面，主站目前只接受1080P的一些规定是否在站点初期有利于发展。此外，该站积分策略、上传方式中的一些不同与NP的新形势新方法，对于已经在NP惯性中的使用者来说是不是能很快适应。这些都要经过时间的考验，毕竟今年6月（2018年6月）也才正式上线。</li><li><a href="https://github.com/QwertyRider/TBSource" target="_blank" rel="noopener">TBsource</a>：基于PHP，是NP的前身，应该也就只有CFFBits以及TTG这种<em>远古</em>站点在使用了吧~</li><li><a href="https://sourceforge.net/projects/xbnbt/" target="_blank" rel="noopener">XBNBT</a>： 一个基于C++的构架，国内就只有紫荆PT在使用。</li><li>其他一些在Discuz基础上修改的tracker：这块多为自己写的，而且未能找到公开repo，在此仅作站点列举：六维空间、北交知行、天雪PT。</li></ul><p>所以，面对众多的 <code>NP改</code> 站点来说，其实这个古老的（甚至连官网都挂了的）架构依然在支撑着国内PT网站的运行。</p><h3 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h3><p>但是从现代的角度来看NP，我们其实能发现很多问题。</p><p>有些属于已经被发现漏洞，多为跨站请求类以及SQL注入类。截止目前（2018/7/19），在 <a href="http://www.cnnvd.org.cn/web/vulnerability/querylist.tag" target="_blank" rel="noopener">国家信息安全漏洞库</a> 中以 NexusPHP 为关键词搜索可以找出近26条记录 。</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/721100080.jpg" data-fancybox="group" data-caption="CNNVD.jpg" class="fancybox"><img alt="CNNVD.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/721100080.jpg" class="lazyload" title="CNNVD.jpg"></a></p><p>而更多被诟病的其实是其代码架构过于老旧也不宜于维护。下面列几点我印象比较深刻的：</p><ul><li>使用这个mysql已经被抛弃的库（PHP 5.5.0起废弃，PHP 7.0.0起移除），而不是mysqli库或PDO库。而PHP 7至少从评测上看，执行效率比PHP 5优秀很多~</li><li>代码使用print等方式输出网页。项目受限于时代背景，没有使用MVC等先进思想。</li><li>数据库设置不合理，大量查询以及写入语句落在 <code>users</code> 以及 <code>torrents</code> 等表上，造成数据表过热，故当站点人数过多或者种子数过多时，对站点所在服务器配置要求极其高（譬如NPU就因搜索问题换用外挂搜索引擎）；而另一方面，诸如faq、rules这些应该可以直接静态输出的却使用数据库进行存储（估计是为了多语言支持）</li><li><code>torrentsrss.php</code>页面对passkey是否存在没有进行检查，导致非站内用户能通过构造相关链接直接读取站内<strong>所有</strong>种子信息。（部分站点已经修复这个漏洞）</li></ul><h3 id="目前分支情况"><a href="#目前分支情况" class="headerlink" title="目前分支情况"></a>目前分支情况</h3><p>鉴于NP在很早之前就已经停止维护（Github上停留在7年前，即2011年），目前很多使用NP作为基础架构的站点都对其进行了一定的改良。我仅从用户体验（比如前端页面的更改）将站点分成以下几类：</p><ul><li><strong>基本没怎么动</strong>： 不得不说，很多站点对原始NP模板并没有进行修改（这是句瞎话，比如BYR看起来和原版似乎一模一样，但是后端的修改还是挺多的；又如二娘，修改了种子的BUFF系统。）。但其实不管该站Sysop到底出力没出力，都可以将对应站点视为一个模板。</li><li><strong>葡萄</strong>：该前端模板将个人信息做成置顶栏，而不是和基本模板一样放在导航栏之下。种子搜索增加“随意看看”。</li></ul><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/3085673525.jpg" data-fancybox="group" data-caption="putao_group.jpg" class="fancybox"><img alt="putao_group.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/3085673525.jpg" class="lazyload" title="putao_group.jpg"></a></p><ul><li><strong>蝴蝶</strong>：以蝴蝶和珞樱为代表，对搜索词的词长存在限制，拥有用户自定义Javascript以及自定义css。</li><li><strong>蚂蚁</strong>：虽然蚂蚁因为一些原因已经停止运营，但是模板并没有消失2333。目前仍有很多新站使用蚂蚁的模板进行建站，如<em>高清街</em>以及<em>美盒子</em>（都是小站）。我个人不是很喜欢蚂蚁的模板，它将一个种子的所有信息使用两个tr加一堆rowspan进行合并展示，在我看来其实增加后期维护的困难程度，尤其是在没有模板引擎的NP构架之下。</li></ul><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/1294908463.jpg" data-fancybox="group" data-caption="mayi_tamp.jpg" class="fancybox"><img alt="mayi_tamp.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/1294908463.jpg" class="lazyload" title="mayi_tamp.jpg"></a></p><blockquote><p>截图为他人提供的美盒子截图。</p></blockquote><ul><li><strong>蒲公英</strong>：蒲公英是魔改NP最为成功的一个站点。在它之前或者之后都有人尝试将Bootstrap与NexusPHP进行结合，虽不能说他们都失败了，但至少NPU成为了一个典型喵喵喵。。其他一些更改，比如rp系统、自动转种系统等都是该站点特点。</li><li><strong>HDA</strong>：良心站点HDArea添加了种子预告系统，后被集市使用。（毕竟这两个站点早期开发是同一个人）</li></ul><p>嘛，我影响稍微深刻的就这些站点，以及他们使用的模板。其他还有一些站点，此处就不一一列举了。</p><p>而从公开仓库来看，目前站点公开并有在更新代码的有以下：</p><ul><li>lwenxu/jmbits：<a href="https://github.com/lwenxu/jmbits" target="_blank" rel="noopener">https://github.com/lwenxu/jmbits</a></li><li>nwafu-mta/mtpt：<a href="https://github.com/nwafu-mta/mtpt" target="_blank" rel="noopener">https://github.com/nwafu-mta/mtpt</a></li><li>zcqian/tjupt：<a href="https://github.com/zcqian/tjupt" target="_blank" rel="noopener">https://github.com/zcqian/tjupt</a></li><li>QingyingPT/QY-PT-tracker：<a href="https://github.com/QingyingPT/QY-PT-tracker" target="_blank" rel="noopener">https://github.com/QingyingPT/QY-PT-tracker</a> ， 非完整代码</li></ul><p>也确实是寥寥无几~</p><hr><p>为了去了解站点构架，一个简单的搭建过程也是需要了解的。</p><p>NP搭建的最重要注意点是，<strong>使用的PHP版本最高不应该超过5.6，并安装memcache软件及PHP扩展</strong>。对数据库版本要求不是很严格，我使用MySQL 5.7测试可行。</p><blockquote><p>本人写的十分简略（因为真心没有什么好讲的），如果有必要，还请参照他人的详细搭建过程。</p></blockquote><h3 id="Linux下搭建"><a href="#Linux下搭建" class="headerlink" title="Linux下搭建"></a>Linux下搭建</h3><h4 id="LNMP环境及Memcache"><a href="#LNMP环境及Memcache" class="headerlink" title="LNMP环境及Memcache"></a>LNMP环境及Memcache</h4><p>网上的教程真心啰嗦，<code>lnmp</code>一个一个的写过去，我个人还是喜欢用一键包来配置。<code>lnmp1.5</code>的自动值守命令为</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">screen -S lnmp</span><br><span class="line">wget http://soft.vpser.net/lnmp/lnmp1.5.tar.gz -cO lnmp1.5.tar.gz && tar zxf lnmp1.5.tar.gz && <span class="built_in">cd</span> lnmp1.5  && LNMP_Auto=<span class="string">"y"</span>  DBSelect=<span class="string">"2"</span> DB_Root_Password=<span class="string">"lnmp.org"</span>  InstallInnodb=<span class="string">"y"</span>  PHPSelect=<span class="string">"4"</span>  SelectMalloc=<span class="string">"1"</span>  ./install.sh lnmp</span><br></pre></td></tr></tbody></table></figure></div><p>复制粘贴，然后接杯奶茶等编译完成，我们基础的<code>lnmp</code>环境就搭建好了。（注意：这样安装后主<code>PHP</code>版本为<code>5.5</code>，如果希望主版本用<code>7.x</code>的请自己使用 <a href="https://lnmp.org/auto.html" target="_blank" rel="noopener">LNMP一键安装包无人值守命令生成器</a> 生成值守命令或者交互式安装，然后<code>./install.sh mphp</code> 添加多PHP支持）</p><p>然后安装<code>memcache</code>，在<code>lnmp1.5</code>文件夹中进入lnmp解压后的目录，执行：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">./addons.sh install memcached</span><br></pre></td></tr></tbody></table></figure></div><p>选择<code>php-memcache</code>即会安装软件及<code>PHP</code>扩展。</p><h4 id="NP源码及数据库"><a href="#NP源码及数据库" class="headerlink" title="NP源码及数据库"></a>NP源码及数据库</h4><p><code>NP</code>源码个人建议从<code>SourceForge</code>中获取，而不是从<code>Github</code>仓库。（之前Blog也说过，Github上的建表语句有问题）故，依次进行：</p><ol><li><p>从 <a href="https://sourceforge.net/projects/nexusphp/files/" target="_blank" rel="noopener">NexusPHP - Browse Files at SourceForge.net</a> 下载最新的zip包并解压到对应网站根目录即可。</p></li><li><p>使用phpmyadmin或者其他CLI软件恢复<code>/_db/dbstructure.sql</code> 文件记录。</p></li><li><p>修改<code>config/allconfig.php</code> 文件的以下内容使其对应：</p></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">‘SITENAME’  =>  ‘站点名称’</span><br><span class="line">‘baseURL’  =>  ‘网站URL’</span><br><span class="line">‘announce_url’  =>  ‘localhost/announce.php’（announce的url地址）</span><br><span class="line">‘mysql_host’  =>  ‘MySQL主机’</span><br><span class="line">‘mysql_user’  =>  ‘数据库用户名’</span><br><span class="line">‘mysql_pass’  =>  ‘数据库密码’</span><br><span class="line">‘mysql_db’  =>  ‘数据库名’</span><br></pre></td></tr></tbody></table></figure></div><ol><li>设置目录权限777，因为NP的站点配置是通过操作config目录下文件的修改完成的。</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo chmod 777  /dir/to/your/nexusphp</span><br><span class="line">sudo chmod 777  /dir/to/your/nexusphp/config</span><br></pre></td></tr></tbody></table></figure></div><ol><li>自己访问网站然后注册一个用户名，接着进入数据库管理（phpMyAdmin），在users表里面找到你注册的用户，编辑它的class属性为16</li></ol><h3 id="Windows下搭建"><a href="#Windows下搭建" class="headerlink" title="Windows下搭建"></a>Windows下搭建</h3><p>Windows下搭建我个人推荐使用Laragon作为基础环境，因为相比其他WNMP、WAMP、XAMPP，环境管理更加方便，内置软件更为齐全。例如我选择的就包含了几乎全套我想要使用的工具2333</p><blockquote><p>官网下载地址：<a href="https://laragon.org/download/" target="_blank" rel="noopener">https://laragon.org/download/</a></p></blockquote><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/3158755942.jpg" data-fancybox="group" data-caption="laragon.jpg" class="fancybox"><img alt="laragon.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/3158755942.jpg" class="lazyload" title="laragon.jpg"></a></p><p>然而需要注意的是，默认Laragon提供的是PHP 7.x，我们需要额外到PHP官网上下载PHP 5.5版本的Portable以及Memcache扩展。下载位置分别如下：</p><ul><li>PHP 5.5：到PHP官网的历史发布页面存档 <a href="https://windows.php.net/downloads/releases/archives/" target="_blank" rel="noopener">https://windows.php.net/downloads/releases/archives/</a> 中找到<em>php-5.5.38-Win32-VC11-x64.zip</em> 下载并将解压到<code>laragon\bin\php</code> 目录</li><li>php-memcache： <a href="http://pecl.php.net/package/memcache" target="_blank" rel="noopener">http://pecl.php.net/package/memcache</a> 中下载，并解压至 <code>laragon\bin\php\php-5.5.38-Win32-VC11-x64\ext</code>目录，之后你就可以在Laragon的切换PHP版本并启用该插件。</li></ul><p>完成基础环境的搭建后，Win下关于NP自身的文件以及数据库均与Linux下类似，在此不累述。</p><h3 id="搭建中一些可能的问题"><a href="#搭建中一些可能的问题" class="headerlink" title="搭建中一些可能的问题"></a>搭建中一些可能的问题</h3><ul><li><strong>直接提示HTTP ERROR 500</strong> ：多数情况下是使用了PHP 7.x或者其他高于5.6的版本，建议使用PHP 5.3-5.5之间的版本进行搭建。</li><li><strong>Warning: Memcache::connect() [memcache.connect]: Can’t connect to localhost: 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。</strong> ： 修改<code>classes\class_cache.php</code>中的localhost为127.0.0.1</li><li><strong>点击登陆后提示<code>Error: Errno:0 SQL:;</code></strong>： 使用Github上源码（这个源码真的是只能远观不能亵玩233）搭建，换用SourceForge的源。</li><li>其他待补充~</li></ul><hr><h2 id="meanTorrent"><a href="#meanTorrent" class="headerlink" title="meanTorrent"></a>meanTorrent</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>在简单的介绍完NP的历史以及搭建，让我们先跳出NP框架，了解下其他的一些前面讲过的框架及其搭建过程。</p><p>meanTorrent是目前来看，国人新框架中功能最为齐全、开发程度较高的一个。（其他我了解的都基本在开发过程中滴说）</p><p>从官方的介绍来看：</p><blockquote><p>meanTorrent - MEAN.JS BitTorrent Private Tracker - Full-Stack JavaScript Using MongoDB, Express, AngularJS, and Node.js, A BitTorrent Private Tracker CMS with Multilingual, and IRC announce support, CloudFlare support.</p></blockquote><p>相比已经停止开发维护的NP框架，一个有正经团队维护的项目从好的看，出现问题能统一修复解决，但从另一方面，有点剥离站点个性化的需求——从目前项目列出来的几个站点来看，站点雷同程度<strong>有过之而无不及</strong> 。反正国人擅长建站，小站死了又是一批，能活成大站就是可以收割的时候2333）</p><p>同样考虑到更新频繁这一点，本处的搭建手记也仅做示例，具体还是请参见项目主页README的介绍。</p><blockquote><p>2018.08.27 请注意meanTorrent自 <code>v1.8</code> 停止开源维护。且该版本存在<em>严重</em>的信息暴露漏洞，<strong>不建议使用该框架建站</strong>。<br>2019.07.24 MINE站已经长时间522，而本月的18号另外一个用meanTorrent建站的中型站点PTDream+也宣布重新回到NPHP框架，实际也意味着meanTorrent框架的失败了。</p></blockquote><h3 id="依赖分析"><a href="#依赖分析" class="headerlink" title="依赖分析"></a>依赖分析</h3><p>meanTorrent其所用的依赖十分基础：Git（版本管理）、Node.js（运行程序）、MongoDB（数据库） 、Bower （浏览器包管理器）。</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/1822414240.jpg" data-fancybox="group" data-caption="2018-07-25_152451.jpg" class="fancybox"><img alt="2018-07-25_152451.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/1822414240.jpg" class="lazyload" title="2018-07-25_152451.jpg"></a></p><h2 id="开机及环境准备"><a href="#开机及环境准备" class="headerlink" title="开机及环境准备"></a>开机及环境准备</h2><p>按照本人惯例，开一台 <a href="https://www.vultr.com/?ref=6944263" target="_blank" rel="noopener">Vultr</a> (←这里有个很生硬的afflink) 的$5虚拟机进行搭建测试，系统为Ubuntu 16.04，地点随意。</p><p>同样，对基础依赖不大，所以全部程序直接包管理安装即可，喜欢折腾的可以通过源代码编译安装，但这里只是测试（踩坑），所以一切就简。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80  --recv 9DA31620334BD75D9DCB49F368818C72E52529D4</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse"</span>  | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list</span><br><span class="line">curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -</span><br><span class="line">sudo apt-get update && sudo apt-get upgrade</span><br><span class="line">sudo apt-get install -y git nodejs mongodb-org</span><br><span class="line">sudo service mongod start</span><br></pre></td></tr></tbody></table></figure></div><p>然后安装npm的包管理器bower （话说现在不应该都用Webpack或者Yarn了嘛？）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm install -g bower</span><br></pre></td></tr></tbody></table></figure></div><h2 id="安装meanTorrent"><a href="#安装meanTorrent" class="headerlink" title="安装meanTorrent"></a>安装meanTorrent</h2><blockquote><p><strong>建议使用非root账户进行安装！请使用adduser以及visudo创建新账户并赋予新账号超级用户权限。</strong></p></blockquote><p>首先从Github上clone一份源代码来</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git clone https://github.com/taobataoma/meanTorrent.git</span><br></pre></td></tr></tbody></table></figure></div><p>然后使用npm安装依赖（过程中一堆WARNING都可以不用管233）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> meanTorrent</span><br><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure></div><p>但似乎还是有问题，报错如下。在安装node-gyp、iconv以及sharp的时候报错。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">rhilip@vultr:~/meanTorrent$ npm install</span><br><span class="line"></span><br><span class="line">> iconv@2.2.3 install /root/meanTorrent/node_modules/iconv</span><br><span class="line">> node-gyp rebuild</span><br><span class="line"></span><br><span class="line">Traceback  (most recent call last):</span><br><span class="line">File  <span class="string">"/usr/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py"</span>, line 13,  <span class="keyword">in</span>  <module></module></span><br><span class="line">import gyp</span><br><span class="line">File  <span class="string">"/usr/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/gyp/__init__.py"</span>, line 8,  <span class="keyword">in</span>  <module></module></span><br><span class="line">import gyp.input</span><br><span class="line">File  <span class="string">"/usr/lib/node_modules/npm/node_modules/node-gyp/gyp/pylib/gyp/input.py"</span>, line 5,  <span class="keyword">in</span>  <module></module></span><br><span class="line">from compiler.ast import Const</span><br><span class="line">ImportError:  No module named compiler.ast</span><br><span class="line">gyp ERR! configure error</span><br><span class="line">`gyp ERR! stack Error:  `gyp` failed with <span class="built_in">exit</span> code:  1`</span><br><span class="line">gyp ERR! stack     at ChildProcess.onCpExit (/usr/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:336:16)</span><br><span class="line">gyp ERR! stack     at emitTwo (events.js:126:13)</span><br><span class="line">gyp ERR! stack     at ChildProcess.emit (events.js:214:7)</span><br><span class="line">gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)</span><br><span class="line">gyp ERR!  System  Linux  4.4.0-127-generic</span><br><span class="line">gyp ERR! <span class="built_in">command</span> <span class="string">"/usr/bin/node"</span>  <span class="string">"/usr/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"</span>  <span class="string">"rebuild"</span></span><br><span class="line">gyp ERR! cwd /root/meanTorrent/node_modules/iconv</span><br><span class="line">gyp ERR! node -v v8.11.3</span><br><span class="line">gyp ERR! node-gyp -v v3.6.2</span><br><span class="line">gyp ERR! not ok</span><br></pre></td></tr></tbody></table></figure></div><p>很明显的，还是出现了依赖缺失的情况，根据项目自身的介绍、 <a href="https://github.com/nodejs/node-gyp#installation" target="_blank" rel="noopener">node-gyp</a> 以及 <a href="https://github.com/lovell/sharp/issues/1087" target="_blank" rel="noopener">lovell/sharp#1087</a> 的相关提醒，安装<code>libicu-dev</code>、<code>GCC</code>编译库（主要是<code>c++</code>以及<code>make</code>这两个会被<code>node-gyp</code>调用）以及<code>python-dev</code>。然后重新安装依赖。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo apt-get install libicu-dev build-essential python-dev python-pip</span><br><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure></div><p>使用 <code>npm start</code> 运行。过程中如果出现以下报错，说明bower以及相关浏览器端依赖没有正确安装（特别是在root账户下，这里直接使用新用户解决）。按照作者的建议是使用<code>bower install --allow-root && bower prune --allow-root</code>手动装一下。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">rhilip@vultr:~/meanTorrent$ npm start</span><br><span class="line"></span><br><span class="line">> meanTorrent@0.1.0 start /root/meanTorrent</span><br><span class="line">> gulp</span><br><span class="line"></span><br><span class="line">[08:54:34]  Using gulpfile ~/meanTorrent/gulpfile.js</span><br><span class="line">[08:54:34]  Starting  <span class="string">'default'</span>...</span><br><span class="line">[08:54:34]  Starting  <span class="string">'env:dev'</span>...</span><br><span class="line">[08:54:34]  Starting  <span class="string">'copyLocalEnvConfig'</span>...</span><br><span class="line">[08:54:34]  Starting  <span class="string">'makeUploadsDir'</span>...</span><br><span class="line">[08:54:34]  Finished  <span class="string">'makeUploadsDir'</span> after 835  μs</span><br><span class="line">[08:54:34]  Finished  <span class="string">'copyLocalEnvConfig'</span> after 14 ms</span><br><span class="line">[08:54:34]  Starting  <span class="string">'lint'</span>...</span><br><span class="line">[08:54:34]  Starting  <span class="string">'less'</span>...</span><br><span class="line">Potentially unhandled rejection [2]  <span class="string">'../../../../public/lib/bootstrap/less/mixins/text-emphasis.less'</span> wasn<span class="string">'t found. Tried - /root/meanTorrent/public/lib/bootstrap/less/mixins/text-emphasis.less,../../../../public/lib/bootstrap/less/mixins/text-emphasis.less in file /root/meanTorrent/modules/core/client/less/mt-var.less line no. 4</span></span><br></pre></td></tr></tbody></table></figure></div><p>如果一切没有问题，那么在运行<code>npm start</code>后会提示一下信息：</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/706347362.jpg" data-fancybox="group" data-caption="TIM截图20180725190508.jpg" class="fancybox"><img alt="TIM截图20180725190508.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/706347362.jpg" class="lazyload" title="TIM截图20180725190508.jpg"></a></p><h2 id="Nginx反代以及开机自启"><a href="#Nginx反代以及开机自启" class="headerlink" title="Nginx反代以及开机自启"></a>Nginx反代以及开机自启</h2><p>通过以上环节，我们已经把所有的软件都基本配置齐全了，并启用了meanTorrent的开发环境。但是默认监听在localhost而不是0.0.0.0上，同样这个程序会因为ssh的断开而终止。所以我们需要安装Nginx以配置反代，同时使用systemctl或者其他守护工具（如作者使用多个bashscript脚本以及forever进行管理，如果你要使用forever的话，请先全局安装<code>npm i forever -g</code>）使其能开机运行并崩溃重启。</p><p>安装Nginx也直接用包管理器吧，lnmp1.5也提供单Nginx安装方式，反正怎么方便怎么来就ok~</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo apt-get install -y nginx-extras</span><br><span class="line">vi /etc/nginx/sites-available/default</span><br></pre></td></tr></tbody></table></figure></div><p>然后将默认的信息全部替换为以下常见反代配置（无SSL）</p><blockquote><p>如果是在CloudFlare后，建议参照本人之前教程进行设置。（<a href="https://blog.rhilip.info/archives/256/" target="_blank" rel="noopener">Cloudflare 下 Nginx 获取用户真实 IP 地址</a>）</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">server {</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    server_name _;</span><br><span class="line"></span><br><span class="line">    location /  {</span><br><span class="line">        proxy_pass          http://localhost:3000/;</span><br><span class="line">        proxy_redirect default;</span><br><span class="line">        proxy_set_header Accept-Encoding  <span class="string">""</span>;</span><br><span class="line">        proxy_set_header    X-Real-IP       <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header    X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    location ~  /\.ht {</span><br><span class="line">        deny all;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>然后重新载入Nginx配置信息并重启npm，你就可以直接使用 ip 或者域名 来进行访问了。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br><span class="line">npm start</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/1885535522.jpg" data-fancybox="group" data-caption="TIM截图20180725201334.jpg" class="fancybox"><img alt="TIM截图20180725201334.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/1885535522.jpg" class="lazyload" title="TIM截图20180725201334.jpg"></a></p><p>先不进行注册，退出我们来先写个service文件来使用Systemd进行守护管理。<code>sudo vi /etc/systemd/system/meantorrent.service</code>。并填入以下内容：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=meanTorrent</span><br><span class="line">Documentation=https://github.com/taobataoma/meanTorrent/wiki</span><br><span class="line">After=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">User=rhilip</span><br><span class="line">Group=rhilip</span><br><span class="line">UMask=007</span><br><span class="line">Environment=NODE_ENV=production</span><br><span class="line">WorkingDirectory=/home/rhilip/meanTorrent</span><br><span class="line">ExecStart=/usr/bin/node server.js</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10</span><br><span class="line">StandardOutput=syslog</span><br><span class="line">StandardError=syslog</span><br><span class="line">SyslogIdentifier=meanTorrent</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure></div><blockquote><p><strong>注意修改User、Group、WorkinDirectory为你自己的信息。</strong></p></blockquote><p>然后使用以下命令重载systemd配置以及实现开机启动等管理</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload <span class="comment"># 重载systemd配置</span></span><br><span class="line">sudo systemctl start meantorrent  <span class="comment"># 启动</span></span><br><span class="line">sudo systemctl stop meantorrent  <span class="comment"># 停止</span></span><br><span class="line">sudo systemctl restart meantorrent  <span class="comment"># 重启</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> meantorrent  <span class="comment"># 开机自动启动 （只需执行一次）</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> meantorrent  <span class="comment"># 取消开机启动</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><blockquote><p>个人建议这部分参考作者介绍 <a href="https://github.com/taobataoma/meanTorrent#getting-started-with-meantorrent" target="_blank" rel="noopener">Getting Started With meanTorrent</a>，对<code>config/env/torrent.js</code>下文件进行配置修改。关于站点个性化设置，本处不再累述~</p></blockquote><p>配置好邮件系统和Tracker Announce部分后，重启meanTorrent，然后注册账号即可。如果你只是和我一样测试，不对邮件系统进行配置，默认情况下注册后因为无法发送邮件导致账号状态为<code>inactive</code>无法使用，需要进入mongo修改账户信息（其实我是默认config下进行账号注册的2333）。方法如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">rhilip@vultr:~/meanTorrent$ mongo</span><br><span class="line">> use mean-v2</span><br><span class="line">switched to db mean-v2</span><br><span class="line">> db.users.update({<span class="string">'username'</span>:<span class="string">'admin1234567'</span>},{<span class="variable">$set</span>:{<span class="string">'status'</span>:<span class="string">'normal'</span>}})</span><br><span class="line">WriteResult({ <span class="string">"nMatched"</span> : 1, <span class="string">"nUpserted"</span> : 0, <span class="string">"nModified"</span> : 1 })</span><br></pre></td></tr></tbody></table></figure></div><p>那么，就完事了~</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/983124934.jpg" data-fancybox="group" data-caption="success.jpg" class="fancybox"><img alt="success.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/983124934.jpg" class="lazyload" title="success.jpg"></a></p><hr><h1 id="框架结构及相关分析"><a href="#框架结构及相关分析" class="headerlink" title="框架结构及相关分析"></a>框架结构及相关分析</h1><p>在实质性的进入Tracker内部逻辑之前，让我先水一篇分析性的文章~</p><h2 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h2><ul><li><strong>NexusPHP</strong></li></ul><p>像NP这种较老的框架并没有一个很明显的架构，各项信息杂糅在一起。但从导航栏相关中，大体可以分为以下几个子模块。</p><blockquote><p>以下分类方式仅代表本人意见。</p></blockquote><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/1204826235.jpg" data-fancybox="group" data-caption="nexusphp_framework.jpg" class="fancybox"><img alt="nexusphp_framework.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/1204826235.jpg" class="lazyload" title="nexusphp_framework.jpg"></a></p><p>当然，目前各站在这个基础上均增加了一些新的系统，比如（万恶的）勋章系统、发布预告系统、转种系统（含自引用与他站引用）、任务系统、考核系统；对原有系统也有些许扩展，例如Bangumi榜单、AniDB榜单等的添加。</p><ul><li><strong>meanTorrent</strong></li></ul><p>meanTorrent的可以在其modules下明确的了解其架构。撰稿时，架构如下：</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/2965044613.jpg" data-fancybox="group" data-caption="meantorrent_framwork.jpg" class="fancybox"><img alt="meantorrent_framwork.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/2965044613.jpg" class="lazyload" title="meantorrent_framwork.jpg"></a></p><h2 id="Tracker请求生命周期"><a href="#Tracker请求生命周期" class="headerlink" title="Tracker请求生命周期"></a>Tracker请求生命周期</h2><p>从整个请求流程来看，用户的Bittorrent客户端使用HTTP GET的形式向Tracker服务器发起请求，Tracker服务器根据内部逻辑向数据库及缓存请求请求相关信息，并最终回复给用户。具体流程可见下方简图：</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/195623119.jpg" data-fancybox="group" data-caption="lifetime.jpg" class="fancybox"><img alt="lifetime.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/195623119.jpg" class="lazyload" title="lifetime.jpg"></a></p><p>当然上面的肯定过于简单了，没有对Tracker的内部逻辑进行分析，而就Tracker的内部逻辑来看，以NP这个面向流程的框架为例子，简图如下：</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/1186911081.jpg" data-fancybox="group" data-caption="tracker_life.jpg" class="fancybox"><img alt="tracker_life.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/1186911081.jpg" class="lazyload" title="tracker_life.jpg"></a></p><p>而从整个Tracker网络（见下方图片示意）来看，用户在请求后，Tracker并不参与文件交换，同样，也不能真实的获取用户实际交换信息情况。（于是，我又可以就这个方向水一篇SP了）</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/3746969236.png" data-fancybox="group" data-caption="main-qimg-ff65100c115e14ddf6c606b3799e0ae7.png" class="fancybox"><img alt="main-qimg-ff65100c115e14ddf6c606b3799e0ae7.png" data-src="https://blog.rhilip.info/usr/uploads/2018/07/3746969236.png" class="lazyload" title="main-qimg-ff65100c115e14ddf6c606b3799e0ae7.png"></a></p><blockquote><p>图片来自 <a href="https://www.quora.com/Why-is-BitTorrent-not-downloading" target="_blank" rel="noopener">Why is BitTorrent not downloading? - Quora</a></p></blockquote><h2 id="Tracker分析"><a href="#Tracker分析" class="headerlink" title="Tracker分析"></a>Tracker分析</h2><p>在这一手记前，首先先列一下几个相关文件，以方便快速查阅：</p><ul><li><a href="http://www.bittorrent.org/beps/bep_0003.html" target="_blank" rel="noopener">BEP 0003 ：The BitTorrent Protocol Specification</a></li><li><a href="http://www.bittorrent.org/beps/bep_0007.html" target="_blank" rel="noopener">BEP 0007 ：IPv6 Tracker Extension</a></li><li><a href="http://www.bittorrent.org/beps/bep_0023.html" target="_blank" rel="noopener">BEP 0023 ：Tracker Returns Compact Peer Lists</a></li><li><a href="http://www.bittorrent.org/beps/bep_0048.html" target="_blank" rel="noopener">BEP 0048 ：Tracker Protocol Extension: Scrape</a></li><li>Private Tracker实现<ul><li><a href="https://github.com/ZJUT/NexusPHP/blob/master/announce.php" target="_blank" rel="noopener"><strong>ZJUT/NexusPHP</strong>/announce.php</a> ，同时也包括其他开源的NP魔改架构，如nwafu-mta/mtpt、zcqian/tjupt</li><li><a href="https://github.com/taobataoma/meanTorrent/blob/master/modules/announce/server/controllers/announces.server.controller.js" target="_blank" rel="noopener"><strong>taobataoma/meanTorren</strong>/modules/announce/server/controllers/announces.server.controller.js</a></li><li><a href="https://github.com/WhatCD/Ocelot/blob/master/worker.cpp" target="_blank" rel="noopener">WhatCD/Ocelot/worker.cpp</a> （Gazelle框架背后的主程序）</li><li><a href="https://gitee.com/mojie126/YoRHa/blob/master/application/announce/controller/TrackerController.php" target="_blank" rel="noopener">mojie126/YoRHa/application/announce/controller/TrackerController.php</a></li></ul></li></ul><hr><p>首先从最简单的信息查询来看，BT客户端会在还未正式向 <code>/announce</code> 发送请求之前，会向 <code>/scrape</code> 先发送请求（一般在种子 添加或者校验的时候），请求头仅添加种子的<code>info_hash</code>信息，示例如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">GET http://nexusphp.localhost/scrape.php?passkey=110099109e337b7e335aa368200d7907c&info_hash=%e4%40%ad%c6%27%db%02%40%f7%c8%ed%9e%7b%aab%a3%e1gFW HTTP/1.1</span><br><span class="line">Host: nexusphp.localhost</span><br><span class="line">User-Agent: uTorrent/2210(25302)</span><br><span class="line">Accept-Encoding: gzip</span><br><span class="line">Connection:  Close</span><br></pre></td></tr></tbody></table></figure></div><p>关于scrape的相关定义及返回信息在之前列出来的BEP 0048中，根据定义，这次<code>抓取(scrape)</code>会向用户返回一个字典描述对应种子的完成、未完成以及下载中的情况。本处直接引述定义：</p><blockquote><p>The response to a successful request is a bencoded dictionary containing one key-value pair: the key <code>files</code> with the value being a dictionary of the 20-byte string representation of an infohash paired with a dictionary of swarm metadata.</p></blockquote><p>根据NP的实现（见 <a href="https://github.com/ZJUT/NexusPHP/blob/master/scrape.php" target="_blank" rel="noopener">NexusPHP/scrape.php</a> ），会从param字段中搜索并匹配出来info_hash信息，如果param中没有能匹配出info_hash，则会直接返回站内<strong>所有</strong>种子的做种信息。（如下图）</p><p><a href="https://blog.rhilip.info/usr/uploads/2018/07/4091312727.jpg" data-fancybox="group" data-caption="TIM截图20180730165317.jpg" class="fancybox"><img alt="TIM截图20180730165317.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/07/4091312727.jpg" class="lazyload" title="TIM截图20180730165317.jpg"></a></p><blockquote><p>以上问题修复patch见 <a href="https://github.com/zcqian/tjupt/pull/11" target="_blank" rel="noopener">:lock: Not allow empty info_hash when request scrape page by Rhilip · Pull Request #11 · zcqian/tjupt</a>，截止目前，多数站点未对该问题进行修复。</p></blockquote><p>而如果存在info_hash的话，则会对每一个提供的hash值进行数据库查找，如果查询结果不存在，则返回<code>Torrent not registered with this tracker.</code>的错误，而如果存在，则以一个benc编码的字典返回结果。其json格式如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="string">"files"</span>: {</span><br><span class="line">    <span class="string">"xxxxxxxxxxxxxxxxxxxx"</span>: {<span class="string">"complete"</span>: 11, <span class="string">"downloaded"</span>: 13772, <span class="string">"incomplete"</span>: 19},</span><br><span class="line">    <span class="string">"yyyyyyyyyyyyyyyyyyyy"</span>: {<span class="string">"complete"</span>: 21, <span class="string">"downloaded"</span>: 206, <span class="string">"incomplete"</span>: 20}</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>此外，一个正常的客户端（例如<code>Transmission 2.94</code>）会定期向Tracker发送（announce）以下信息，并期望从tracker中获取回复以获取其他peer信息（这里仅指Private Tracker，其他的还有DHT网络、用户交换等方式）。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">GET http://nexusphp.localhost/announce.php?passkey=db534098baaaa68bd725aaaae3051518&info_hash=aaaaaaaaaaaaaaaaaaaa&peer_id=-TR2940-lhqkh1jtwjqp&port=21736&uploaded=0&downloaded=0&left=739573325&corrupt=0&key=DDDD2A2B&event=started&numwant=200&compact=1&no_peer_id=1 HTTP/1.1</span><br><span class="line">Host: nexusphp.localhost</span><br><span class="line">User-Agent: Transmission/2.94</span><br><span class="line">Accept-Encoding: gzip</span><br><span class="line">Connection: Close</span><br></pre></td></tr></tbody></table></figure></div><p>而tracker则会根据GET字段中的<code>compact</code>以及<code>no_peer_id</code>两个字段分别返回不同构造的结果，并设置相应头为</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Type: text/plain; charset=utf-8</span><br><span class="line">Pragma: no-cache</span><br></pre></td></tr></tbody></table></figure></div><p>当<code>compact=0&no_peer_id=0</code>时，其返回的json格式如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="string">"interval"</span>: 50,</span><br><span class="line">    <span class="string">"min interval"</span>: 20,</span><br><span class="line">    <span class="string">"complete"</span>: 6871,</span><br><span class="line">    <span class="string">"incomplete"</span>: 3,</span><br><span class="line">    <span class="string">"peer"</span>: [</span><br><span class="line">        {</span><br><span class="line">            <span class="string">"ip"</span>: <span class="string">"xxx.xxxx.xxx.xxx"</span>,</span><br><span class="line">            <span class="string">"peer_id"</span>: <span class="string">"-TR2940-lhqkh1j31jqp"</span>,</span><br><span class="line">            <span class="string">"port"</span>: 5698,</span><br><span class="line">        },</span><br><span class="line">        ....</span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>其中， <code>peer_id</code> 视用户Requests字段这一项可以不要，而如果用户申请使用compact的形式返回，那么peer字段则会返回一个string而不是dict。</p><p>如果发生错误，则会返回一个错误字段（string），JSON格式内容如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="string">"failure reason"</span>: <span class="string">"Error msg"</span>,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="Bencode编码"><a href="#Bencode编码" class="headerlink" title="Bencode编码"></a>Bencode编码</h2><p>在上面的例子中，我都是以json格式的形式来展示tracker返回的Response信息，但实际上，返回的信息是以Bencode的形式进行编码的。关于Bencode的介绍，可以访问<a href="https://en.wikipedia.org/wiki/Bencode" target="_blank" rel="noopener">Bencode - Wikipedia</a>。这里我们只需要知道一下编码规则就行：</p><div class="table-container"><table><thead><tr><th style="text-align:center">data types</th><th>raw</th><th>encoded</th></tr></thead><tbody><tr><td style="text-align:center">int</td><td>-42</td><td>i-42e</td></tr><tr><td style="text-align:center">string</td><td>‘spam’</td><td>4:spam</td></tr><tr><td style="text-align:center">list</td><td>[‘XYZ’, 4321]</td><td>l3:XYZi4321ee</td></tr><tr><td style="text-align:center">dict</td><td>{‘XYZ’: 4321}</td><td>d3:XYZi4321ee</td></tr></tbody></table></div><p>这些甚至不需要你自己一个一个拼合，现在有超多的库帮你进行拼合，你只需要构造好相应的字典，直接调用即可，例如：</p><ul><li>PHP：<a href="https://github.com/sandfoxme/bencode" target="_blank" rel="noopener">sandfoxme/bencode</a>、<a href="https://github.com/rchouinard/bencode" target="_blank" rel="noopener">rchouinard/bencode</a>、<a href="https://github.com/dsmithhayes/bencode" target="_blank" rel="noopener">dsmithhayes/bencode</a>、<a href="https://github.com/bhutanio/torrent-bencode" target="_blank" rel="noopener">bhutanio/torrent-bencode</a></li><li>Python：<a href="https://github.com/amyth/bencode" target="_blank" rel="noopener">amyth/bencode</a>、<a href="https://github.com/utdemir/bencoder" target="_blank" rel="noopener">utdemir/bencoder</a>、<a href="https://github.com/jcul/bencode" target="_blank" rel="noopener">jcul/bencode</a>、<a href="https://github.com/fuzeman/bencode.py" target="_blank" rel="noopener">fuzeman/bencode.py</a></li><li>Node.js： <a href="https://github.com/themasch/node-bencode" target="_blank" rel="noopener">themasch/node-bencode</a>、<a href="https://github.com/benjreinhart/bencode-js" target="_blank" rel="noopener">benjreinhart/bencode-js</a></li></ul><hr><h1 id="构造一个Private-Tracker的Demo"><a href="#构造一个Private-Tracker的Demo" class="headerlink" title="构造一个Private-Tracker的Demo"></a>构造一个Private-Tracker的Demo</h1><p>在这节及之后的PT架构书写过程中，我将使用<code>ThinkPHP 5</code>作为MVC框架，<a href="https://github.com/rchouinard/bencode" target="_blank" rel="noopener">rchouinard/bencode</a> 作为Bencode编码库，实现一个演示性质的Private Tracker。在此，我将默认你已经对前面的内容有所理解，并对PHP以及composer有了解运用。</p><p>该项目代码见： <a href="https://github.com/Rhilip/Simple-Private-Tracker" target="_blank" rel="noopener">https://github.com/Rhilip/Simple-Private-Tracker</a> ，仅供学习无法运行~</p><blockquote><p>请注意，本文所列方法，仅表示本人的一种实现。实际只要符合BEP 0003以及BEP 0027的都是可行的实现~<br>请注意，本处所列代码并不一定是最新的，仅代表思考逻辑过程，具体代码请看repo</p></blockquote><p>相关commit：<a href="https://github.com/Rhilip/Simple-Private-Tracker/commit/c2c37e668a3f63722b6d4d736e957c8cda76b2a8" target="_blank" rel="noopener">c2c37e668a3f63722b6d4d736e957c8cda76b2a8</a></p><h2 id="基础准备"><a href="#基础准备" class="headerlink" title="基础准备"></a>基础准备</h2><p>首先，我们需要准备好PHP环境（建议为7.x）以及数据库，因为学习，所以缓存暂时使用文件缓存。并使用composer安装 ThinkPHP5以及bencode ，其命令分别如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">composer create-project topthink/think=5.0.* tp5  --prefer-dist</span><br><span class="line"><span class="built_in">cd</span> pt</span><br><span class="line">composer require rych/bencode</span><br></pre></td></tr></tbody></table></figure></div><p>准备相关数据表，分别用来存储 Torrent（种子信息）、User（用户信息）、Peer（做种人信息）、Snatch（做种完成情况），此处为了方便（偷懒）直接使用NP的建表语句（-> 见 <a href="https://github.com/ZJUT/NexusPHP/blob/master/_db/dbstructure.sql" target="_blank" rel="noopener">NexusPHP/_db/dbstructure.sql</a> 相关）就行（实际很多字段不需要）。顺带也方面后续兼容~</p><p>而文件夹方面，依次添加以下文件：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">├─application</span><br><span class="line">│  ├─tracker</span><br><span class="line">│  │  ├─controllers</span><br><span class="line">│  │  │ └─Index.php</span><br></pre></td></tr></tbody></table></figure></div><p>并在路由（<code>route\route.php</code>）中注册两个控制器</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">Route::get(<span class="string">'tracker/scrape'</span>,<span class="string">'tracker/Index/scrape'</span>);</span><br><span class="line">Route::get(<span class="string">'tracker/announce'</span>,<span class="string">'tracker/Index/announce'</span>);</span><br></pre></td></tr></tbody></table></figure></div><p>并在设置中开启你的debug模式以及应用trace，准备postman或其他作为调试工具。</p><h2 id="方法准备"><a href="#方法准备" class="headerlink" title="方法准备"></a>方法准备</h2><p>我们先要为<code>TrackerController</code> 准备一些公用方法，分别用于构造响应信息（包括正常的以及错误）、禁用浏览器访问。修改<code>app\Http\Controllers\TrackerController.php</code>为以下信息：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><!--?php</span--><br><span class="line">namespace app\tracker\controller;</span><br><span class="line">use think\Controller;</span><br><span class="line">use think\Db;</span><br><span class="line">use think\facade\Cache;</span><br><span class="line">use think\Request;</span><br><span class="line">use think\Response;</span><br><span class="line">use think\Validate;</span><br><span class="line">use Rych\Bencode\Bencode;</span><br><span class="line">class Index extends Controller</span><br><span class="line">{</span><br><span class="line">    private <span class="variable">$errormsg</span> = [</span><br><span class="line">        // Error message about requests params</span><br><span class="line">        // Error message about Bittorrent Client</span><br><span class="line">        // Error message about User Account</span><br><span class="line">        // Error message about Torrent</span><br><span class="line">        // Error message about Server</span><br><span class="line">    ];</span><br><span class="line">    private <span class="variable">$announce_param</span> = [];  // Announce Param HERE~</span><br><span class="line">    public <span class="keyword">function</span> announce(Request <span class="variable">$request</span>)</span><br><span class="line">    {</span><br><span class="line">    }</span><br><span class="line">    public <span class="keyword">function</span> scrape(Request <span class="variable">$request</span>)</span><br><span class="line">    {</span><br><span class="line">    }</span><br><span class="line">    private <span class="keyword">function</span> block_browser()</span><br><span class="line">    {</span><br><span class="line">        <span class="variable">$judge</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$request</span> = Request();</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/Mozilla|Opera|Links|Lynx/"</span>, <span class="variable">$request</span>->header(<span class="string">"user_agent"</span>))) {</span><br><span class="line">            <span class="variable">$judge</span> = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$request</span>->isSSl()) {</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                (null !== <span class="variable">$request</span>->header(<span class="string">"Cookie"</span>, null)) ||</span><br><span class="line">                (null !== <span class="variable">$request</span>->header(<span class="string">"Accept-Language"</span>, null)) ||</span><br><span class="line">                (null !== <span class="variable">$request</span>->header(<span class="string">"Accept-Charset"</span>, null))</span><br><span class="line">            ) {</span><br><span class="line">                <span class="variable">$judge</span> = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$judge</span>;</span><br><span class="line">    }</span><br><span class="line">    private <span class="keyword">function</span> sendErrorMsg(<span class="variable">$code</span> = 999, <span class="variable">$msg</span> = null)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$code</span> && !<span class="variable">$msg</span>) {</span><br><span class="line">            <span class="variable">$msg</span> = <span class="variable">$this</span>->makeErrorMsg(<span class="variable">$code</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>->bencResp([</span><br><span class="line">            <span class="string">"failure reason"</span> => <span class="variable">$msg</span>,</span><br><span class="line">        ]);</span><br><span class="line">    }</span><br><span class="line">    private <span class="keyword">function</span> makeErrorMsg(<span class="variable">$code</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"<span class="variable">$code</span> - "</span> . <span class="variable">$this</span>->errormsg[<span class="variable">$code</span>];</span><br><span class="line">    }</span><br><span class="line">    private <span class="keyword">function</span> bencResp(<span class="variable">$obj</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="variable">$rep_benc</span> = Bencode::encode(<span class="variable">$obj</span>);</span><br><span class="line">        <span class="built_in">return</span> response(<span class="variable">$rep_benc</span>)</span><br><span class="line">            ->header(<span class="string">"Content-Type"</span>, <span class="string">"text/plain; charset=utf-8"</span>)</span><br><span class="line">            ->header(<span class="string">"Pragma"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></span></pre></td></tr></tbody></table></figure></div><p>我们将在<code>$errormsg</code>中定义错误信息，并在<code>announce</code>以及<code>scrape</code>这两个公开方法中定义具体逻辑。<strong>而所有的响应应该使用<code>bencResp</code>构造。</strong></p><h2 id="构建Scrape"><a href="#构建Scrape" class="headerlink" title="构建Scrape"></a>构建Scrape</h2><p>相比较为复杂的Announce逻辑，我们先来处理较为简单的Scrape逻辑：</p><ol><li>从请求头中获取所有<code>info_hash</code>信息，</li><li>从数据库中匹配出来对应的做种内容，</li><li>构造返回或错误信息。</li></ol><p>下面我们开始写Scrape的具体逻辑。首先我们先禁用掉 <code>非GET请求</code> 以及 <code>浏览器及非BT客户端请求</code>。代码如下，但实际上，因为已经设置的路由关系，我们其实已经禁止了非GET请求~，这里需要不需要都无所谓了~</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">// 1. Block NON-GET requests, (though it should be block <span class="keyword">in</span> Router)</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$request</span>->isGet()) <span class="built_in">return</span> <span class="variable">$this</span>->sendErrorMsg(100);</span><br><span class="line">// 2. Block Browser, Crawler or Cheater</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$this</span>->block_browser()) <span class="built_in">return</span> <span class="variable">$this</span>->sendErrorMsg(101);</span><br></pre></td></tr></tbody></table></figure></div><p>然后我们从请求头中获取info_hash信息，并检查其是否存在（这里附加对各个info_hash的字节数进行检查也行）。当其不存在时，返回错误信息。</p><p><strong>注意</strong>，根据<a href="http://www.bittorrent.org/beps/bep_0048.html" target="_blank" rel="noopener">BEP0048</a>规定 ，info_hash在url中是以<code>info_hash=xxxxx&info_hash=yyyyy</code>的形式存在的，故本人之前的写法是错误的（之前写法见<a href="https://web.archive.org/web/20181209113334/https://blog.rhilip.info/archives/988/" target="_blank" rel="noopener">Archive.org的备份</a>，只能匹配<code>info_hash[]=xxxx</code>的情况）</p><p>应为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">preg_match_all(<span class="string">'/info_hash=([^&]*)/i'</span>, urldecode(Request::server(<span class="string">'query_string'</span>)), <span class="variable">$info_hash_match</span>);</span><br><span class="line"><span class="variable">$info_hash</span> = <span class="variable">$info_hash_match</span>[1];</span><br></pre></td></tr></tbody></table></figure></div><p>针对info_hash未找到的情况进行处理。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (count(<span class="variable">$info_hash</span>) < 1) {</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$this</span>->sendErrorMsg(null,</span><br><span class="line">        str_replace(<span class="string">':attribute'</span>, <span class="string">'info_hash'</span>, <span class="variable">$this</span>->makeErrorMsg(102)));</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>使用查询构造器生成SQL语句并查询，并对查询结果进行检查；当数据库中未检查到该种子时，返回错误信息。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$res</span> = Db::table(<span class="string">"torrents"</span>)</span><br><span class="line">    ->field([<span class="string">'info_hash'</span>, <span class="string">'times_completed'</span>, <span class="string">'seeders'</span>, <span class="string">'leechers'</span>])</span><br><span class="line">    -><span class="built_in">where</span>(<span class="string">'info_hash'</span>, <span class="string">"IN"</span>, <span class="variable">$info_hash</span>)</span><br><span class="line">    ->select();</span><br><span class="line"><span class="keyword">if</span> (count(<span class="variable">$res</span>) < 1) {</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$this</span>->sendErrorMsg(131);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>如果没有任何问题，我们需要把原来数据库中查询的结果（如下）进行转换</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">array(1) {</span><br><span class="line">  [0] => array(4) {</span><br><span class="line">    [<span class="string">"info_hash"</span>] => string(20) <span class="string">"aaaaaaaaaaaaaaaaaaaaa"</span></span><br><span class="line">    [<span class="string">"times_completed"</span>] => int(0)</span><br><span class="line">    [<span class="string">"seeders"</span>] => int(0)</span><br><span class="line">    [<span class="string">"leechers"</span>] => int(0)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>方法如下，并最后使用<code>bencResp($obj)</code>的方式进行编码并发送</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="variable">$rep</span> = [</span><br><span class="line">    <span class="string">'files'</span> => array_map(<span class="keyword">function</span> (<span class="variable">$item</span>) {</span><br><span class="line">        <span class="built_in">return</span> array (</span><br><span class="line">            <span class="variable">$item</span>[<span class="string">"info_hash"</span>] => [</span><br><span class="line">                <span class="string">"complete"</span> => <span class="variable">$item</span>[<span class="string">"seeders"</span>],</span><br><span class="line">                <span class="string">"downloaded"</span> => <span class="variable">$item</span>[<span class="string">"times_completed"</span>],</span><br><span class="line">                <span class="string">"incomplete"</span> => <span class="variable">$item</span>[<span class="string">"leechers"</span>],</span><br><span class="line">            ]</span><br><span class="line">        );</span><br><span class="line">    },<span class="variable">$res</span>)</span><br><span class="line">];</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$this</span>->bencResp(<span class="variable">$rep</span>);</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://blog.rhilip.info/usr/uploads/2018/08/1882544365.jpg" data-fancybox="group" data-caption="scrape_resp.jpg" class="fancybox"><img alt="scrape_resp.jpg" data-src="https://blog.rhilip.info/usr/uploads/2018/08/1882544365.jpg" class="lazyload" title="scrape_resp.jpg"></a></p><hr><h1 id="PT站的做种和魔力值是如何增加换算的？"><a href="#PT站的做种和魔力值是如何增加换算的？" class="headerlink" title="PT站的做种和魔力值是如何增加换算的？"></a>PT站的做种和魔力值是如何增加换算的？</h1><p>PT站的做种和魔力值是如何增加换算的？<br>相信混了一段PT界的小伙伴，一定头疼一个问题，各大站点的PT魔力值是怎么计算的呢？<br>以下是整理的帮助理解PT网站的魔力值计算方法。</p><p><strong>统计工具采用 PTTools 这款<a href="http://www.pttools.cn" target="_blank" rel="noopener">PT助手</a>的截图（隐私部分已做打码处理）</strong></p><p><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly81YjA5ODhlNTk1MjI1LmNkbi5zb2h1Y3MuY29tL2ltYWdlcy8yMDE5MDkyMS8wN2ExYmI2MzIwODU0MzQyODczYjBkNjE4OGQ4YzQ1Yy5wbmc?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly81YjA5ODhlNTk1MjI1LmNkbi5zb2h1Y3MuY29tL2ltYWdlcy8yMDE5MDkyMS8wN2ExYmI2MzIwODU0MzQyODczYjBkNjE4OGQ4YzQ1Yy5wbmc?x-oss-process=image/format,png" class="lazyload" title></a></p><p>首先要说一下的是，国内PT站点基本上都是同一套魔力值公式，在计算魔力值的差异上基本不大。但是相信很多小伙伴还是云里雾里。下面上一张魔力值计算的公示图<strong>（国内90%的PT网站都采用的这套公式）</strong></p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxL2IzMTU4M2U5MjY5ZDQwY2U5YjgxMzdiOGRmZjE1NWU1LnBuZw?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxL2IzMTU4M2U5MjY5ZDQwY2U5YjgxMzdiOGRmZjE1NWU1LnBuZw?x-oss-process=image/format,png" class="lazyload" title></a></p><p>如图所示，很复杂的一套公式。文科生包括小编我在内，对这个公式真实“恨之入骨”~当然了，其实也不复杂。经过小编通过多种资料的查询，最终得出的结论如下（简易版）：</p><p><strong>1.发布时间较长</strong></p><p><strong>2.做种人数小于10个</strong></p><p><strong>3.体积越大越好</strong></p><p>只要在保种的同时满足以上3点，基本上跑满进度条是很有可能的！当然啦，如果小伙伴需要了解更加详细的资料，可以继续往下看。</p><p><strong>魔力值分析</strong></p><p>魔力值的A公式如下：</p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxL2I5OWQxNjg1MWIxZDQxNmU4NTQ1MGIxYzFiN2QyZTZhLnBuZw?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxL2I5OWQxNjg1MWIxZDQxNmU4NTQ1MGIxYzFiN2QyZTZhLnBuZw?x-oss-process=image/format,png" class="lazyload" title></a></p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzgxNzhmYmYyNmNlOTRlOWI4YTZkMzQ3ZjVlNGFhY2Q5LnBuZw?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzgxNzhmYmYyNmNlOTRlOWI4YTZkMzQ3ZjVlNGFhY2Q5LnBuZw?x-oss-process=image/format,png" class="lazyload" title></a></p><p>式中</p><ul><li><strong>A</strong>为中间变量</li><li><strong>Ti</strong>为第<strong>i</strong>个种子的生存时间, 即自种子发布起到现在所经过的时间, 单位是周</li><li><strong>T0</strong>为参数。<strong>T0</strong> = 4</li><li><strong>Si</strong>为第<strong>i</strong>个种子的大小，单位是GB</li><li><strong>Ni</strong>为第<strong>i</strong>个种子当前的做种者数</li><li><strong>N0</strong>为参数。<strong>N0</strong> = 7</li><li><strong>B</strong>为1小时中用户获得的做种魔力值点数</li><li><strong>B0</strong>为参数，代表用户1小时获得魔力值的上限。<strong>B0</strong> = 50</li><li><strong>L</strong>为参数。<strong>L</strong> = 300</li></ul><p><strong>A值</strong></p><p>我们只讨论单个种子的情况，因此忽略掉加和运算，该公式包含三个变量，为了研究每个变量的影响，我们把公式拆分</p><p>（1）1-10^(-0.25*i) 种子存活周期影响</p><p>（2）1+1.414*10^(-0.167*(i-1)) 当前做种人数影响</p><p>其中i为变量，分别代表周期数（以周为单位）和种子数</p><p>（1）函数图形如下</p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzU0MmRjZWQ4ZDdkNTQwNTBiOTc1NmJkODgxMGRkYzU3LmpwZWc?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzU0MmRjZWQ4ZDdkNTQwNTBiOTc1NmJkODgxMGRkYzU3LmpwZWc?x-oss-process=image/format,png" class="lazyload" title></a></p><p>从图中我们可以很明显看到：8周后时间对函数值没有明显影响。</p><p>（2）函数图形如下</p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxL2U4MjU2NDM3OTNkZjQ2YmM5MTRmMGQ2YjJkMzAwYjQ0LmpwZWc?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxL2U4MjU2NDM3OTNkZjQ2YmM5MTRmMGQ2YjJkMzAwYjQ0LmpwZWc?x-oss-process=image/format,png" class="lazyload" title></a></p><p>从图中我们可以很明显看到：大于10个做种人数后时间对函数值没有明显影响。</p><p>（3）（1）*（2）的函数图形为</p><p>我们假设做种数和周期的数值相等，可得如下图像</p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzA4M2RjNGQ2NWVjMzQ0NjU4ZTBmYWNkNTEyNThlMWQ4LmpwZWc?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzA4M2RjNGQ2NWVjMzQ0NjU4ZTBmYWNkNTEyNThlMWQ4LmpwZWc?x-oss-process=image/format,png" class="lazyload" title></a></p><p>从中可以看到，种子数计时间为5时 ，有最大值。</p><p>（4）（1）*（2）*Si的图形</p><p>我们让做种数、大小和周期的数值相等，可得如下图像</p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzVhYWQzMmViMTNlODQwN2NiODc0OTYwOTYyMzIwZjAzLmpwZWc?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzVhYWQzMmViMTNlODQwN2NiODc0OTYwOTYyMzIwZjAzLmpwZWc?x-oss-process=image/format,png" class="lazyload" title></a></p><p><strong>B值</strong></p><p>B值（也即每小时魔力值）与A值关系见下图：</p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzYwNDM5NmMwZjg5OTQ5NTJiMGIyNWE0MjVlMWYzOTk4LmpwZWc?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxLzYwNDM5NmMwZjg5OTQ5NTJiMGIyNWE0MjVlMWYzOTk4LmpwZWc?x-oss-process=image/format,png" class="lazyload" title></a></p><p>在0-300时基本是直线关系。</p><p><strong>特殊情况分析</strong></p><p>当周期大于8，种子数多于10，函数（1）（2）的值不再随他们的增加而明显改变，因此以此时的值代替周期大于8，种子数多于10的值是合理的。</p><p>下面分析满足以上情况时的魔力值。</p><p>首先周期等于8，种子数等于10时，函数（1）（2）的值分别为0.99和1.04，则A值为A=1.0296*Si ,B值为B= 31.85*atan(（1.0296*Si）/300)</p><p>其图形如下</p><p><a href="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxL2Y4ZWNkNjBiNmYzNTQ4MmE5YzZjZDE3OTI1MzFhMjQ0LmpwZWc?x-oss-process=image/format,png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://imgconvert.csdnimg.cn/aHR0cDovLzViMDk4OGU1OTUyMjUuY2RuLnNvaHVjcy5jb20vaW1hZ2VzLzIwMTkwOTIxL2Y4ZWNkNjBiNmYzNTQ4MmE5YzZjZDE3OTI1MzFhMjQ0LmpwZWc?x-oss-process=image/format,png" class="lazyload" title></a></p><p>重要结论：经拟合，以上线性方程为y=0.09658x+0.545，x为种子尺寸，y为一个种子每小时魔力值。相关系数为0.99867，标准偏差为0.2886。该方程适合周期大于8 ，做种数多于10的情况。</p><p>同时我们还可以得到一个重要结论：占用同样的做种磁盘空间，多个种子和一个种子所获得的魔力值是相等的（不考虑0.6*12，适用于周期大于8，做种数多于10的情况），因为他们的A值是相等的，比如100g种子1个和1g种子100个，他们的A值可用A=1.0296*Si计算，显然二者相等。</p><p><strong>结论</strong></p><p>1. 8周后时间的增加不会让魔力值明显增加；</p><p>2. 做种人数超过10后，做种人数的增加不会明显减小魔力值；</p><p>3. 一个种子存活8周后，且做种人数超过10，种子尺寸小于200G时，魔力值与种子大小有近似直线关系，即B=0.09658x+0.545；</p><p>4. 占用同样的做种磁盘空间，多个种子和一个种子所获得的魔力值是相等的。</p><p>以上就是PT站点魔力值的计算方法，看似复杂，其实主要记住最重要的三点“<strong>大</strong>” “<strong>老</strong>” “<strong>少</strong>” （即种子体积大，种子存活时间长，种子的做种人数少！）</p><hr><blockquote><p>参考来源：<br><a href="https://blog.rhilip.info/archives/961/" target="_blank" rel="noopener">漫谈 PT 构架（1）：NexusPHP 简介</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      PT（Private Tracker）是一种改良自 BitTorrent 协定的 P2P 下载方式，“Private Tracker”指私有种子服务器。与 BT 最大的不同点分别为可进行私密范围下载，及可统计每个用户的上载及下载量。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="PT站" scheme="https://tamsiree.com/categories/TechnicalResearch/PT%E7%AB%99/"/>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="PT站" scheme="https://tamsiree.com/tags/PT%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>使用NexusPhp打造个性化的PT站</title>
    <link href="https://tamsiree.com/TechnicalResearch/PT%E7%AB%99/NexusPhp/%E4%BD%BF%E7%94%A8NexusPhp%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E7%9A%84PT%E7%AB%99/"/>
    <id>https://tamsiree.com/TechnicalResearch/PT%E7%AB%99/NexusPhp/%E4%BD%BF%E7%94%A8NexusPhp%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E7%9A%84PT%E7%AB%99/</id>
    <published>2020-02-05T12:46:11.000Z</published>
    <updated>2020-02-06T13:27:03.034Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>国内使用 <code>NexusPhp</code> 建立的PT站越来越多，风格大都雷同（正如yofeng同学所说的审美疲劳……），如何把 <code>NexusPhp</code> 快速配置成你喜欢的界面、风格，本人在这里抛砖引玉，希望大家在这里开放的讨论、共享使用 <code>NexusPhp</code> 建站心得，OK，Let’s doing…</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="为用户等级追加标识"><a href="#为用户等级追加标识" class="headerlink" title="为用户等级追加标识"></a>为用户等级追加标识</h2><p>方法：以简体中文为例，打开 <code>nexusphp.v1.5.beta4.2010XXXX\lang\chs\lang_functions.php</code> 修改 <code>257-266</code> 行下列设置（如果要其他语种也需要，则每种语言包都要配置）：  </p><p>修改前：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">'text_peasant'</span> => <span class="string">"Peasant"</span>,</span><br><span class="line"><span class="string">'text_user'</span> => <span class="string">"User"</span>,</span><br><span class="line"><span class="string">'text_power_user'</span> => <span class="string">"Power User"</span>,</span><br><span class="line"><span class="string">'text_elite_user'</span> => <span class="string">"Elite User"</span>,</span><br><span class="line"><span class="string">'text_crazy_user'</span> => <span class="string">"Crazy User"</span>,</span><br><span class="line"><span class="string">'text_insane_user'</span> => <span class="string">"Insane User"</span>,</span><br><span class="line"><span class="string">'text_veteran_user'</span> => <span class="string">"Veteran User"</span>,</span><br><span class="line"><span class="string">'text_extreme_user'</span> => <span class="string">"Extreme User"</span>,</span><br><span class="line"><span class="string">'text_ultimate_user'</span> => <span class="string">"Ultimate User"</span>,</span><br><span class="line"><span class="string">'text_nexus_master'</span> => <span class="string">"Nexus Master"</span>,</span><br></pre></td></tr></tbody></table></figure></div><p>修改后：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">'text_peasant'</span> => <span class="string">"(堕落者)Peasant"</span>,</span><br><span class="line"><span class="string">'text_user'</span> => <span class="string">"(穷人)User"</span>,</span><br><span class="line"><span class="string">'text_power_user'</span> => <span class="string">"(百姓)Power User"</span>,</span><br><span class="line"><span class="string">'text_elite_user'</span> => <span class="string">"(小康)Elite User"</span>,</span><br><span class="line"><span class="string">'text_crazy_user'</span> => <span class="string">"(大康)Crazy User"</span>,</span><br><span class="line"><span class="string">'text_insane_user'</span> => <span class="string">"(中产)Insane User"</span>,</span><br><span class="line"><span class="string">'text_veteran_user'</span> => <span class="string">"(富商)Veteran User"</span>,</span><br><span class="line"><span class="string">'text_extreme_user'</span> => <span class="string">"(银行家)Extreme User"</span>,</span><br><span class="line"><span class="string">'text_ultimate_user'</span> => <span class="string">"(豪门)Ultimate User"</span>,</span><br><span class="line"><span class="string">'text_nexus_master'</span> => <span class="string">"(贵族)Nexus Master"</span>,</span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>注意：Web服务器需要重启http生效！</p></blockquote><p><a href="https://imgsa.baidu.com/forum/w%3D580/sign=7259bb0994cad1c8d0bbfc2f4f3e67c4/69be26d0f703918fe2fb96ec503d269759eec403.jpg" data-fancybox="group" data-caption="为用户等级追加标识" class="fancybox"><img alt="为用户等级追加标识" title="为用户等级追加标识" data-src="https://imgsa.baidu.com/forum/w%3D580/sign=7259bb0994cad1c8d0bbfc2f4f3e67c4/69be26d0f703918fe2fb96ec503d269759eec403.jpg" class="lazyload"></a></p><h2 id="关闭搜索箱"><a href="#关闭搜索箱" class="headerlink" title="关闭搜索箱"></a>关闭搜索箱</h2><p>应用此风格的有 <code>CHDbits</code> 、 <code>TCCF</code> 、 <code>Pig2Pig</code> 等<br>为什么要关闭？<br><code>Nexusphp</code> 的搜索箱功能十分强大，不过对用户来说并不是每次都要使用的，且所占版面较大（个人觉得也是版面看起来雷同的一大因素），由于在后台和数据库中无相关配置项，故需要对程序进行修改：</p><p>打开主目录下的 <code>torrents.php</code> 文件，查找 <code>874-876</code> 行，来到这里：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span>"ksearchboxmain"><br><table><tbody><tr><td class="code"><pre><span class="line"></span></pre></td><td class="colhead" align="center" colspan="2"><br><span class="line">    <a href="<span" class="string">"javascript: klappe_news('searchboxmain')"</a></span><a href="<span" class="string">><br><span class="line">        </span></a><a href="pic/trans.gif" data-fancybox="group" data-caption="Show/Hide" class="fancybox"><img class="minus lazyload" id="picsearchboxmain" alt="Show/Hide" title="Show/Hide" data-src="pic/trans.gif"></a><br><span class="line">        <span class="meta"><!--?php</span--> <span class="keyword">echo</span> $lang_torrents[<span class="string">'text_search_box'</span>] <span class="meta">?></span></span><br><span class="line">    </span></span><br><span class="line"></span></td></tr></tbody><tbody id="<span" class="string"></tbody></table></figure></div><p>将 <code>class="minus"</code> 改成 <code>class="plus"</code><br>在 <code></code> 中追加 <code></code></p><p>完成后，代码变为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span>"ksearchboxmain" style=<span class="string">"display:none"</span>><br><table><tbody><tr><td class="code"><pre><span class="line"></span></pre></td><td class="colhead" align="center" colspan="2">  <br><span class="line">    <a href="<span" class="string">"javascript: klappe_news('searchboxmain')"</a></span><a href="<span" class="string">><br><span class="line">        </span></a><a href="pic/trans.gif" data-fancybox="group" data-caption="Show/Hide" class="fancybox"><img class="plus lazyload" id="picsearchboxmain" alt="Show/Hide" title="Show/Hide" data-src="pic/trans.gif"></a><br><span class="line">        <span class="meta"><!--?php</span--> <span class="keyword">echo</span> $lang_torrents[<span class="string">'text_search_box'</span>] <span class="meta">?></span></span><br><span class="line">    </span></span><br><span class="line"></span></td></tr></tbody><tbody id="<span" class="string"></tbody></table></figure></div><p><a href="https://imgsa.baidu.com/forum/w%3D580/sign=de05584a113853438ccf8729a313b01f/046d5fd5ad6eddc4baf51fdd38dbb6fd5266331b.jpg" data-fancybox="group" data-caption="关闭搜索箱" class="fancybox"><img alt="关闭搜索箱" title="关闭搜索箱" data-src="https://imgsa.baidu.com/forum/w%3D580/sign=de05584a113853438ccf8729a313b01f/046d5fd5ad6eddc4baf51fdd38dbb6fd5266331b.jpg" class="lazyload"></a></p><h2 id="增加种子类别快速搜索功能"><a href="#增加种子类别快速搜索功能" class="headerlink" title="增加种子类别快速搜索功能"></a>增加种子类别快速搜索功能</h2><p>应用此风格的有 <code>HDcity</code> 、<code>高清第一</code> 等<br><code>NexusPhp</code> 种子在高亮模式下本来就有此功能，不过大多数站点缺省模式下并不流行种子高亮显示方式（本人所了解的有 <code>HDStar</code> 及部分刚运营的PT站），通过颜色来判断种子类别还是有难度的！<br>最流行的还是以<code>字符</code>和<code>图标</code>显示（可以通过配置数据库<code>user</code>表来预置），但在这两种模式下恰恰没有快速搜索的字符按钮，不过我们可以通过修改代码来增加它：</p><p>打开主目录下的 <code>torrents.php</code> 文件，查找 <code>1075-1077</code> 行，来到这里</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($count) {</span><br><span class="line">    <span class="keyword">print</span>($pagertop);</span><br><span class="line">    <span class="keyword">if</span> ($sectiontype == $browsecatmode)</span><br><span class="line">在上面中第二行与第三行之间插入“<span class="keyword">print</span>(<span class="string">"<p align="\" center\""> ".$lang_functions[<span class="string">'text_promoted_torrents_note'</span>].<span class="string">"</span></p>\n"</span>);” <span class="comment">//这一句是完全引用作者在高亮模式下内建的语句！</span></span><br></pre></td></tr></tbody></table></figure></div><p>修改后代码如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($count) {</span><br><span class="line">    <span class="keyword">print</span>($pagertop);</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">"<p align="\" center\""> ".$lang_functions[<span class="string">'text_promoted_torrents_note'</span>].<span class="string">"</span></p>\n"</span>); <span class="comment">//此处是在搜索箱下部位置插入，你也可以选择在其他位置插入！</span></span><br><span class="line">    <span class="keyword">if</span> ($sectiontype == $browsecatmode)</span><br><span class="line">    torrenttable($res, <span class="string">"torrents"</span>);</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://imgsa.baidu.com/forum/w%3D580/sign=2a738e2e5243fbf2c52ca62b807eca1e/114ce96eddc451da6de4a7cdb7fd5266d016321b.jpg" data-fancybox="group" data-caption="增加种子类别快速搜索功能" class="fancybox"><img alt="增加种子类别快速搜索功能" title="增加种子类别快速搜索功能" data-src="https://imgsa.baidu.com/forum/w%3D580/sign=2a738e2e5243fbf2c52ca62b807eca1e/114ce96eddc451da6de4a7cdb7fd5266d016321b.jpg" class="lazyload"></a></p><h2 id="改变置顶种子格子颜色"><a href="#改变置顶种子格子颜色" class="headerlink" title="改变置顶种子格子颜色"></a>改变置顶种子格子颜色</h2><p>应用此风格的有<code>CHDbits</code>、<code>皇后</code>等<br>改变颜色有助于用户更醒目、更直观的区分置顶帖（当然方法有很多，看个人喜好，部分PT站使用“置顶”字符，<code>CHDbits</code>还更换了置顶标识），前些时间看到有人评价皇后的置顶种子颜色很“媚”，决定自己也改一改：<br>打开主目录<code>/include/functions.php</code>，查找<code>3021-3023</code>行，来到这里：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$id = $row[<span class="string">"id"</span>];</span><br><span class="line">$sphighlight = get_torrent_bg_color($row[<span class="string">'sp_state'</span>]);</span><br><span class="line"><span class="keyword">print</span>(<span class="string">"<tr"< span> . $sphighlight . <span class="string">">\n"</span>);</tr"<></span><br></span></pre></td></tr></tbody></table></figure></div><p>修改程序为（用下面五行替换上面3行）：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$id = $row[<span class="string">"id"</span>];</span><br><span class="line"><span class="keyword">if</span> ($row[<span class="string">'pos_state'</span>] == <span class="string">'sticky'</span> && $CURUSER[<span class="string">'appendsticky'</span>] == <span class="string">'yes'</span>) {</span><br><span class="line">    $sphighlight = <span class="string">" class='twoupfree_bg'"</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> $sphighlight = get_torrent_bg_color($row[<span class="string">'sp_state'</span>]);</span><br><span class="line"><span class="keyword">print</span>(<span class="string">"<tr"< span> . $sphighlight . <span class="string">">\n"</span>);</tr"<></span><br></span></pre></td></tr></tbody></table></figure></div><p>注意：上面<code>$sphighlight = " class='twoupfree_bg'"; 中的class='twoupfree_bg'</code>是赋予置顶种子格子的显示颜色，属性在风格目录下的<code>theme.css</code>文件中定义，可以根据下面<code>sample</code>自行添加，然后替换上面代码中的<code>“'twoupfree_bg'”</code>（注意每种风格都要添加），如果嫌麻烦就直接借用种子类型的一种，本例选择了<code>twoupfree_bg</code>，即与2X上传颜色相同。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">.free{color:<span class="comment">#f0cc00}</span></span><br><span class="line">.twoup{color:<span class="comment">#aaaaaa}</span></span><br><span class="line">.twoupfree{color:<span class="comment">#99cc66}</span></span><br><span class="line">.halfdown{color:<span class="comment">#7c7ff6}</span></span><br><span class="line">.twouphalfdown{color:<span class="comment">#7ad6ea}</span></span><br><span class="line">.thirtypercent{color:<span class="comment">#70328d}</span></span><br><span class="line">.free_bg{background-color:<span class="comment">#ffff99}</span></span><br><span class="line">.twoup_bg{background-color:<span class="comment">#dddddd}</span></span><br><span class="line">.twoupfree_bg{background-color:<span class="comment">#ccff99}</span></span><br><span class="line">.halfdown_bg{background-color:<span class="comment">#cccdf8}</span></span><br><span class="line">.twouphalfdown_bg{background-color: <span class="comment">#96dbea}</span></span><br><span class="line">.thirtypercentdown_bg{background-color:<span class="comment">#ddc3ea}</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>注：在黑色风格下无效。</p></blockquote><p><a href="https://imgsa.baidu.com/forum/w%3D580/sign=d2e2a73f2cf5e0feee1889096c6134e5/bac8bc198618367af849d7fb2f738bd4b21ce569.jpg" data-fancybox="group" data-caption="改变置顶种子格子颜色1" class="fancybox"><img alt="改变置顶种子格子颜色1" title="改变置顶种子格子颜色1" data-src="https://imgsa.baidu.com/forum/w%3D580/sign=d2e2a73f2cf5e0feee1889096c6134e5/bac8bc198618367af849d7fb2f738bd4b21ce569.jpg" class="lazyload"></a></p><p><a href="https://imgsa.baidu.com/forum/w%3D580/sign=19d4b0e3e1fe9925cb0c695804a95ee4/f280c218367adab46910b3658ad4b31c8601e469.jpg" data-fancybox="group" data-caption="改变置顶种子格子颜色2" class="fancybox"><img alt="改变置顶种子格子颜色2" title="改变置顶种子格子颜色2" data-src="https://imgsa.baidu.com/forum/w%3D580/sign=19d4b0e3e1fe9925cb0c695804a95ee4/f280c218367adab46910b3658ad4b31c8601e469.jpg" class="lazyload"></a></p><h2 id="在种子主题上附加促销种子过期时间提示"><a href="#在种子主题上附加促销种子过期时间提示" class="headerlink" title="在种子主题上附加促销种子过期时间提示"></a>在种子主题上附加促销种子过期时间提示</h2><p>应用此风格的有<code>CHDbits</code>、<code>HDcity</code>、<code>皇后</code>等 <code>Nexusphp</code>本来就有促销种子的过期提示（字符及图标显示模式下），只需要用鼠标放在促销类别字符或图标上就可以进行淡入淡出提示，不过用户要想了解每一个种子过期时间，都需要用鼠标进行查看，不太方便，对此可以对代码进行适当修改，使其附加到种子主/副标题上进行显示，这样看起来就直观得多了：</p><p>打开<code>include/functions.php</code>文件，查找<code>3093-3095</code>行（不同源码版本可能行号略有差异），来到这里：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">print(“</span></pre></td><td class="\”rowfollow\”" width="\”100%\”" align="\”left\”"><tr” . $sphighlight “></tr”><table class="\”torrentname\”" width="\”100%\”"><tbody><tr><td class="\”embedded\”">”.$stickyicon.”<a $short_torrent_name_alt $mouseovertorrent href="\”details.php?id=”.$id.”&hit=1\”"><b>”.htmlspecialchars($dispname).”</b></a>”);<br><span class="line">$sp_torrent = get_torrent_promotion_append($row[‘sp_state’],””,<span class="keyword">true</span>,$row[“added”], $row[‘promotion_time_type’], $row[‘promotion_until’]);</span><br><span class="line">$picked_torrent = “”;</span><br></td></tr></tbody></table><p>注意，上面红色字体用到的函数<code>get_torrent_promotion_append()</code>即是种子附加促销提示的显示模块。</p><p>Step1：添加一个功能函数：<br>为了不改变原来的功能，我们需要在后面copy一下该函数并进行修改(函数命名为<code>get_torrent_promotion_append_sub()</code>，并插入到原函数附近)，修改后的代码如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_torrent_promotion_append_sub</span><span class="params">($promotion = <span class="number">1</span>,$forcemode = “”,$showtimeleft = false, $added = “”, $promotionTimeType = <span class="number">0</span>, $promotionUntil = ”)</span></span>{</span><br><span class="line">    <span class="keyword">global</span> $CURUSER,$lang_functions;</span><br><span class="line">    <span class="keyword">global</span> $expirehalfleech_torrent, $expirefree_torrent, $expiretwoup_torrent, $expiretwoupfree_torrent, $expiretwouphalfleech_torrent, $expirethirtypercentleech_torrent;</span><br><span class="line">    $sp_torrent_sub = “”;</span><br><span class="line">    $onmouseover_sub = “”;</span><br><span class="line">    <span class="keyword">if</span> (get_global_sp_state() == <span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">switch</span> ($promotion){</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: {</span><br><span class="line">                <span class="keyword">if</span> ($showtimeleft && (($expirefree_torrent && $promotionTimeType == <span class="number">0</span>) || $promotionTimeType == <span class="number">2</span>)) {</span><br><span class="line">                    <span class="keyword">if</span> ($promotionTimeType == <span class="number">2</span>) {</span><br><span class="line">                        $futuretime = strtotime($promotionUntil);</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        $futuretime = strtotime($added) + $expirefree_torrent * <span class="number">86400</span>;</span><br><span class="line">                    }</span><br><span class="line">                    $timeout = gettime(date(“Y-m-d H:i:s”, $futuretime), <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">if</span> ($timeout)</span><br><span class="line">                        $onmouseover_sub = ” (<font color="’<span" class="comment">#0000FF’>”.$lang_functions[‘text_will_end_in’].$timeout.”</font>”.”)”; //free类型字符显示为蓝色，可以更改它</span><br><span class="line">                    <span class="keyword">else</span> $promotion = <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>: {</span><br><span class="line">                <span class="keyword">if</span> ($showtimeleft && (($expiretwoup_torrent && $promotionTimeType == <span class="number">0</span>) || $promotionTimeType == <span class="number">2</span>)) {</span><br><span class="line">                    <span class="keyword">if</span> ($promotionTimeType == <span class="number">2</span>) {</span><br><span class="line">                        $futuretime = strtotime($promotionUntil);</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        $futuretime = strtotime($added) + $expiretwoup_torrent * <span class="number">86400</span>;</span><br><span class="line">                    }</span><br><span class="line">                    $timeout = gettime(date(“Y-m-d H:i:s”, $futuretime), <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">if</span> ($timeout)</span><br><span class="line">                        $onmouseover_sub = ” (“.$lang_functions[‘text_will_end_in’].$timeout.”)”;</span><br><span class="line">                    <span class="keyword">else</span> $promotion = <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>: {</span><br><span class="line">                <span class="keyword">if</span> ($showtimeleft && (($expiretwoupfree_torrent && $promotionTimeType == <span class="number">0</span>) || $promotionTimeType == <span class="number">2</span>)) {</span><br><span class="line">                    <span class="keyword">if</span> ($promotionTimeType == <span class="number">2</span>) {</span><br><span class="line">                        $futuretime = strtotime($promotionUntil);</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        $futuretime = strtotime($added) + $expiretwoupfree_torrent * <span class="number">86400</span>;</span><br><span class="line">                    }</span><br><span class="line">                    $timeout = gettime(date(“Y-m-d H:i:s”, $futuretime), <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">if</span> ($timeout)</span><br><span class="line">                        $onmouseover_sub = ” (<font color="’<span" class="comment">#00CC66′>”.$lang_functions[‘text_will_end_in’].$timeout.”</font>”.”)”; //2XFree 显示为青色，可以更改它</span><br><span class="line">                    <span class="keyword">else</span> $promotion = <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>: {</span><br><span class="line">                <span class="keyword">if</span> ($showtimeleft && (($expirehalfleech_torrent && $promotionTimeType == <span class="number">0</span>) || $promotionTimeType == <span class="number">2</span>)) {</span><br><span class="line">                    <span class="keyword">if</span> ($promotionTimeType == <span class="number">2</span>) {</span><br><span class="line">                        $futuretime = strtotime($promotionUntil);</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        $futuretime = strtotime($added) + $expirehalfleech_torrent * <span class="number">86400</span>;</span><br><span class="line">                    }</span><br><span class="line">                    $timeout = gettime(date(“Y-m-d H:i:s”, $futuretime), <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">if</span> ($timeout)</span><br><span class="line">                        $onmouseover_sub = ” (“.$lang_functions[‘text_will_end_in’].$timeout.”)”;</span><br><span class="line">                    <span class="keyword">else</span> $promotion = <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:{</span><br><span class="line">                <span class="keyword">if</span> ($showtimeleft && (($expiretwouphalfleech_torrent && $promotionTimeType == <span class="number">0</span>) || $promotionTimeType == <span class="number">2</span>)) {</span><br><span class="line">                    <span class="keyword">if</span> ($promotionTimeType == <span class="number">2</span>) {</span><br><span class="line">                        $futuretime = strtotime($promotionUntil);</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        $futuretime = strtotime($added) + $expiretwouphalfleech_torrent * <span class="number">86400</span>;</span><br><span class="line">                    }</span><br><span class="line">                    $timeout = gettime(date(“Y-m-d H:i:s”, $futuretime), <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">if</span> ($timeout)</span><br><span class="line">                        $onmouseover_sub = ” (“.$lang_functions[‘text_will_end_in’].$timeout.”)”;</span><br><span class="line">                    <span class="keyword">else</span> $promotion = <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>: {</span><br><span class="line">            <span class="keyword">if</span> ($showtimeleft && (($expirethirtypercentleech_torrent && $promotionTimeType == <span class="number">0</span>) || $promotionTimeType == <span class="number">2</span>)) {</span><br><span class="line">                <span class="keyword">if</span> ($promotionTimeType == <span class="number">2</span>) {</span><br><span class="line">                    $futuretime = strtotime($promotionUntil);</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    $futuretime = strtotime($added) + $expirethirtypercentleech_torrent * <span class="number">86400</span>;</span><br><span class="line">                }</span><br><span class="line">                $timeout = gettime(date(“Y-m-d H:i:s”, $futuretime), <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">if</span> ($timeout)</span><br><span class="line">                    $onmouseover_sub = ” (“.$lang_functions[‘text_will_end_in’].$timeout.”)”;</span><br><span class="line">                <span class="keyword">else</span> $promotion = <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (($CURUSER[‘appendpromotion’] == ‘word’ && $forcemode == “” ) || $forcemode == ‘word’){</span><br><span class="line">        <span class="keyword">if</span>(($promotion==<span class="number">2</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">2</span>){</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        } <span class="keyword">elseif</span>(($promotion==<span class="number">3</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">3</span>){</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        } <span class="keyword">elseif</span>(($promotion==<span class="number">4</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">4</span>){</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        } <span class="keyword">elseif</span>(($promotion==<span class="number">5</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">5</span>){</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        } <span class="keyword">elseif</span>(($promotion==<span class="number">6</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">6</span>){</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        } <span class="keyword">elseif</span>(($promotion==<span class="number">7</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">7</span>){</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">elseif</span> (($CURUSER[‘appendpromotion’] == ‘icon’ && $forcemode == “”) || $forcemode == ‘icon’){</span><br><span class="line">        <span class="keyword">if</span>(($promotion==<span class="number">2</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">2</span>)</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        <span class="keyword">elseif</span>(($promotion==<span class="number">3</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">3</span>)</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        <span class="keyword">elseif</span>(($promotion==<span class="number">4</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">4</span>)</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        <span class="keyword">elseif</span>(($promotion==<span class="number">5</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">5</span>)</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        <span class="keyword">elseif</span>(($promotion==<span class="number">6</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">6</span>)</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">        <span class="keyword">elseif</span>(($promotion==<span class="number">7</span> && get_global_sp_state() == <span class="number">1</span>) || get_global_sp_state() == <span class="number">7</span>)</span><br><span class="line">            $sp_torrent_sub = $onmouseover_sub;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> $sp_torrent_sub;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><p>Step2：功能调用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$banned_torrent = ($row[“banned”] == ‘yes’ ? ” (“.$lang_functions[‘text_banned’].”)” : “”);</span><br><span class="line"><span class="keyword">print</span>($banned_torrent.$picked_torrent.$sp_torrent);</span><br></pre></td></tr></tbody></table></figure></div><p>两行之间擦汗如代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$sp_torrent_sub = get_torrent_promotion_append_sub($row[‘sp_state’],””,<span class="keyword">true</span>,$row[“added”], $row[‘promotion_time_type’], $row[‘promotion_until’]); <span class="comment">//调用新的函数，获取过期时间</span></span><br></pre></td></tr></tbody></table></figure></div><p>最后一行修改为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">print</span>($banned_torrent.$picked_torrent.$sp_torrent.$sp_torrent_sub); <span class="comment">//在主标题上附加显示过期提示</span></span><br></pre></td></tr></tbody></table></figure></div><p>修改后的代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">$banned_torrent = ($row[“banned”] == ‘yes’ ? ” (“.$lang_functions[‘text_banned’].”)” : “”);</span><br><span class="line">$sp_torrent_sub = get_torrent_promotion_append_sub($row[‘sp_state’],””,<span class="keyword">true</span>,$row[“added”], $row[‘promotion_time_type’], $row[‘promotion_until’]);</span><br><span class="line"><span class="keyword">print</span>($banned_torrent.$picked_torrent.$sp_torrent.$sp_torrent_sub);</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://imgsa.baidu.com/forum/w%3D580/sign=94782ced42166d223877159c76220945/6618c40a19d8bc3e70b6adec838ba61ea9d345f7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://imgsa.baidu.com/forum/w%3D580/sign=94782ced42166d223877159c76220945/6618c40a19d8bc3e70b6adec838ba61ea9d345f7.jpg" class="lazyload"></a></p><p><a href="https://imgsa.baidu.com/forum/w%3D580/sign=7078dd006c224f4a5799731b39f69044/8a935dd8bc3eb135f1791c9da71ea8d3fc1f44f7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://imgsa.baidu.com/forum/w%3D580/sign=7078dd006c224f4a5799731b39f69044/8a935dd8bc3eb135f1791c9da71ea8d3fc1f44f7.jpg" class="lazyload"></a></p><p><a href="https://imgsa.baidu.com/forum/w%3D580/sign=8becadec838ba61edfeec827713597cc/716d4ed162d9f2d36df58fc9a8ec8a136227cc4d.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://imgsa.baidu.com/forum/w%3D580/sign=8becadec838ba61edfeec827713597cc/716d4ed162d9f2d36df58fc9a8ec8a136227cc4d.jpg" class="lazyload"></a></p><hr><blockquote><p>参考来源：<br><a href="http://tieba.baidu.com/p/2178676003" target="_blank" rel="noopener">[ 百度贴吧 ]【技术转】五步打造你个性化的Nexusphp PT站</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      国内使用 `NexusPhp` 建立的PT站越来越多，风格大都雷同（正如yofeng同学所说的审美疲劳......），如何把 `NexusPhp` 快速配置成你喜欢的界面、风格，本人在这里抛砖引玉，希望大家在这里开放的讨论、共享使用 `NexusPhp` 建站心得，OK，Let&#39;s doing...
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="PT站" scheme="https://tamsiree.com/categories/TechnicalResearch/PT%E7%AB%99/"/>
    
      <category term="NexusPhp" scheme="https://tamsiree.com/categories/TechnicalResearch/PT%E7%AB%99/NexusPhp/"/>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="PT站" scheme="https://tamsiree.com/tags/PT%E7%AB%99/"/>
    
      <category term="NexusPhp" scheme="https://tamsiree.com/tags/NexusPhp/"/>
    
  </entry>
  
  <entry>
    <title>电脑设备</title>
    <link href="https://tamsiree.com/Hardware/%E7%94%B5%E8%84%91%E8%AE%BE%E5%A4%87/"/>
    <id>https://tamsiree.com/Hardware/%E7%94%B5%E8%84%91%E8%AE%BE%E5%A4%87/</id>
    <published>2020-02-01T05:07:32.000Z</published>
    <updated>2020-04-28T13:47:54.363Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="65c9e9e0d579b24697eb178b232a5fdba438c85bc759e2a0a48276af2b87afc4"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      整理日常电脑设备方面的血泪经验，为以后少走弯路提供基础。
    
    </summary>
    
    
      <category term="Hardware" scheme="https://tamsiree.com/categories/Hardware/"/>
    
    
      <category term="Hardware" scheme="https://tamsiree.com/tags/Hardware/"/>
    
  </entry>
  
  <entry>
    <title>拟音</title>
    <link href="https://tamsiree.com/Daily/Hobbies/%E6%8B%9F%E9%9F%B3/"/>
    <id>https://tamsiree.com/Daily/Hobbies/%E6%8B%9F%E9%9F%B3/</id>
    <published>2020-01-30T05:27:39.000Z</published>
    <updated>2020-02-01T06:02:44.396Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>拟音是影片创作手段之一。<br>即使用人工发声器模拟影片中所需要的音响效果。如动作音响（脚步声、关门声）、自然音响（风雨声、雷声）等。<br>或通过录制的动作音响，加以后期的处理（如失真等方式），达到影片中要求但实际中无法直接录制的音响效果。  </p><p>昨天看《爱情公寓5》，在29集中咖喱酱报名参加了一个拟音大赛，让爱情公寓里的小伙伴们都加入到游戏拟音的学习中。</p><p>在拟音大赛需要大家配音的片段中，放出的是古风武侠网游《逆水寒》中的剧情，讲述的是顾惜朝和戚少商第一次见面时的场景，在视频中顾惜朝弹阮的声音、戚少商舞剑的声音、风声、风铃拨动的声音还有流水的声音都要一一配出来，才算合格。</p><p>引起了我的兴趣…</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="剑出鞘"><a href="#剑出鞘" class="headerlink" title="剑出鞘"></a>剑出鞘</h2><p>剑出鞘的声音可以用两个<code>菜刀</code>或者<code>锅铲</code>相互划过或者对碰</p><h2 id="舞剑"><a href="#舞剑" class="headerlink" title="舞剑"></a>舞剑</h2><p>舞剑就是细长物体划破空气的声音，例如可以用竹条挥舞</p><h2 id="风声"><a href="#风声" class="headerlink" title="风声"></a>风声</h2><p>风声只需要甩动布料就能发出声音，甩动的频率不同风声的大小也不相同。</p><h2 id="燃烧的声音"><a href="#燃烧的声音" class="headerlink" title="燃烧的声音"></a>燃烧的声音</h2><p>扇动布料的声音，随着火势大小调整扇动幅度</p><h2 id="脚踩雪地"><a href="#脚踩雪地" class="headerlink" title="脚踩雪地"></a>脚踩雪地</h2><p>脚踩雪地，是用布袋子装满盐，揉捏发出雪地的吱嘎声</p><h2 id="打碎人头"><a href="#打碎人头" class="headerlink" title="打碎人头"></a>打碎人头</h2><p>打碎人头的道具是冻生菜</p><h2 id="打开老旧的铁门"><a href="#打开老旧的铁门" class="headerlink" title="打开老旧的铁门"></a>打开老旧的铁门</h2><p>老旧的铁门打开的声音是靠磁带拽拉出来的声音</p><h2 id="骨折声"><a href="#骨折声" class="headerlink" title="骨折声"></a>骨折声</h2><p>两颗核桃捏碎的声音</p><h2 id="抬轿子嘎吱嘎吱的声音"><a href="#抬轿子嘎吱嘎吱的声音" class="headerlink" title="抬轿子嘎吱嘎吱的声音"></a>抬轿子嘎吱嘎吱的声音</h2><p>先矿泉水瓶拧成麻花状，然后再小幅度来回拧的声音</p><h2 id="席梦思收到挤压或碰撞的声音"><a href="#席梦思收到挤压或碰撞的声音" class="headerlink" title="席梦思收到挤压或碰撞的声音"></a>席梦思收到挤压或碰撞的声音</h2><p>两块普通的白色泡沫塑料，两只大拇指来回扣按的声音</p><h2 id><a href="#" class="headerlink" title></a></h2><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      拟音是影片创作手段之一。
    
    </summary>
    
    
      <category term="Daily" scheme="https://tamsiree.com/categories/Daily/"/>
    
      <category term="Hobbies" scheme="https://tamsiree.com/categories/Daily/Hobbies/"/>
    
    
      <category term="Daily" scheme="https://tamsiree.com/tags/Daily/"/>
    
      <category term="Hobbies" scheme="https://tamsiree.com/tags/Hobbies/"/>
    
  </entry>
  
  <entry>
    <title>劣币驱逐良币</title>
    <link href="https://tamsiree.com/Daily/%E5%8A%A3%E5%B8%81%E9%A9%B1%E9%80%90%E8%89%AF%E5%B8%81/"/>
    <id>https://tamsiree.com/Daily/%E5%8A%A3%E5%B8%81%E9%A9%B1%E9%80%90%E8%89%AF%E5%B8%81/</id>
    <published>2020-01-28T05:48:41.000Z</published>
    <updated>2020-02-24T06:54:51.415Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>在经济上叫：“劣币驱逐良币”，社会上就是：“坏人淘汰好人”。</p></blockquote><p>在16世纪的英国，因为黄金储量紧张，只能在新制造的金币中掺入其它金属。于是市场上就有两种金币；一种是此前不掺杂质的金币，一种是掺入了杂质的金币，但两种货币的法定价值一样。这样，人们都会收藏不掺杂质的良币，使用掺入杂质的劣币；时间一长，市场上流通的就只有劣币了，全部良币都退出了流通。</p><blockquote><p>劣币满足了最基本的用途，而良币在这时候则显得有些“资源”浪费。劣币驱逐良币就是这样慢慢地“驱逐”掉好的东西，最后剩下的就是最次品。良币的命运，只有被驱逐，或者成为劣币，最后只剩下劣币。</p></blockquote><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>参考当今各行各业的现象，各种小鲜肉当道，反之正经演员没戏演；各种好剧无人问津，注水拖时的水剧却层出不穷；细细思索，当今的人们的心太过浮躁、浅显，导致了这样的事件层出不穷，想起了某位导演曾经说过的一句话：“部分不太理智的观众造就了这个畸形扭曲的电影市场”。某鱼直播平台的一哥一姐换了一茬又一茬，表面上看是主播自己作，实则是短期快速爆红使得知识与各方面素养未能及时跟上；诸多创业公司与各投资公司已经妥善协商投资协议，却被迟迟拖着投资款不给而导致最后胎死腹中；乐于助人的人们成为了碰瓷假摔的冤大头…这样的例子比比皆是，各行各业都是如此，黑工坊外卖、某夕夕平台、甚至部分培训几天就能上岗的职业，都在这个快餐型的社会中存在着…</p><blockquote><p>当黑暗占据主导地位的时候，这时候光明就变成了原罪。</p></blockquote><p>什么是作恶？</p><p>并不是杀人放火才是作恶，面对大多数人的恶行，如果为了自保而选择沉默，或者为了利益最大化，而选择做一个盲从的帮凶，你就已经站在了恶人一边！</p><p>对于社会上大多数人来说：当我们埋怨社会太不公平的时候，我们有没有想过自己在利益面前就那么轻而易举的放弃了原则？当我们埋怨淘宝假货太多时候，我们有没有想过自己那么喜欢占便宜？当我们埋怨小鲜肉赚的太多的时候，我们有没有想过自己如此迷恋娱乐、选秀节目、和韩剧？</p><p>有什么样的消费者就有什么样的产品，有什么样的观众就有什么样的节目，有什么样读者就有什么样的作品，有什么样的民众就有什么样的社会。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/tidhfjkamg.jpeg" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" title="1" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/tidhfjkamg.jpeg" class="lazyload"></a></p><p>人体内有两种细胞，一种是正常细胞，一种是癌细胞，正常情况下，人体内的“癌细胞”总会被“正常细胞”吞噬清理，而一旦“癌细胞”的繁殖速度过快，并且压过“正常细胞”时，人体就开始变质，这就是癌症。</p><p>社会上也有两种人，一种是好人，一种是坏人，正常情况下好人远比坏人多，坏人成不了气候，而一旦坏人越来越多，社会风气“正不压邪”的时候，社会也开始变质……</p><blockquote><p>我翻开历史一查，这历史没有年代，歪歪斜斜的每页上都写着‘仁义道德’四个字。我横竖睡不着，仔细看了半夜，才从字缝里看出字来，满本都写着两个字是“吃人”！</p><p>—— 鲁迅</p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      在经济上叫：“劣币驱逐良币”，社会上就是：“坏人淘汰好人”。
    
    </summary>
    
    
      <category term="Daily" scheme="https://tamsiree.com/categories/Daily/"/>
    
    
      <category term="Daily" scheme="https://tamsiree.com/tags/Daily/"/>
    
      <category term="劣币驱逐良币" scheme="https://tamsiree.com/tags/%E5%8A%A3%E5%B8%81%E9%A9%B1%E9%80%90%E8%89%AF%E5%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>新型冠状病毒肺炎</title>
    <link href="https://tamsiree.com/Daily/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E/"/>
    <id>https://tamsiree.com/Daily/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E/</id>
    <published>2020-01-27T07:29:38.000Z</published>
    <updated>2020-03-01T07:01:57.536Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>一切信息以中央官方发布为准，不信谣，不传谣！</p></blockquote><p><strong>2019新型冠状病毒</strong> （Novel coronavirus），为新兴传染病“严重特殊传染性肺炎”病原，由 <code>世界卫生组织</code> 命名为<strong>2019-nCoV</strong>，是一种具有包膜的 <code>正链单股RNA</code> <code>冠状病毒</code>。2019－2020年<code>新型冠状病毒肺炎</code>事件爆发期间，研究人员在对 <code>肺炎</code> 阳性患者样本进行 <code>核酸检测</code> 以及 <code>基因组测序</code> 后发现了这一病毒。</p><p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Coronavirus_2019-nCoV.png/300px-Coronavirus_2019-nCoV.png" data-fancybox="group" data-caption="新型冠状病毒" class="fancybox"><img alt="新型冠状病毒" title="新型冠状病毒" data-src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Coronavirus_2019-nCoV.png/300px-Coronavirus_2019-nCoV.png" class="lazyload"></a></p><ul><li>新型冠状病毒（2019-nCoV）感染所致肺炎</li><li>起初发热、乏力、干咳，逐渐出现呼吸困难等</li><li>具备人传染人的能力，正确佩戴口罩加强防护</li><li>多数预后良好，少数病情危重，甚至可致死亡</li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="疫情总览"><a href="#疫情总览" class="headerlink" title="疫情总览"></a>疫情总览</h2><table><thead><tr><th align="center">图例</th></tr></thead><tbody><tr><td align="center"><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/COVID-19-outbreak-timeline.gif/800px-COVID-19-outbreak-timeline.gif" data-fancybox="group" data-caption="2019冠状病毒病疫情" class="fancybox"><img alt="2019冠状病毒病疫情" title="2019冠状病毒病疫情" data-src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/COVID-19-outbreak-timeline.gif/800px-COVID-19-outbreak-timeline.gif" class="lazyload"></a></td></tr><tr><td align="center">来源链接：<a href="https://zh.wikipedia.org/wiki/2019%E5%86%A0%E7%8B%80%E7%97%85%E6%AF%92%E7%97%85%E7%96%AB%E6%83%85" target="_blank" rel="noopener">维基百科 - 2019冠状病毒病疫情</a></td></tr></tbody></table><p><a href="http://news.163.com/special/epidemic/" target="_blank" rel="noopener"><code>[ 网易在线实时更新疫情地图 ]</code></a></p><h2 id="临床症状"><a href="#临床症状" class="headerlink" title="临床症状"></a>临床症状</h2><p>受病毒感染后，患者会逐步出现发热、四肢乏力、干咳等临床表现，以下呼吸道症状为主。重症患者会有急性呼吸窘迫综合征、脓毒症休克、代谢性酸中毒和出凝血功能障碍等症状。</p><p>自疫情开始截至2020年1月10日，共观察有41名武汉冠状病毒患者，体征出现病状日期分散于2019年12月8日至2020年1月2日期间。对这41名患者的一次初步临床研究指出，41名患者中15人治疗无效去世，而在危重病人的血浆中，测试得到高出正常水准的IL2、IL7、IL10、GSCF、IP10、MCP1、MIP1A以及TNFα。至2020年1月23日，确诊病例的血检报告表明，受病毒感染会导致外周血白细胞、淋巴细胞减少，且多数患者的C反应蛋白和血沉升高。</p><h2 id="治疗措施"><a href="#治疗措施" class="headerlink" title="治疗措施"></a>治疗措施</h2><p>现今对病毒无有效抗病毒治疗方式，护理主要为通过维持病人体征平稳间接促进病患自我产生抗体。2020年1月26日，上海药物研究所的团队列出30种可能对病毒有效的药物，其中包括蛋白酶抑制剂茚地那韦、沙奎那韦、洛匹那韦等抗癌药物。次日，中国疾病预防控制中心宣布启动新型冠状病毒的疫苗研发。</p><h2 id="防范措施"><a href="#防范措施" class="headerlink" title="防范措施"></a>防范措施</h2><p><a href="https://gss3.bdstatic.com/-Po3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike150%2C5%2C5%2C150%2C50/sign=aa4dff958d025aafc73f76999a84c001/8601a18b87d6277fe5718b6d27381f30e924fc00.jpg" data-fancybox="group" data-caption="防范措施" class="fancybox"><img alt="防范措施" title="防范措施" data-src="https://gss3.bdstatic.com/-Po3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike150%2C5%2C5%2C150%2C50/sign=aa4dff958d025aafc73f76999a84c001/8601a18b87d6277fe5718b6d27381f30e924fc00.jpg" class="lazyload"></a></p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/71cf3bc79f3df8dcf65f36c4c211728b47102800.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/71cf3bc79f3df8dcf65f36c4c211728b47102800.jpg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a71ea8d3fd1f41348e2ebc2b2a1f95cad1c85e4d.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a71ea8d3fd1f41348e2ebc2b2a1f95cad1c85e4d.jpg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/7af40ad162d9f2d3dc089dbaa6ec8a136327cc4e.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/7af40ad162d9f2d3dc089dbaa6ec8a136327cc4e.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d058ccbf6c81800a0997305bbe3533fa828b4770.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d058ccbf6c81800a0997305bbe3533fa828b4770.jpg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/3ac79f3df8dcd100922041747d8b4710b9122f22.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/3ac79f3df8dcd100922041747d8b4710b9122f22.jpg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f9198618367adab4396ca21684d4b31c8701e423.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f9198618367adab4396ca21684d4b31c8701e423.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9a504fc2d562853509926b749fef76c6a7ef6371.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9a504fc2d562853509926b749fef76c6a7ef6371.jpg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a08b87d6277f9e2f7b2ea45d1030e924b899f348.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a08b87d6277f9e2f7b2ea45d1030e924b899f348.jpg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0b46f21fbe096b635d74e70503338744ebf8ac72.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0b46f21fbe096b635d74e70503338744ebf8ac72.jpg" class="lazyload"></a></td></tr></tbody></table><p>到底应该如何预防感染冠状病毒，北京市疾控中心建议要加强个人防护，避免接触野生禽畜，杜绝带病上班、聚会。从武汉等地外出旅行归来，如出现发热咳嗽等呼吸道感染症状，应根据病情就近选择医院发热门诊就医，并戴上口罩就诊，同时告知医生类似病人或动物接触史、旅行史等。具体建议如下：  </p><h3 id="钟南山院士的呼吁"><a href="#钟南山院士的呼吁" class="headerlink" title="钟南山院士的呼吁"></a><strong>钟南山院士的呼吁</strong></h3><p>钟南山院士的呼吁：”全中国人民在家隔离两周!“  </p><blockquote><p>解决疫情最快，成本最低的方式就是全中国人民在家隔离两周，这样对全国经济影响最小，对生命健康最有利。强烈建议全中国人民都在家过春节，不要走亲访友。不是人情淡薄，是生命第一。待春暖花开之时，我们都可以走上街头，不用口罩，繁花与共！</p></blockquote><h3 id="加强个人防护"><a href="#加强个人防护" class="headerlink" title="加强个人防护"></a>加强个人防护</h3><ol><li>避免前往人群密集的公共场所。避免接触发热呼吸道感染病人，如需接触时要佩戴口罩。</li><li>勤洗手。尤其在手被呼吸道分泌物污染时、触摸过公共设施后、照顾发热呼吸道感染或呕吐腹泻病人后、探访医院后、处理被污染的物品以及接触动物、动物饲料或动物粪便后。</li><li>不要随地吐痰。打喷嚏或咳嗽时用纸巾或袖肘遮住口、鼻。</li><li>加强锻炼，规律作息，保持室内空气流通。  </li></ol><h3 id="避免接触野生禽畜"><a href="#避免接触野生禽畜" class="headerlink" title="避免接触野生禽畜"></a>避免接触野生禽畜</h3><ol><li>避免接触禽畜、野生动物及其排泄物和分泌物，避免购买活禽和野生动物。</li><li>避免前往动物农场和屠宰场、活禽动物交易市场或摊位、野生动物栖息地或等场所。必须前往时要做好防护，尤其是职业暴露人群。</li><li>避免食用野生动物。不要食用已经患病的动物及其制品；要从正规渠道购买冰鲜禽肉，食用禽肉蛋奶时要充分煮熟，处理生鲜制品时，器具要生熟分开并及时清洗，避免交叉污染。</li></ol><h3 id="杜绝带病上班、聚会"><a href="#杜绝带病上班、聚会" class="headerlink" title="杜绝带病上班、聚会"></a>杜绝带病上班、聚会</h3><p>如有发烧、咳嗽等呼吸道感染的症状，居家休息，减少外出和旅行，天气良好时居室多通风，接触他人请佩戴口罩。要避免带病上班、上课及聚会。  </p><h3 id="及时就医"><a href="#及时就医" class="headerlink" title="及时就医"></a>及时就医</h3><p>从武汉等地外出旅行归来，如出现发热咳嗽等呼吸道感染症状，应根据病情就近选择医院发热门诊就医，并戴上口罩就诊，同时告知医生类似病人或动物接触史、旅行史等。</p><h2 id="口罩的选择"><a href="#口罩的选择" class="headerlink" title="口罩的选择"></a>口罩的选择</h2><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/94706780s4.jpeg" data-fancybox="group" data-caption="口罩的选择" class="fancybox"><img alt="口罩的选择" title="口罩的选择" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/94706780s4.jpeg" class="lazyload"></a></p><h3 id="一次性口罩-医用外科口罩"><a href="#一次性口罩-医用外科口罩" class="headerlink" title="一次性口罩(医用外科口罩)"></a>一次性口罩(医用外科口罩)</h3><p>能在一定程度上预防呼吸道感染，无法防霾。</p><p>　　医用外科口罩有三层，从外到内分别是防水层、过滤层、舒适层。舒适层是一层无纺布，佩戴时白色的无纺布朝内，蓝色的防水层朝外，有金属片的一边朝上，不要戴反，橡皮筋挂上双耳后捏紧金属片和鼻子贴合，抚平两颊，使口罩和面部之间尽量不留缝隙。</p><p>　　购买时要注意，应当选择外包装上明确注明“医用外科口罩”字样的口罩。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2020121d103929_89233.png" data-fancybox="group" data-caption="一次性口罩(医用外科口罩)佩戴流程" class="fancybox"><img alt="一次性口罩(医用外科口罩)佩戴流程" title="一次性口罩(医用外科口罩)佩戴流程" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2020121d103929_89233.png" class="lazyload"></a></p><h3 id="N95型口罩"><a href="#N95型口罩" class="headerlink" title="N95型口罩"></a>N95型口罩</h3><p>能有效预防呼吸道感染，可以防霾。</p><p>　　N95型口罩是 NIOSH(美国国家职业安全卫生研究所)认证的9种防颗粒物口罩中的一种。“N”的意思是不适合油性的颗粒(炒菜产生的油烟就是油性颗粒物，而人说话或咳嗽产生的飞沫不是油性的);“95”是指，在 NIOSH 标准规定的检测条件下，过滤效率达到 95%。</p><p>　　N95不是特定的产品名称。只要符合N95标准，并且通过NIOSH审查的产品就可以称为“N95型口罩”。</p><p>　　N95型口罩的最大特点就是可以预防由患者体液或血液飞溅引起的飞沫传染。飞沫的大小为直径1至5微米。美国职业安全与健康管理局(OSHA)针对医疗机构规定，暴露在结核病菌下的医务人员必须佩戴N95标准以上的口罩。</p><p>　　相比较医用外科口罩，N95型口罩密闭更好。在选用N95型口罩时，尽量选择不带呼吸阀的N95型口罩。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2020121103848_26965.png" data-fancybox="group" data-caption="N95型口罩佩戴流程" class="fancybox"><img alt="N95型口罩佩戴流程" title="N95型口罩佩戴流程" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2020121103848_26965.png" class="lazyload"></a></p><hr><h1 id="中国加油！武汉加油！"><a href="#中国加油！武汉加油！" class="headerlink" title="中国加油！武汉加油！"></a>中国加油！武汉加油！</h1><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"hotkey":true,"preload":"metadata","video":{"url":"http://edge.ivideo.sina.com.cn/32127410701.mp4?KID=sina,viask&Expires=1580227200&ssig=v9udq9pWgu&reqid="}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><blockquote><p>1月27日农历正月初三，受习近平总书记委托，中共中央政治局常委、国务院总理、中央应对新型冠状病毒感染肺炎疫情工作领导小组组长李克强来到武汉，考察指导疫情防控工作。李克强连喊三声：武汉加油！  </p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d8f9d72a6059252d772e229abeeb193d5ab5b9ed.jpeg" data-fancybox="group" data-caption="武汉加油" class="fancybox"><img alt="武汉加油" title="武汉加油" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d8f9d72a6059252d772e229abeeb193d5ab5b9ed.jpeg" class="lazyload"></a></p><hr><h1 id="冠状病毒的图解"><a href="#冠状病毒的图解" class="headerlink" title="冠状病毒的图解"></a>冠状病毒的图解</h1><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/951501667.jpeg" data-fancybox="group" data-caption="冠状病毒的图解1" class="fancybox"><img alt="冠状病毒的图解1" title="冠状病毒的图解1" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/951501667.jpeg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/951501668.jpeg" data-fancybox="group" data-caption="冠状病毒的图解2" class="fancybox"><img alt="冠状病毒的图解2" title="冠状病毒的图解2" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/951501668.jpeg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/951501669.jpeg" data-fancybox="group" data-caption="冠状病毒的图解3" class="fancybox"><img alt="冠状病毒的图解3" title="冠状病毒的图解3" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/951501669.jpeg" class="lazyload"></a></p><hr><h1 id="直播武汉建造医院"><a href="#直播武汉建造医院" class="headerlink" title="直播武汉建造医院"></a>直播武汉建造医院</h1><blockquote><p>可以在线查看武汉直播建造医院，与疫情赛跑，全景直击武汉雷神山医院建设最前线，见证武汉雷神山火神山医院的崛起！</p></blockquote><table><thead><tr><th align="center">直播</th><th align="center">直播</th></tr></thead><tbody><tr><td align="center"><a href="http://t.cn/A6PIeT14" target="_blank" rel="noopener">建造雷神山医院直播现场</a></td><td align="center"><a href="http://t.cn/A6PIYNvD" target="_blank" rel="noopener">建造火神山医院直播现场</a></td></tr></tbody></table><hr><h1 id="地图周边疫情"><a href="#地图周边疫情" class="headerlink" title="地图周边疫情"></a>地图周边疫情</h1><blockquote><p>大家用这个，自动定位自己，就可以发现距离自己最近的发病地点，看清楚后尽可能避开。全国都能用！  </p></blockquote><table><thead><tr><th align="center">疫情地图</th></tr></thead><tbody><tr><td align="center"><a href="http://t.cn/A6P1xu21" target="_blank" rel="noopener">周边疫情</a></td></tr><tr><td align="center"><a href="http://t.cn/A6P8r8al" target="_blank" rel="noopener">小区疫情</a></td></tr><tr><td align="center"><a href="http://t.cn/A6PTpXwL" target="_blank" rel="noopener">全国疫情</a></td></tr></tbody></table><hr><h1 id="新冠病毒科学问答"><a href="#新冠病毒科学问答" class="headerlink" title="新冠病毒科学问答"></a>新冠病毒科学问答</h1><ol><li>新冠状病毒在普通环境中能存活多久？<br>答：病毒只能存活于生物体细胞内，室温情况下基本不能存活。</li><li>专家说，这个病毒在56℃水中30分钟灭活。100℃开水中，多久灭活？<br>答：病毒仅在动物体内存活，体外不能存活，所以物品不用煮。</li><li>病毒离开了人体，在日常物品比如门把手、手机上，还能存活多久？病毒离开活体，北方零下10度的低温会死吗？<br>答：该病毒不是消化道传播的，摸了门把手、手机，不去抠鼻子、摸眼睛就行。病毒离开人体不能存活。</li><li>家里有84消毒液，也有酒精，请问该怎么用？<br>答：84消毒液、酒精对大部分细菌等微生物有杀灭作用，但是病毒离开人体不能存活，用84消毒液、酒精等消毒剂擦地擦物品其实意义不大。</li><li>这种病毒会感染猫狗吗？<br>答：目前没有发现。</li><li>出门除了戴口罩，是否应该戴一次性手套？<br>答：没有必要。怕冷就戴手套。注意洗手更重要。</li><li>外出的话，多戴几个药店卖的普通医用口罩能提高防护作用吗？<br>答：不用。室外活动单层就够了。</li><li>和陌生人说话，距离多远安全？假如不和陌生人说话，路上擦肩而过会传染上吗？<br>答：距离是一方面，但重要的不要对着人打喷嚏、咳嗽。</li><li>能吃生的蔬菜吗？比如沙拉。<br>答：新冠病毒不经消化道传播，可以吃沙拉。</li><li>几乎不出门，附近还没有病例出现，请问戴普通的一次性口罩可以吗？<br>答：可以的。</li><li>请问潜伏期有症状吗？潜伏期传染性大吗？<br>答：最短1-2天，最长10~12天，平均7天。医学观察为14天。潜伏期内有一定传染性。患者出现高热的时候传染性最强。</li><li>新冠感染和普通感冒症状上怎么区别？<br>答：新冠感染主要有发烧，局部呼吸道症状通常不重，部分人会出现严重的呼吸困难或全身受损表现。这些是与普通感冒最大的区别。</li><li>目前到底有没有特效药？<br>答：目前没有。治疗原则主要是对症和支持。</li><li>那些能自愈的人都有啥特点？病重去世的人有哪些特点？<br>答：自愈与体质有关，多为免疫功能健全的人。病重去世者多为老年人、有基础病者。</li><li>治愈出院的患者有可能二次感染吗？康复后应该如何护理？<br>答：目前认为不会，因为有抗体了。具体如何康复要根据病人的恢复情况。</li><li>吃普通的感冒药或抗生素对该病毒有效吗？<br>答：无效。</li></ol><hr><h1 id="知识拓展"><a href="#知识拓展" class="headerlink" title="知识拓展"></a>知识拓展</h1><table><thead><tr><th align="center">图解</th><th align="center">图解</th><th align="center">图解</th></tr></thead><tbody><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783182.jpeg" data-fancybox="group" data-caption="图解1" class="fancybox"><img alt="图解1" title="图解1" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783182.jpeg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783183.jpeg" data-fancybox="group" data-caption="图解2" class="fancybox"><img alt="图解2" title="图解2" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783183.jpeg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783184.jpeg" data-fancybox="group" data-caption="图解3" class="fancybox"><img alt="图解3" title="图解3" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783184.jpeg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783185.jpeg" data-fancybox="group" data-caption="图解4" class="fancybox"><img alt="图解4" title="图解4" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783185.jpeg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783186.jpeg" data-fancybox="group" data-caption="图解5" class="fancybox"><img alt="图解5" title="图解5" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783186.jpeg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783187.jpeg" data-fancybox="group" data-caption="图解6" class="fancybox"><img alt="图解6" title="图解6" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783187.jpeg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783189.jpeg" data-fancybox="group" data-caption="图解7" class="fancybox"><img alt="图解7" title="图解7" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783189.jpeg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783190.jpeg" data-fancybox="group" data-caption="图解8" class="fancybox"><img alt="图解8" title="图解8" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783190.jpeg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783191.jpeg" data-fancybox="group" data-caption="图解9" class="fancybox"><img alt="图解9" title="图解9" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/965783191.jpeg" class="lazyload"></a></td></tr></tbody></table><hr><blockquote><p>参考链接：<br><a href="https://baike.baidu.com/item/2019%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92/24267858" target="_blank" rel="noopener">百度百科 - 2019新型冠状病毒</a><br><a href="https://baike.baidu.com/medicine/disease/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E6%84%9F%E6%9F%93%E7%9A%84%E8%82%BA%E7%82%8E/24282048" target="_blank" rel="noopener">百度百科医典 - 新型冠状病毒感染的肺炎</a><br><a href="https://zh.wikipedia.org/wiki/2019%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8B%80%E7%97%85%E6%AF%92" target="_blank" rel="noopener">维基百科 - 新型冠状病毒肺炎全球疫情病例</a><br><a href="https://zh.wikipedia.org/wiki/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8B%80%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E%E5%85%A8%E7%90%83%E7%96%AB%E6%83%85%E7%97%85%E4%BE%8B" target="_blank" rel="noopener">维基百科 - 2019新型冠状病毒</a><br><a href="http://wh.bendibao.com/live/2020121/106788.shtm" target="_blank" rel="noopener">武汉肺炎口罩选择（含穿戴指南）</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      2019新型冠状病毒（Novel coronavirus），为新兴传染病“严重特殊传染性肺炎”病原，由 `世界卫生组织` 命名为2019-nCoV，是一种具有包膜的 `正链单股RNA` `冠状病毒`。2019－2020年`新型冠状病毒肺炎`事件爆发期间，研究人员在对 `肺炎` 阳性患者样本进行 `核酸检测` 以及 `基因组测序` 后发现了这一病毒。
    
    </summary>
    
    
      <category term="Daily" scheme="https://tamsiree.com/categories/Daily/"/>
    
      <category term="新型冠状病毒肺炎" scheme="https://tamsiree.com/categories/Daily/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E/"/>
    
    
      <category term="Daily" scheme="https://tamsiree.com/tags/Daily/"/>
    
      <category term="新型冠状病毒肺炎" scheme="https://tamsiree.com/tags/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro安装NVIDIA闭源驱动</title>
    <link href="https://tamsiree.com/OperationSystem/Linux/Manjaro/Manjaro%E5%AE%89%E8%A3%85NVIDIA%E9%97%AD%E6%BA%90%E9%A9%B1%E5%8A%A8/"/>
    <id>https://tamsiree.com/OperationSystem/Linux/Manjaro/Manjaro%E5%AE%89%E8%A3%85NVIDIA%E9%97%AD%E6%BA%90%E9%A9%B1%E5%8A%A8/</id>
    <published>2020-01-23T13:21:20.000Z</published>
    <updated>2020-01-23T16:25:40.976Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在我的环境（NVIDIA 970M，Intel核显，Manjaro18.1.2，KDE）下安装 NVIDIA 的闭源驱动调试成功，依据知乎上的 <a href="https://www.zhihu.com/question/353534899/answer/884086339" target="_blank" rel="noopener">介绍</a> 此种方法使用了较长时间后也没问题。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>在 screenfetch 下展示我的配置信息</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">██████████████████  ████████     tamsiree@tamsiree-alienware</span><br><span class="line">██████████████████  ████████     OS: Manjaro 18.1.5 Juhraya</span><br><span class="line">██████████████████  ████████     Kernel: x86_64 Linux 5.4.13-3-MANJARO</span><br><span class="line">██████████████████  ████████     Uptime: 3h 56m</span><br><span class="line">████████            ████████     Packages: 1262</span><br><span class="line">████████  ████████  ████████     Shell: zsh 5.7.1</span><br><span class="line">████████  ████████  ████████     Resolution: 1920x1080</span><br><span class="line">████████  ████████  ████████     DE: KDE 5.66.0 / Plasma 5.17.5</span><br><span class="line">████████  ████████  ████████     WM: KWin</span><br><span class="line">████████  ████████  ████████     GTK Theme: Breath [GTK2/3]</span><br><span class="line">████████  ████████  ████████     Icon Theme: maia</span><br><span class="line">████████  ████████  ████████     Font: Noto Sans Regular</span><br><span class="line">████████  ████████  ████████     Disk: 731G / 1.2T (68%)</span><br><span class="line">████████  ████████  ████████     CPU: Intel Core i7-6700HQ @ 8x 3.5GHz [98.0°C]</span><br><span class="line">                                 GPU: GeForce GTX 970M</span><br><span class="line">                                 RAM: 5569MiB / 15758MiB</span><br></pre></td></tr></table></figure></div><p>optimus-switch-sddm是用于SDDM的，对应KDE桌面，如果你安装的是Gnome可以看同作者的GDM，作者还有对应lightdm的脚本。</p><p>安装方法：<br>主要参考<a href="https://github.com/dglt1/optimus-switch-sddm" target="_blank" rel="noopener">Github安装脚本</a>的说明<br>我的安装步骤大体如下，可能有所疏漏或者没更新的地方，建议同时参考上面的Github原作者的README</p><ol><li><p>删除Bumblebee或者开源驱动</p><ul><li><p>方法一： 使用mhwd命令删除即可<br>开源驱动：<code>sudo mhwd -i pci video-nvidia</code><br>删除Bumblebee就把video-nvidia改成系统设置-›硬件设定里Bumblebee驱动的名字</p></li><li><p>方法二：直接在硬件设定里右键选移除</p></li></ul></li><li><p>安装nvidia私有闭源驱动<br>在系统设置-›硬件设定里直接右键安装下面的驱动中的一个，我的是video-nvidia-440xx</p></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">video-nvidia-340xx</span><br><span class="line">video-nvidia-390xx</span><br><span class="line">video-nvidia-418xx</span><br><span class="line">video-nvidia-430xx</span><br><span class="line">video-nvidia-435xx</span><br><span class="line">video-nvidia-440xx</span><br></pre></td></tr></table></figure></div><p>此时千万不能重启！否则会卡死！<a href="https://img-blog.csdnimg.cn/20191121235550778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NoZXJwYWh1,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191121235550778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NoZXJwYWh1,size_16,color_FFFFFF,t_70" class="lazyload"></a><br>上面是我完成后的驱动配置。<br>3.  安装依赖<br><code>sudo pacman -S linuxXXX-headers acpi_call-dkms xorg-xrandr xf86-video-intel git</code><br>linuxXXX-headers的名字换成你自己内核版本的名字，系统设置-›内核里查看正在运行的内核，我的是<code>linux35-headers</code><br>下图红色的即是 <a href="https://img-blog.csdnimg.cn/20191121234823105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NoZXJwYWh1,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191121234823105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NoZXJwYWh1,size_16,color_FFFFFF,t_70" class="lazyload"></a><br>4.  <code>sudo modprobe acpi_call</code><br>5.  清理之前的文件<br>在脚本里其实会帮我们删，为了保险也可以直接查看一下.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;X11&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;X11&#x2F;mhwd.d&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;X11&#x2F;xorg.conf.d&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;modprobe.d&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;modules-load.d&#x2F;</span><br></pre></td></tr></table></figure></div><ol start="6"><li>安装<br>执行<code>install.sh</code>之前可以修改一下switch/nvidia文件夹下的nvidia-xorg.conf文件取消<code>#Option &quot;DPI&quot; &quot;96 x 96&quot; #adjust this value as needed to fix scaling</code>的注释，否则在Nvidia Prime模式下字体可能会过小。<br>在~/目录下输入以下命令</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;dglt1&#x2F;optimus-switch-sddm.git  </span><br><span class="line">cd ~&#x2F;optimus-switch-sddm  </span><br><span class="line">chmod +x install.sh</span><br><span class="line">sudo .&#x2F;install.sh</span><br></pre></td></tr></table></figure></div><ol start="7"><li>一行命令切换Nvidia Prime和Intel核显模式<br><code>sudo set-intel.sh</code>换Intel核显<br><code>sudo set-nvidia.sh</code>换Nvidia Prime</li><li>重启<br><code>reboot</code></li></ol><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>没有独显驱动会导致关机卡死，Bumblebee切换性能不佳，只安装Nvidia Prime耗电过多，目前这种方式是我遇到的最合理最完美的。</p><hr><blockquote><p>参考来源：<br><a href="https://forum.manjaro.org/t/howto-set-up-prime-with-nvidia-proprietary-driver/40225/33" target="_blank" rel="noopener">Manjaro论坛</a><br><a href="https://github.com/dglt1/optimus-switch-sddm" target="_blank" rel="noopener">Github安装脚本</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      在我的环境（NVIDIA 970M，Intel核显，Manjaro18.1.2，KDE）下安装 NVIDIA 的闭源驱动调试成功，依据知乎上的 [介绍](https://www.zhihu.com/question/353534899/answer/884086339) 此种方法使用了较长时间后也没问题。
    
    </summary>
    
    
      <category term="OperationSystem" scheme="https://tamsiree.com/categories/OperationSystem/"/>
    
      <category term="Linux" scheme="https://tamsiree.com/categories/OperationSystem/Linux/"/>
    
      <category term="Manjaro" scheme="https://tamsiree.com/categories/OperationSystem/Linux/Manjaro/"/>
    
    
      <category term="OperationSystem" scheme="https://tamsiree.com/tags/OperationSystem/"/>
    
      <category term="Linux" scheme="https://tamsiree.com/tags/Linux/"/>
    
      <category term="Manjaro" scheme="https://tamsiree.com/tags/Manjaro/"/>
    
  </entry>
  
  <entry>
    <title>Emoji符号</title>
    <link href="https://tamsiree.com/Emoji/Emoji%E7%AC%A6%E5%8F%B7/"/>
    <id>https://tamsiree.com/Emoji/Emoji%E7%AC%A6%E5%8F%B7/</id>
    <published>2020-01-20T07:52:48.000Z</published>
    <updated>2020-01-20T08:42:01.696Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>收集整理了若干可复制的Emoji符号。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>这里是讲述正文。</p><table><thead><tr><th align="center">Emoji符号</th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"><code>Emoji表情</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">😀</td><td align="center">😁</td><td align="center">😂</td><td align="center">😃</td><td align="center">😄</td><td align="center">😅</td><td align="center">😆</td><td align="center">😉</td></tr><tr><td align="center">😊</td><td align="center">😋</td><td align="center">😎</td><td align="center">😍</td><td align="center">😘</td><td align="center">😗</td><td align="center">😙</td><td align="center">😚</td></tr><tr><td align="center">☺</td><td align="center">😇</td><td align="center">😐</td><td align="center">😑</td><td align="center">😶</td><td align="center">😏</td><td align="center">😣</td><td align="center">😥</td></tr><tr><td align="center">😮</td><td align="center">😯</td><td align="center">😪</td><td align="center">😫</td><td align="center">😴</td><td align="center">😌</td><td align="center">😛</td><td align="center">😜</td></tr><tr><td align="center">😝</td><td align="center">😒</td><td align="center">😓</td><td align="center">😔</td><td align="center">😕</td><td align="center">😲</td><td align="center">😷</td><td align="center">😖</td></tr><tr><td align="center">😞</td><td align="center">😟</td><td align="center">😤</td><td align="center">😢</td><td align="center">😭</td><td align="center">😦</td><td align="center">😧</td><td align="center">😨</td></tr><tr><td align="center">😬</td><td align="center">😰</td><td align="center">😱</td><td align="center">😳</td><td align="center">😵</td><td align="center">😡</td><td align="center">😠</td><td align="center"></td></tr><tr><td align="center"><code>Emoji人物</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">👦</td><td align="center">👧</td><td align="center">👨</td><td align="center">👩</td><td align="center">👴</td><td align="center">👵</td><td align="center">👶</td><td align="center">👱</td></tr><tr><td align="center">👮</td><td align="center">👲</td><td align="center">👳</td><td align="center">👷</td><td align="center">👸</td><td align="center">💂</td><td align="center">🎅</td><td align="center">👰</td></tr><tr><td align="center">👼</td><td align="center">💆</td><td align="center">💇</td><td align="center">🙍</td><td align="center">🙎</td><td align="center">🙅</td><td align="center">🙆</td><td align="center">💁</td></tr><tr><td align="center">🙋</td><td align="center">🙇</td><td align="center">🙌</td><td align="center">🙏</td><td align="center">👤</td><td align="center">👥</td><td align="center">🚶</td><td align="center">🏃</td></tr><tr><td align="center">👯</td><td align="center">💃</td><td align="center">👫</td><td align="center">👬</td><td align="center">👭</td><td align="center">💏</td><td align="center">💑</td><td align="center">👪</td></tr><tr><td align="center"><code>Emoji手势</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">💪</td><td align="center">👈</td><td align="center">👉</td><td align="center">☝</td><td align="center">👆</td><td align="center">👇</td><td align="center">✌</td><td align="center">✋</td></tr><tr><td align="center">👌</td><td align="center">👍</td><td align="center">👎</td><td align="center">✊</td><td align="center">👊</td><td align="center">👋</td><td align="center">👏</td><td align="center">👐</td></tr><tr><td align="center">✍</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🌹</td><td align="center">🍀</td><td align="center">🍎</td><td align="center">💰</td><td align="center">📱</td><td align="center">🌙</td><td align="center">🍁</td><td align="center">🍂</td></tr><tr><td align="center">🍃</td><td align="center">🌷</td><td align="center">💎</td><td align="center">🔪</td><td align="center">🔫</td><td align="center">🏀</td><td align="center">⚽</td><td align="center">⚡</td></tr><tr><td align="center">👄</td><td align="center">👍</td><td align="center">🔥</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji日常</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">👣</td><td align="center">👀</td><td align="center">👂</td><td align="center">👃</td><td align="center">👅</td><td align="center">👄</td><td align="center">💋</td><td align="center">👓</td></tr><tr><td align="center">👔</td><td align="center">👕</td><td align="center">👖</td><td align="center">👗</td><td align="center">👘</td><td align="center">👙</td><td align="center">👚</td><td align="center">👛</td></tr><tr><td align="center">👜</td><td align="center">👝</td><td align="center">🎒</td><td align="center">💼</td><td align="center">👞</td><td align="center">👟</td><td align="center">👠</td><td align="center">👡</td></tr><tr><td align="center">👢</td><td align="center">👑</td><td align="center">👒</td><td align="center">🎩</td><td align="center">🎓</td><td align="center">💄</td><td align="center">💅</td><td align="center">💍</td></tr><tr><td align="center">🌂</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji手机</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">📱</td><td align="center">📲</td><td align="center">📶</td><td align="center">📳</td><td align="center">📴</td><td align="center">☎</td><td align="center">📞</td><td align="center">📟</td></tr><tr><td align="center">📠</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji公共</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">♻</td><td align="center">🏧</td><td align="center">🚮</td><td align="center">🚰</td><td align="center">♿</td><td align="center">🚹</td><td align="center">🚺</td><td align="center">🚻</td></tr><tr><td align="center">🚼</td><td align="center">🚾</td><td align="center">⚠</td><td align="center">🚸</td><td align="center">⛔</td><td align="center">🚫</td><td align="center">🚳</td><td align="center">🚭</td></tr><tr><td align="center">🚯</td><td align="center">🚱</td><td align="center">🚷</td><td align="center">🔞</td><td align="center">💈</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji动物</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🙈</td><td align="center">🙉</td><td align="center">🙊</td><td align="center">🐵</td><td align="center">🐒</td><td align="center">🐶</td><td align="center">🐕</td><td align="center">🐩</td></tr><tr><td align="center">🐺</td><td align="center">🐱</td><td align="center">😺</td><td align="center">😸</td><td align="center">😹</td><td align="center">😻</td><td align="center">😼</td><td align="center">😽</td></tr><tr><td align="center">🙀</td><td align="center">😿</td><td align="center">😾</td><td align="center">🐈</td><td align="center">🐯</td><td align="center">🐅</td><td align="center">🐆</td><td align="center">🐴</td></tr><tr><td align="center">🐎</td><td align="center">🐮</td><td align="center">🐂</td><td align="center">🐃</td><td align="center">🐄</td><td align="center">🐷</td><td align="center">🐖</td><td align="center">🐗</td></tr><tr><td align="center">🐽</td><td align="center">🐏</td><td align="center">🐑</td><td align="center">🐐</td><td align="center">🐪</td><td align="center">🐫</td><td align="center">🐘</td><td align="center">🐭</td></tr><tr><td align="center">🐁</td><td align="center">🐀</td><td align="center">🐹</td><td align="center">🐰</td><td align="center">🐇</td><td align="center">🐻</td><td align="center">🐨</td><td align="center">🐼</td></tr><tr><td align="center">🐾</td><td align="center">🐔</td><td align="center">🐓</td><td align="center">🐣</td><td align="center">🐤</td><td align="center">🐥</td><td align="center">🐦</td><td align="center">🐧</td></tr><tr><td align="center">🐸</td><td align="center">🐊</td><td align="center">🐢</td><td align="center">🐍</td><td align="center">🐲</td><td align="center">🐉</td><td align="center">🐳</td><td align="center">🐋</td></tr><tr><td align="center">🐬</td><td align="center">🐟</td><td align="center">🐠</td><td align="center">🐡</td><td align="center">🐙</td><td align="center">🐚</td><td align="center">🐌</td><td align="center">🐛</td></tr><tr><td align="center">🐜</td><td align="center">🐝</td><td align="center">🐞</td><td align="center">🦋</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji植物</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">💐</td><td align="center">🌸</td><td align="center">💮</td><td align="center">🌹</td><td align="center">🌺</td><td align="center">🌻</td><td align="center">🌼</td><td align="center">🌷</td></tr><tr><td align="center">🌱</td><td align="center">🌲</td><td align="center">🌳</td><td align="center">🌴</td><td align="center">🌵</td><td align="center">🌾</td><td align="center">🌿</td><td align="center">🍀</td></tr><tr><td align="center">🍁</td><td align="center">🍂</td><td align="center">🍃</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji自然</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🌍</td><td align="center">🌎</td><td align="center">🌏</td><td align="center">🌐</td><td align="center">🌑</td><td align="center">🌒</td><td align="center">🌓</td><td align="center">🌔</td></tr><tr><td align="center">🌕</td><td align="center">🌖</td><td align="center">🌗</td><td align="center">🌘</td><td align="center">🌙</td><td align="center">🌚</td><td align="center">🌛</td><td align="center">🌜</td></tr><tr><td align="center">☀</td><td align="center">🌝</td><td align="center">🌞</td><td align="center">⭐</td><td align="center">🌟</td><td align="center">🌠</td><td align="center">☁</td><td align="center">⛅</td></tr><tr><td align="center">☔</td><td align="center">⚡</td><td align="center">❄</td><td align="center">🔥</td><td align="center">💧</td><td align="center">🌊</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji饮食</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🍇</td><td align="center">🍈</td><td align="center">🍉</td><td align="center">🍊</td><td align="center">🍋</td><td align="center">🍌</td><td align="center">🍍</td><td align="center">🍎</td></tr><tr><td align="center">🍏</td><td align="center">🍐</td><td align="center">🍑</td><td align="center">🍒</td><td align="center">🍓</td><td align="center">🍅</td><td align="center">🍆</td><td align="center">🌽</td></tr><tr><td align="center">🍄</td><td align="center">🌰</td><td align="center">🍞</td><td align="center">🍖</td><td align="center">🍗</td><td align="center">🍔</td><td align="center">🍟</td><td align="center">🍕</td></tr><tr><td align="center">🍳</td><td align="center">🍲</td><td align="center">🍱</td><td align="center">🍘</td><td align="center">🍙</td><td align="center">🍚</td><td align="center">🍛</td><td align="center">🍜</td></tr><tr><td align="center">🍝</td><td align="center">🍠</td><td align="center">🍢</td><td align="center">🍣</td><td align="center">🍤</td><td align="center">🍥</td><td align="center">🍡</td><td align="center">🍦</td></tr><tr><td align="center">🍧</td><td align="center">🍨</td><td align="center">🍩</td><td align="center">🍪</td><td align="center">🎂</td><td align="center">🍰</td><td align="center">🍫</td><td align="center">🍬</td></tr><tr><td align="center">🍭</td><td align="center">🍮</td><td align="center">🍯</td><td align="center">🍼</td><td align="center">☕</td><td align="center">🍵</td><td align="center">🍶</td><td align="center">🍷</td></tr><tr><td align="center">🍸</td><td align="center">🍹</td><td align="center">🍺</td><td align="center">🍻</td><td align="center">🍴</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji文体</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🎪</td><td align="center">🎭</td><td align="center">🎨</td><td align="center">🎰</td><td align="center">🚣</td><td align="center">🛀</td><td align="center">🎫</td><td align="center">🏆</td></tr><tr><td align="center">⚽</td><td align="center">⚾</td><td align="center">🏀</td><td align="center">🏈</td><td align="center">🏉</td><td align="center">🎾</td><td align="center">🎱</td><td align="center">🎳</td></tr><tr><td align="center">⛳</td><td align="center">🎣</td><td align="center">🎽</td><td align="center">🎿</td><td align="center">🏂</td><td align="center">🏄</td><td align="center">🏇</td><td align="center">🏊</td></tr><tr><td align="center">🚴</td><td align="center">🚵</td><td align="center">🎯</td><td align="center">🎮</td><td align="center">🎲</td><td align="center">🎷</td><td align="center">🎸</td><td align="center">🎺</td></tr><tr><td align="center">🎻</td><td align="center">🎬</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji恐怖</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">😈</td><td align="center">👿</td><td align="center">👹</td><td align="center">👺</td><td align="center">💀</td><td align="center">☠</td><td align="center">👻</td><td align="center">👽</td></tr><tr><td align="center">👾</td><td align="center">💣</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji旅游</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🌋</td><td align="center">🗻</td><td align="center">🏠</td><td align="center">🏡</td><td align="center">🏢</td><td align="center">🏣</td><td align="center">🏤</td><td align="center">🏥</td></tr><tr><td align="center">🏦</td><td align="center">🏨</td><td align="center">🏩</td><td align="center">🏪</td><td align="center">🏫</td><td align="center">🏬</td><td align="center">🏭</td><td align="center">🏯</td></tr><tr><td align="center">🏰</td><td align="center">💒</td><td align="center">🗼</td><td align="center">🗽</td><td align="center">⛪</td><td align="center">⛲</td><td align="center">🌁</td><td align="center">🌃</td></tr><tr><td align="center">🌆</td><td align="center">🌇</td><td align="center">🌉</td><td align="center">🌌</td><td align="center">🎠</td><td align="center">🎡</td><td align="center">🎢</td><td align="center">🚂</td></tr><tr><td align="center">🚃</td><td align="center">🚄</td><td align="center">🚅</td><td align="center">🚆</td><td align="center">🚇</td><td align="center">🚈</td><td align="center">🚉</td><td align="center">🚊</td></tr><tr><td align="center">🚝</td><td align="center">🚞</td><td align="center">🚋</td><td align="center">🚌</td><td align="center">🚍</td><td align="center">🚎</td><td align="center">🚏</td><td align="center">🚐</td></tr><tr><td align="center">🚑</td><td align="center">🚒</td><td align="center">🚓</td><td align="center">🚔</td><td align="center">🚕</td><td align="center">🚖</td><td align="center">🚗</td><td align="center">🚘</td></tr><tr><td align="center">🚚</td><td align="center">🚛</td><td align="center">🚜</td><td align="center">🚲</td><td align="center">⛽</td><td align="center">🚨</td><td align="center">🚥</td><td align="center">🚦</td></tr><tr><td align="center">🚧</td><td align="center">⚓</td><td align="center">⛵</td><td align="center">🚤</td><td align="center">🚢</td><td align="center">✈</td><td align="center">💺</td><td align="center">🚁</td></tr><tr><td align="center">🚟</td><td align="center">🚠</td><td align="center">🚡</td><td align="center">🚀</td><td align="center">🎑</td><td align="center">🗿</td><td align="center">🛂</td><td align="center">🛃</td></tr><tr><td align="center">🛄</td><td align="center">🛅</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji物品</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">💌</td><td align="center">💎</td><td align="center">🔪</td><td align="center">💈</td><td align="center">🚪</td><td align="center">🚽</td><td align="center">🚿</td><td align="center">🛁</td></tr><tr><td align="center">⏳</td><td align="center">⌚</td><td align="center">⏰</td><td align="center">🎈</td><td align="center">🎉</td><td align="center">🎊</td><td align="center">🎎</td><td align="center">🎏</td></tr><tr><td align="center">🎐</td><td align="center">🎀</td><td align="center">🎁</td><td align="center">📯</td><td align="center">📻</td><td align="center">📱</td><td align="center">📲</td><td align="center">☎</td></tr><tr><td align="center">📞</td><td align="center">📟</td><td align="center">📠</td><td align="center">🔋</td><td align="center">🔌</td><td align="center">💻</td><td align="center">💽</td><td align="center">💾</td></tr><tr><td align="center">💿</td><td align="center">📀</td><td align="center">🎥</td><td align="center">📺</td><td align="center">📷</td><td align="center">📹</td><td align="center">📼</td><td align="center">🔍</td></tr><tr><td align="center">🔎</td><td align="center">🔬</td><td align="center">🔭</td><td align="center">📡</td><td align="center">💡</td><td align="center">🔦</td><td align="center">🏮</td><td align="center">📔</td></tr><tr><td align="center">📕</td><td align="center">📖</td><td align="center">📗</td><td align="center">📘</td><td align="center">📙</td><td align="center">📚</td><td align="center">📓</td><td align="center">📃</td></tr><tr><td align="center">📜</td><td align="center">📄</td><td align="center">📰</td><td align="center">📑</td><td align="center">🔖</td><td align="center">💰</td><td align="center">💴</td><td align="center">💵</td></tr><tr><td align="center">💶</td><td align="center">💷</td><td align="center">💸</td><td align="center">💳</td><td align="center">✉</td><td align="center">📧</td><td align="center">📨</td><td align="center">📩</td></tr><tr><td align="center">📤</td><td align="center">📥</td><td align="center">📦</td><td align="center">📫</td><td align="center">📪</td><td align="center">📬</td><td align="center">📭</td><td align="center">📮</td></tr><tr><td align="center">✏</td><td align="center">✒</td><td align="center">📝</td><td align="center">📁</td><td align="center">📂</td><td align="center">📅</td><td align="center">📆</td><td align="center">📇</td></tr><tr><td align="center">📈</td><td align="center">📉</td><td align="center">📊</td><td align="center">📋</td><td align="center">📌</td><td align="center">📍</td><td align="center">📎</td><td align="center">📏</td></tr><tr><td align="center">📐</td><td align="center">✂</td><td align="center">🔒</td><td align="center">🔓</td><td align="center">🔏</td><td align="center">🔐</td><td align="center">🔑</td><td align="center">🔨</td></tr><tr><td align="center">🔫</td><td align="center">🔧</td><td align="center">🔩</td><td align="center">🔗</td><td align="center">💉</td><td align="center">💊</td><td align="center">🚬</td><td align="center">🔮</td></tr><tr><td align="center">🚩</td><td align="center">🎌</td><td align="center">💦</td><td align="center">💨</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji标志</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">♠</td><td align="center">♥</td><td align="center">♦</td><td align="center">♣</td><td align="center">🀄</td><td align="center">🎴</td><td align="center">🔇</td><td align="center">🔈</td></tr><tr><td align="center">🔉</td><td align="center">🔊</td><td align="center">📢</td><td align="center">📣</td><td align="center">💤</td><td align="center">💢</td><td align="center">💬</td><td align="center">💭</td></tr><tr><td align="center">♨</td><td align="center">🌀</td><td align="center">🔔</td><td align="center">🔕</td><td align="center">✡</td><td align="center">✝</td><td align="center">🔯</td><td align="center">📛</td></tr><tr><td align="center">🔰</td><td align="center">🔱</td><td align="center">⭕</td><td align="center">✅</td><td align="center">☑</td><td align="center">✔</td><td align="center">✖</td><td align="center">❌</td></tr><tr><td align="center">❎</td><td align="center">➕</td><td align="center">➖</td><td align="center">➗</td><td align="center">➰</td><td align="center">➿</td><td align="center">〽</td><td align="center">✳</td></tr><tr><td align="center">✴</td><td align="center">❇</td><td align="center">‼</td><td align="center">⁉</td><td align="center">❓</td><td align="center">❔</td><td align="center">❕</td><td align="center">❗</td></tr><tr><td align="center">©</td><td align="center">®</td><td align="center">™</td><td align="center">🎦</td><td align="center">🔅</td><td align="center">🔆</td><td align="center">💯</td><td align="center">🔠</td></tr><tr><td align="center">🔡</td><td align="center">🔢</td><td align="center">🔣</td><td align="center">🔤</td><td align="center">🅰</td><td align="center">🆎</td><td align="center">🅱</td><td align="center">🆑</td></tr><tr><td align="center">🆒</td><td align="center">🆓</td><td align="center">ℹ</td><td align="center">🆔</td><td align="center">Ⓜ</td><td align="center">🆕</td><td align="center">🆖</td><td align="center">🅾</td></tr><tr><td align="center">🆗</td><td align="center">🅿</td><td align="center">🆘</td><td align="center">🆙</td><td align="center">🆚</td><td align="center">🈁</td><td align="center">🈂</td><td align="center">🈷</td></tr><tr><td align="center">🈶</td><td align="center">🈯</td><td align="center">🉐</td><td align="center">🈹</td><td align="center">🈚</td><td align="center">🈲</td><td align="center">🉑</td><td align="center">🈸</td></tr><tr><td align="center">🈴</td><td align="center">🈳</td><td align="center">㊗</td><td align="center">㊙</td><td align="center">🈺</td><td align="center">🈵</td><td align="center">▪</td><td align="center">▫</td></tr><tr><td align="center">◻</td><td align="center">◼</td><td align="center">◽</td><td align="center">◾</td><td align="center">⬛</td><td align="center">⬜</td><td align="center">🔶</td><td align="center">🔷</td></tr><tr><td align="center">🔸</td><td align="center">🔹</td><td align="center">🔺</td><td align="center">🔻</td><td align="center">💠</td><td align="center">🔲</td><td align="center">🔳</td><td align="center">⚪</td></tr><tr><td align="center">⚫</td><td align="center">🔴</td><td align="center">🔵</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji生肖</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🐁</td><td align="center">🐂</td><td align="center">🐅</td><td align="center">🐇</td><td align="center">🐉</td><td align="center">🐍</td><td align="center">🐎</td><td align="center">🐐</td></tr><tr><td align="center">🐒</td><td align="center">🐓</td><td align="center">🐕</td><td align="center">🐖</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji星座</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">♈</td><td align="center">♉</td><td align="center">♊</td><td align="center">♋</td><td align="center">♌</td><td align="center">♍</td><td align="center">♎</td><td align="center">♏</td></tr><tr><td align="center">♐</td><td align="center">♑</td><td align="center">♒</td><td align="center">♓</td><td align="center">⛎</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji钟表</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🕛</td><td align="center">🕧</td><td align="center">🕐</td><td align="center">🕜</td><td align="center">🕑</td><td align="center">🕝</td><td align="center">🕒</td><td align="center">🕞</td></tr><tr><td align="center">🕓</td><td align="center">🕟</td><td align="center">🕔</td><td align="center">🕠</td><td align="center">🕕</td><td align="center">🕡</td><td align="center">🕖</td><td align="center">🕢</td></tr><tr><td align="center">🕗</td><td align="center">🕣</td><td align="center">🕘</td><td align="center">🕤</td><td align="center">🕙</td><td align="center">🕥</td><td align="center">🕚</td><td align="center">🕦</td></tr><tr><td align="center">⌛</td><td align="center">⏳</td><td align="center">⌚</td><td align="center">⏰</td><td align="center">⏱</td><td align="center">⏲</td><td align="center">🕰</td><td align="center"></td></tr><tr><td align="center"><code>Emoji心形</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">💘</td><td align="center">❤</td><td align="center">💓</td><td align="center">💔</td><td align="center">💕</td><td align="center">💖</td><td align="center">💗</td><td align="center">💙</td></tr><tr><td align="center">💚</td><td align="center">💛</td><td align="center">💜</td><td align="center">💝</td><td align="center">💞</td><td align="center">💟</td><td align="center">❣</td><td align="center"></td></tr><tr><td align="center"><code>Emoji花草</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">💐</td><td align="center">🌸</td><td align="center">💮</td><td align="center">🌹</td><td align="center">🌺</td><td align="center">🌻</td><td align="center">🌼</td><td align="center">🌷</td></tr><tr><td align="center">🌱</td><td align="center">🌿</td><td align="center">🍀</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji树叶</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🌿</td><td align="center">🍀</td><td align="center">🍁</td><td align="center">🍂</td><td align="center">🍃</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji月亮</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🌑</td><td align="center">🌒</td><td align="center">🌓</td><td align="center">🌔</td><td align="center">🌕</td><td align="center">🌖</td><td align="center">🌗</td><td align="center">🌘</td></tr><tr><td align="center">🌙</td><td align="center">🌚</td><td align="center">🌛</td><td align="center">🌜</td><td align="center">🌝</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji水果</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🍇</td><td align="center">🍈</td><td align="center">🍉</td><td align="center">🍊</td><td align="center">🍋</td><td align="center">🍌</td><td align="center">🍍</td><td align="center">🍎</td></tr><tr><td align="center">🍏</td><td align="center">🍐</td><td align="center">🍑</td><td align="center">🍒</td><td align="center">🍓</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji钱币</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">💴</td><td align="center">💵</td><td align="center">💶</td><td align="center">💷</td><td align="center">💰</td><td align="center">💸</td><td align="center">💳</td><td align="center"></td></tr><tr><td align="center"><code>Emoji交通</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🚂</td><td align="center">🚃</td><td align="center">🚄</td><td align="center">🚅</td><td align="center">🚆</td><td align="center">🚇</td><td align="center">🚈</td><td align="center">🚉</td></tr><tr><td align="center">🚊</td><td align="center">🚝</td><td align="center">🚞</td><td align="center">🚋</td><td align="center">🚌</td><td align="center">🚍</td><td align="center">🚎</td><td align="center">🚏</td></tr><tr><td align="center">🚐</td><td align="center">🚑</td><td align="center">🚒</td><td align="center">🚓</td><td align="center">🚔</td><td align="center">🚕</td><td align="center">🚖</td><td align="center">🚗</td></tr><tr><td align="center">🚘</td><td align="center">🚚</td><td align="center">🚛</td><td align="center">🚜</td><td align="center">🚲</td><td align="center">⛽</td><td align="center">🚨</td><td align="center">🚥</td></tr><tr><td align="center">🚦</td><td align="center">🚧</td><td align="center">⚓</td><td align="center">⛵</td><td align="center">🚣</td><td align="center">🚤</td><td align="center">🚢</td><td align="center">✈</td></tr><tr><td align="center">💺</td><td align="center">🚁</td><td align="center">🚟</td><td align="center">🚠</td><td align="center">🚡</td><td align="center">🚀</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji建筑</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">🏠</td><td align="center">🏡</td><td align="center">🏢</td><td align="center">🏣</td><td align="center">🏤</td><td align="center">🏥</td><td align="center">🏦</td><td align="center">🏨</td></tr><tr><td align="center">🏩</td><td align="center">🏪</td><td align="center">🏫</td><td align="center">🏬</td><td align="center">🏭</td><td align="center">🏯</td><td align="center">🏰</td><td align="center">💒</td></tr><tr><td align="center">🗼</td><td align="center">🗽</td><td align="center">⛪</td><td align="center">🌆</td><td align="center">🌇</td><td align="center">🌉</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji办公</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">📱</td><td align="center">📲</td><td align="center">☎</td><td align="center">📞</td><td align="center">📟</td><td align="center">📠</td><td align="center">🔋</td><td align="center">🔌</td></tr><tr><td align="center">💻</td><td align="center">💽</td><td align="center">💾</td><td align="center">💿</td><td align="center">📀</td><td align="center">🎥</td><td align="center">📺</td><td align="center">📷</td></tr><tr><td align="center">📹</td><td align="center">📼</td><td align="center">🔍</td><td align="center">🔎</td><td align="center">🔬</td><td align="center">🔭</td><td align="center">📡</td><td align="center">📔</td></tr><tr><td align="center">📕</td><td align="center">📖</td><td align="center">📗</td><td align="center">📘</td><td align="center">📙</td><td align="center">📚</td><td align="center">📓</td><td align="center">📃</td></tr><tr><td align="center">📜</td><td align="center">📄</td><td align="center">📰</td><td align="center">📑</td><td align="center">🔖</td><td align="center">💳</td><td align="center">✉</td><td align="center">📧</td></tr><tr><td align="center">📨</td><td align="center">📩</td><td align="center">📤</td><td align="center">📥</td><td align="center">📦</td><td align="center">📫</td><td align="center">📪</td><td align="center">📬</td></tr><tr><td align="center">📭</td><td align="center">📮</td><td align="center">✏</td><td align="center">✒</td><td align="center">📝</td><td align="center">📁</td><td align="center">📂</td><td align="center">📅</td></tr><tr><td align="center">📆</td><td align="center">📇</td><td align="center">📈</td><td align="center">📉</td><td align="center">📊</td><td align="center">📋</td><td align="center">📌</td><td align="center">📍</td></tr><tr><td align="center">📎</td><td align="center">📏</td><td align="center">📐</td><td align="center">✂</td><td align="center">🔒</td><td align="center">🔓</td><td align="center">🔏</td><td align="center">🔐</td></tr><tr><td align="center">🔑</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><code>Emoji箭头</code></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">⬆</td><td align="center">↗</td><td align="center">➡</td><td align="center">↘</td><td align="center">⬇</td><td align="center">↙</td><td align="center">⬅</td><td align="center">↖</td></tr><tr><td align="center">↕</td><td align="center">↔</td><td align="center">↩</td><td align="center">↪</td><td align="center">⤴</td><td align="center">⤵</td><td align="center">🔃</td><td align="center">🔄</td></tr><tr><td align="center">🔙</td><td align="center">🔚</td><td align="center">🔛</td><td align="center">🔜</td><td align="center">🔝</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      收集整理了若干可复制的Emoji符号。
    
    </summary>
    
    
      <category term="Emoji" scheme="https://tamsiree.com/categories/Emoji/"/>
    
    
      <category term="Emoji" scheme="https://tamsiree.com/tags/Emoji/"/>
    
  </entry>
  
  <entry>
    <title>微元素每日答题</title>
    <link href="https://tamsiree.com/Resources/%E6%B8%B8%E6%88%8F%E8%B5%84%E6%BA%90/%E5%BE%AE%E5%85%83%E7%B4%A0/%E5%BE%AE%E5%85%83%E7%B4%A0%E6%AF%8F%E6%97%A5%E7%AD%94%E9%A2%98/"/>
    <id>https://tamsiree.com/Resources/%E6%B8%B8%E6%88%8F%E8%B5%84%E6%BA%90/%E5%BE%AE%E5%85%83%E7%B4%A0/%E5%BE%AE%E5%85%83%E7%B4%A0%E6%AF%8F%E6%97%A5%E7%AD%94%E9%A2%98/</id>
    <published>2020-01-18T16:03:58.000Z</published>
    <updated>2020-02-01T07:00:12.885Z</updated>
    
    <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>微元素E3D是中国第一的游戏资源下载网站,提供最全面的游戏资源下载,手机游戏资源,网页游戏资源,原画,插画,UI,Unity技术等, 大量不断更新的优质资源,是游戏开发者的乐园。</p><p>微元素官网地址：<a href="https://www.element3ds.com/" target="_blank" rel="noopener">Element3ds.com</a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><ul><li>刺客、奶妈属于微库中的什么子类——职业  </li><li>持有哪个装备可以每天收入2000元素币？——圣剑-【塞姆里亚】  </li><li>当一个帖子被锁定之后，你不能做的是？——不能回复  </li><li>定义帖子标签，多少个能够领奖？——300  </li><li>发帖一次最大上传的图片数量是？——99  </li><li>发布悬赏帖如何获取更多的元素大神赞助？——价格合理且有充分的描述截图  </li><li>关于多关键词搜索的描述正确的是？——【UI】 空格 【科幻】 可以找到 所有科幻题材的UI资源  </li><li>购买了失效区的资源，应该怎么办？——自己承担部分损失  </li><li>购买了失效区的资源，发举报投诉帖会怎么样？——自己承担部分损失  </li><li>购买的资源如果失效不能下载，正确的做法是？——在论坛举报投诉区发帖  </li><li>画板订阅任务要求需要订阅多少个画板才能获得奖励？——30个  </li><li>胡乱回复被大神扣活跃的规则是？——活跃度越高扣的越多  </li><li>获取装备【赤铁剑】需要发布多少个主题才能申请购买？——400  </li><li>据官方投票统计，元素会员最常用的发现新帖方式是？——论坛左上角最新  </li><li>进入元素矿场，发现提示“您的矿场已经被外星生物侵占！，请入群咨询”是怎么回事？——没有登录微元素  </li><li>“技术文章来两篇”任务怎么样才能够完成并领取任务奖励？——必须在【技术文库】大板块下发两个有内容有意义的技术文章帖  </li><li>可以不用回复，就能看到回复可见内容的能力是？——元素神的天眼  </li><li>矿场不产出以下哪种材料？——秘银  </li><li>【扩散大招】任务究竟该怎么做？——在QQ群发扩散链接+该帖的图，截图发帖在扩散区  </li><li>目前活跃度兑换元素币的起步金额是？——2000  </li><li>目前土豪金兑换元素币的起步金额是？——1000  </li><li>目前新会员的注册方式是？——QQ注册  </li><li>满足一定条件后，购买装备【元素之盾】需要消耗什么？—— 8000活跃度  </li><li>[每天一早上元素]的下一句是？——挖矿撩妹两不误  </li><li>哪些内容是微元素不提倡发布的？——电影游戏  </li><li>哪些用户不是微元素的目标用户群？——同性交友  </li><li>哪个等级可以上传视频文件？——元素王  </li><li>如果你有一组国外大神画的Q版怪物想分享，应该发布在哪个版块？——怪物军团  </li><li>如果你有一组3D怪物的CG图片想分享，应该发在哪个版块？——3D作品中的CG角色  </li><li>如果你浏览论坛的时候发现你喜欢的帖子想分类收藏，正确的做法是？——帖子左下角点画板  </li><li>如果你在看某个帖子时，你想“私信”楼主，那它的按钮在哪里？——点击帖子里楼主头像下方的信封图标  </li><li>如果您发现自己不能上传头像或图片，这说明？——您的浏览器不支持flash,换个浏览器试试看  </li><li>如果充值遇到失败的情况，正确的做法是？——联系群主并获得额外补偿  </li><li>如果我想练习发帖，正确的做法是？——在[元素口水]练习  </li><li>如果我想快速通关元素学堂，学习元素知识，最迅速全面的方法是？——去[网站帮助][赚币方法]阅读指导  </li><li>如果我想修改网站登录时的用户名，正确的做法是？——购买道具改名卡  </li><li>如果我想要给已经发布的帖子补充新图片，正确的做法是？——编辑帖子 ，插入图片  </li><li>如果我忘记了社区规则，比如活跃度兑换规则，想要搜索下重新温习，应该？——搜索 【活跃度】，最简单的关键词  </li><li>如果我搜索一个明确的资源 如 【unity第一人称射击操作系统工程】没有想要的结果我应该怎么做？——输入简单的词用空格隔开，如 【unity】 【FPS】  </li><li>如果想让更多人在搜索和你帖子内容相关的贴时，能轻易搜索到你的帖子，你可以——添加帖子的标签，尽可能丰富完整  </li><li>如果一个帖子的网盘失效了，最简单的做法是？——在举报区发帖，必须带有原帖地址  </li><li>如果发错了帖子或发多了相同的重复帖子，该怎么删帖？——在申请区发帖并附上要删的帖子链接  </li><li>如果发布的3D模型资源中没有max或maya文件，帖子会被优先移动到——综合模型  </li><li>如果对账户名不满意，网站会员该如何正确地修改自己的账户名？——购买改名卡道具并使用  </li><li>如何有效增加在线时间？——不断看帖  </li><li>我如果完成了某项元素成就，希望获取丰厚的奖励，那么应该？——在申请区发帖-附带成就名称  </li><li>任务究竟该怎么做？——在QQ群发扩散链接+该帖的图，截图发帖在扩散区  </li><li>热搜排行榜中的词来源为？——元素网用户经常搜索的词  </li><li>热搜排行榜页面能显示多少个热搜词？——450  </li><li>设置封面的正确做法是？——先插入完成，再鼠标移动到图上设置  </li><li>什么可以直接兑换微币？——元素币  </li><li>什么样的帖子会被立刻移动到[重复区]——截图展示与之前的一样  </li><li>什么样的内容会被移动到【推荐重发】？——展示图的数量和内容不佳，无法判定品质  </li><li>申请扩散大招赚币，哪一项是必须的？——个人帖子链接  </li><li>神石这个积分是什么？——统计管理员贡献的积分  </li><li>搜索结果中，分词的显示底色是什么颜色？——绿色  </li><li>搜索结果中，同义词的显示底色是什么颜色？——蓝色  </li><li>搜索结果界面右侧的“热搜词”浮动框下面不同颜色区域的是什么词？——推荐词  </li><li>“搜索”除了能搜索帖子外，下拉框中还能够选择搜索什么？——微库图片、画板、用户  </li><li>收费资源帖内的【销售总额】是指？——楼主的税前总收入  </li><li>[首发必发微元素]的下一句是？——荣耀加身装备酷  </li><li>失效资源，付费后不能下载的退币时限是？——购买算起的1个月内  </li><li>SD专区板块位于以下哪个大版块中？——TA技术美术  </li><li>土豪金是因为什么而存在？——元素送给大家的购买返利福利  </li><li>推荐的在QQ群内迅速升级并获取奖励的的方法是？——相互交流学习  </li><li>微库如何查看按照发布时间来排序的图片？——在微库页面点击“新上传”  </li><li>微库一次最大上传的图片数量是？——99  </li><li>微库的体力有什么用？——上传图片到微库会扣减体力  </li><li>微库总共有多少个一级分类？——16  </li><li>【微库】中，关于素材排序的描述正确的是——【关注度】排序是按照用户认可度排序，【新上传】可以看到最新上传的素材  </li><li>微元素QQ群-超级大群的人数是？——2000人  </li><li>微元素5群 群号是多少？——616268846  </li><li>微元素-原画QQ群的群号是——575782850  </li><li>微元素-新原画QQ群的群号是——674421744  </li><li>微元素 平面设计/影视后期 交流群的群号是？——727880933  </li><li>微元素TA技术美术QQ群的群号是——318958005  </li><li>微元素 地编 SD技术QQ群的群号是？——782480353  </li><li>微元素官方群，等级最低的头衔是？——虚灵  </li><li>微元素官方的微信公众帐号全名是？——微元素CG  </li><li>微元素qq注册登录的初始密码是什么？——没有初始密码，就是空的，要重置后才有  </li><li>微币有什么作用？——能消耗它观看并下载微库的高清图片  </li><li>网站平时说的“私信”，它的按钮在哪里？——头像下方的信封图标  </li><li>网站如果被黑客攻击，无法正常访问，我需要做的事情是？——静静的等待并祈祷  </li><li>为什么有时候帖子发了，但是自己查看时却发现帖子正在审核无法查看呢？——部分板块有发帖人工审核，通过时间不定  </li><li>为什么新的头像上传了，但是头像却没有变化？——需要刷新页面的缓存才能看到新头像  </li><li>为什么兑换的申请贴完成后，总积分有时候会下降？——因为土豪金的积分计算是×12的而元素币的积分计算是×1的  </li><li>完成成就后？如何获得到丰厚奖励？——在申请区发帖  </li><li>元素扩散大招是指？——把群扩散截图等信息发到扩散者专区  </li><li>元素神的文字颜色是？——绿色  </li><li>元素导航中的[最新]页面，会显示最新的多少张帖子？——1000  </li><li>元素没有出现过以下哪个培训机构的广告？——水晶石  </li><li>元素王的下一个等级是？——元素皇  </li><li>元素王的上一个等级是？——元素魔  </li><li>元素鼓励师主要负责哪些事情？——为好的帖子或回复加分  </li><li>元素社区内的大神是指？——网站版主  </li><li>元素装备有什么作用？——酷炫装逼  </li><li>元素悬赏时间到了，也没有满意的答案，该怎么撤销？——在申请区发申请撤销悬赏任务的帖子  </li><li>元素画板目前可以选择的分类是多少个？——14  </li><li>[元素帖子强]的下一句是?——满满正能量  </li><li>【元素搜索】时，怎样的技巧能获取更多结果？——尽可能简单的一个词  </li><li>【元素搜索】有怎样的独家特点？—专业领域的同义词智能匹配  </li><li>【元素搜索】时，怎样把符合多个条件的帖子筛选出来？——多个词之间用空格隔开  </li><li>“游戏资讯来两篇”任务怎么样才能够完成并领取任务奖励？——必须在【游戏新闻】板块下发两个有内容有意义的游戏新闻帖  </li><li>原创作品中，新人的诚意制作，功底和制作技巧较浅，缺乏细节和完成度，可被评定为什么等级？——【青铜】  </li><li>原创作品中，大神级巅峰的完美杰作，在全球范围内都堪称经典神作，可被评定为什么等级？——【钻石】  </li><li>原创作品中，水准可以到达主流商业水平标准可被评定为什么等级？——【黄金】  </li><li>用什么图片作为封面最佳而且不会被管理员扣分或移出版块？——资源里最漂亮的画面的截图  </li><li>拥有20个首发资源帖才可以申请的装备是？——圣杖-【安东尼达斯】  </li><li>拥有50件元素装备才可以申请的装备是？——女皇之泪  </li><li>【装备】拥有50件元素装备才可以申请的装备是？—— 女皇之泪  </li><li>【装备】持有什么装备可以每天都获得一定的土豪金？—— 盾系列装备  </li><li>【装备】持有什么装备可以每天都获得一定的贡献值？—— 杖系列装备  </li><li>如果发布的3D模型资源中没有max、maya源文件、OBJ、FBX等文件，帖子会被优先移动到—— 综合模型  </li><li>【装备】需要满足账号已经注册一定天数后才能申请购买获得的装备是？—— 战甲系列装备  </li><li>在[申请区]可以申请的是哪种？—— 兑换活跃度  </li><li>发布完整规格的帖子时，设置付费信息应该放在？—— 帖子最顶部  </li><li>【装备】购买什么系列的装备需要消耗的是活跃度？—— 盾系列装备  </li><li>发帖获取网站顶部推荐的决定性因素是？—— 管理员喜好  </li><li><p>因为网络卡顿造成一个资源的重复购买，我应该怎么做？——在举报区发帖并附上重复购买的资源贴的链接  </p></li><li><p>新注册的号，用户名中有[qq]开头字样的，因为是？——QQ昵称与网站某个会员的用户名相同，名字已被占用。  </p></li><li><p>想查看自己购买过的帖子记录，最快捷的方法是？——导航-个人中心-购买记录  </p></li><li><p>悬赏帖发布多少日之后，大神可以帮助帖主选择正确答案？——20  </p></li><li>以下哪种方式可获取网站板块的畅下权限？——成为元素大神  </li><li>以下那种积分可以转换为元素币？——活跃度  </li><li>以下哪种行为会被扣积分呢？——活动贴内无意义回复  </li><li>以下哪种操作可能降低你的积分等级？——兑换土豪金为元素币  </li><li>以下哪个区要求持有一定数量的元素币才能进入？——解剖结构  </li><li>以下哪个因素会影响搜索排名？——帖子被查看的数量  </li><li>以下哪个因素不会影响你的元素积分？——扩散  </li><li>以下哪个是教程专区版块的分类名称？——技术文库  </li><li>以下哪个是2D资源版块的分类名称——场景资源  </li><li>以下哪个是3D模型版块的分类名称？——原创角色  </li><li>以下哪个是元素比其他游戏CG网站独创的内容——联想搜索  </li><li>以下哪个管理是元素真女神？——沐语橙风  </li><li>以下哪个管理不是元素真女神——小小小芳  </li><li>以下哪个不是每天都可以做的任务？——参与活动  </li><li>以下哪个版块的封面不是正方形？——游戏研发中的插件资源版块  </li><li>以下哪个页面链接能看到元素历代顶部推荐集合？——元素推荐  </li><li>以下哪一个是元素徽章——感动  </li><li>以下哪一条不是微元素的业内首创？——真实交友  </li><li>以下哪些是元素禁发的内容？——WebEasy游戏  </li><li>以下可以开启充值双倍buff的日子是？——十一月十一  </li><li>以下什么样的封面是不合格的，会被移区？——文件夹内容截图当封面  </li><li>元素资源专区有多少个大版块？——12  </li><li>元素出售资源的交易税是多少？——所有人都是20%  </li><li>元素原创艺术版块的美术作品排位有几个等级？——5  </li><li>元素矿场一共有几种矿石？——活动时增加  </li><li>元素矿场每月什么时间会销毁一颗星球——每个月的24号  </li><li>元素矿场每月随机一爆在哪几个星球中选择——所有星球随机选择  </li><li>元素挖矿：星球爆炸的条件是？——总量低于2%  </li><li>元素挖矿：升级房子的主要目的是——爆炸前有地方安置  </li><li>元素挖矿：哪种矿物质最便宜——煤矿  </li><li>元素活动：如果在要求回复的活动下面灌水会？——被扣活跃度  </li><li>元素活动：如果在要求回复的活动下面灌水会？——被扣积分  </li><li>元素预售达成发放下载地址的步骤是？——有xx人购买帖子内容后，再开放下载地址  </li><li>元素帖子页面，最大能显出的图片宽度是？——1440  </li><li>元素网目前可以上传最大多大的视频？——200M  </li><li>装备【龙枪】的获取条件是？——精华20  </li><li>装备[深渊]的获取条件是？——精华50  </li><li>【装备】只有20个首发才能装备的装备是——圣杖安东尼达斯  </li><li>在[申请区]能申请的是以下哪种？——兑换土豪金  </li><li>在搜索结果中把鼠标移动到帖子封面上显示最多时只能看到以下的什么内容？——标签和同义都有  </li><li>在元素怎么申请首发资源并获得独家推荐？——在申请区发帖附首发贴的链接  </li><li>在同一天内，花费总计1W元素币可以申请获得的装备是？——满天星  </li><li>在同一天内，花费总计1W元素币可以申请的成就是？——挥洒自如  </li><li>在同一天内，连续发布30个有效资源帖子可以申请的成就是？——暴走连击  </li><li>在同一天内，连续发布30个有效资源帖子可以申请获得的装备是？——散夜对剑  </li><li>在悬赏活动中，非参与的回复会被扣分，但是想发表自己的看法或者建议应该怎么办？——帖子左下角评分表达  </li><li>在PC上，点击头像后进入的页面是？——个人首页  </li><li>在哪个区发帖，需要有正确的分类信息？——Unity插件  </li><li>在以下哪个区，非认真参与者且随意回复的话会被扣除大量活跃度？——【悬赏活动】  </li><li>在PSD原画区发布资源，不展示哪种资源细节将会被移出该板块？——PSD分层  </li><li>怎样的购买方式会返还土豪金？——购买支付框模式会返还  </li><li>怎么样的画板不会出现在画板首页，也不会被推荐？——没有封面  </li><li>转载帖子，以下那种行为可能会被扣分？——没有使用正确的文字底色  </li><li>转载文章时，复制过来的文字背景颜色错误，快速修正的方法是?——刷子工具  </li><li>资源板块首页 顶部[主题]后面的第一个橙色数字是？——今天发布的新帖子数  </li><li>2D资源中的【角色资源】指的是？——能直接在游戏中使用的如角色序列，像素角色等素材  </li><li>以下哪个是原画插画版块的分类名称？—— 精美壁纸  </li><li>原画插画区下面有几个[子区]分类？——16  </li><li>元素矿场，矿长有多少个等级？——24  </li><li>元素矿场总共有几个矿场成就？——7  </li><li>元素晋级会员组总共有几个等级？——9  </li><li>【交易】购买别人的资源就会增加土豪金，转化比例是——10%  </li><li>元素帖子页面，最大能显出的图片宽度是？——1440  </li><li>发布哪种类型的帖子并不会被移动到[综合分享]?——价格不合理  </li><li>【搜索】顶部导航栏的“排行”默认打开是什么榜单？—— 热搜词榜单  </li><li>【举报】发举报帖举报用脚本外挂刷分行为的人，管理确认有效的，最低将能得到多少奖励？——2000元素币  </li><li>【搜索】搜索界面右侧的“热搜词”浮动框中会随机显示多少个全站前300的热搜词？——20  </li><li>【界面】如果你在看某个帖子时，你想“私信”楼主，那它的按钮在哪里？—— 点击帖子里楼主头像下方的信封图标  </li><li>装备【深渊】的获取条件是？—— 精华50  </li><li>导航中的购买记录可看到记录是？—— 我买其它人资源的记录  </li><li>2D资源中的【角色资源】是指？—— 能直接在游戏中使用的如角色序列，像素角色等素材  </li><li>新注册的号，用户名中有【qq_】开头字样的，因为是？——QQ昵称与网站某个会员的用户名相同，名字已被占用  </li><li>把售价50+元素币的普通帖升级为精华帖的条件是？—— 出售次数100  </li><li>把售价200+元素币的普通帖升级为精华帖的条件是？—— 出售次数50  </li><li>把售价500+元素币的普通帖升级为精华帖的条件是？—— 出售次数30  </li><li>把售价1000+元素币的普通帖升级为精华帖的条件是？—— 出售次数20  </li><li>把售价2000+元素币的普通帖升级为精华帖的条件是？—— 出售次数10  </li><li>把售价5000+元素币的普通帖升级为精华帖的条件是？—— 出售次数3  </li><li>编辑器板块位于以下哪个大版块中？——TA技术美术  </li><li>关于做【技术文章】任务以下说法正确的是？—— 做【技术文章】任务只能在技术文章大板块下发技术文章  </li><li>【任务】第一次完成“我的推荐任务”奖励多少元素币？——200  </li><li>【任务】画板订阅任务要求需要订阅多少个画板才能获得奖励？——30  </li><li>关于【悬赏活动】 正确的说法是？—— 每个认真参与者都可以获得对应奖励  </li><li>【标签】定义帖子标签，多少个能够领奖？——300  </li><li>什么样的内容会被移动到【推荐重发】？—— 展示图的数量和内容不佳，无法判定品质  </li><li>【装备】持有装备【圣剑系列】挂机可获取的元素币上限是多少？——100万元素币  </li><li>想查看自己购买过的帖子记录，最快捷的方法是？—— 导航-个人中心-购买记录</li></ul><hr><blockquote><p>to be continued…</p></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      微元素E3D是中国第一的游戏资源下载网站,提供最全面的游戏资源下载,手机游戏资源,网页游戏资源,原画,插画,UI,Unity技术等, 大量不断更新的优质资源,是游戏开发者的乐园。
    
    </summary>
    
    
      <category term="Resources" scheme="https://tamsiree.com/categories/Resources/"/>
    
      <category term="游戏资源" scheme="https://tamsiree.com/categories/Resources/%E6%B8%B8%E6%88%8F%E8%B5%84%E6%BA%90/"/>
    
      <category term="微元素" scheme="https://tamsiree.com/categories/Resources/%E6%B8%B8%E6%88%8F%E8%B5%84%E6%BA%90/%E5%BE%AE%E5%85%83%E7%B4%A0/"/>
    
    
      <category term="Resources" scheme="https://tamsiree.com/tags/Resources/"/>
    
      <category term="游戏资源" scheme="https://tamsiree.com/tags/%E6%B8%B8%E6%88%8F%E8%B5%84%E6%BA%90/"/>
    
      <category term="微元素" scheme="https://tamsiree.com/tags/%E5%BE%AE%E5%85%83%E7%B4%A0/"/>
    
  </entry>
  
</feed>
