<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tamsiree</title>
  <icon>https://www.gravatar.com/avatar/6f05c6132e630e969d55a8ea105fd562</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tamsiree.com/"/>
  <updated>2020-01-14T06:25:53.849Z</updated>
  <id>https://tamsiree.com/</id>
  
  <author>
    <name>Tamsiree</name>
    <email>tamsiree.com@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Anbox</title>
    <link href="https://tamsiree.com/Software/Anbox/Anbox/"/>
    <id>https://tamsiree.com/Software/Anbox/Anbox/</id>
    <published>2020-01-14T06:14:00.000Z</published>
    <updated>2020-01-14T06:25:53.849Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>听说最近出了一个软件<a href="http://anbox.io/" target="_blank" rel="noopener" title="http://anbox.io/">anbox</a>，可以在Linux上原生运行Andriod程序，于是迫不及待想试一试。AUR已经有人打了包，所以装起来还算方便，只是系统镜像有点大，以及要编译的包稍微有点多。安装方法主要来自<a href="https://github.com/anbox/anbox/issues/3#issuecomment-294023515" target="_blank" rel="noopener" title="https://github.com/anbox/anbox/issues/3#issuecomment-294023515">artex-files在GitHub上的评论</a>。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>先安装所有需要的软件包 (anbox-image要单独先装，不然一直显示’cannot resolve anbox-image’)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yaourt -S linux-headers dkms anbox-image</span><br><span class="line">yaourt -S anbox-modules-dkms-git anbox-git</span><br></pre></td></tr></table></figure></div><p>然后加载所需要的内核模块</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo modprobe binder_linux</span><br><span class="line">sudo modprobe ashmem_linux</span><br></pre></td></tr></table></figure></div><p>再启动相关服务 (这里用start，如果你想开机自启可以再enable)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start anbox-container-manager.service</span><br><span class="line">systemctl --user start anbox-session-manager.service</span><br></pre></td></tr></table></figure></div><p>最后在菜单中寻找anbox即可打开APP管理器。内置的一些程序如日历、设置等也会显示在菜单中，可以直接打开。目前内置程序还没有Google Play等，只能用ADB安装。</p><p>如果anbox还是不能运行，可以试试重启 (?)，以及试试用下面这句启动session-manager</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anbox session-manager --gles-driver=host</span><br></pre></td></tr></table></figure></div><p>我的台式机上不需要上述操作，但笔记本需要，可能和显卡有关。如果还有其它问题，可以看看AUR里和GitHub上的一些评论：</p><p><a href="https://aur.archlinux.org/pkgbase/anbox-git/?comments=all" target="_blank" rel="noopener" title="https://aur.archlinux.org/pkgbase/anbox-git/?comments=all">https://aur.archlinux.org/pkgbase/anbox-git/?comments=all</a></p><p><a href="https://github.com/anbox/anbox/issues/3" target="_blank" rel="noopener" title="https://github.com/anbox/anbox/issues/3">https://github.com/anbox/anbox/issues/3</a></p><hr><blockquote><p>参考链接 <a href="https://www.lainme.com/doku.php/blog/2017/04/%E5%9C%A8archlinux%E4%B8%8A%E5%AE%89%E8%A3%85anbox" target="_blank" rel="noopener">在Archlinux上安装Anbox</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      听说最近出了一个软件[anbox](http://anbox.io/ &quot;http://anbox.io/&quot;)，可以在Linux上原生运行Andriod程序，于是迫不及待想试一试。AUR已经有人打了包，所以装起来还算方便，只是系统镜像有点大，以及要编译的包稍微有点多。安装方法主要来自[artex-files在GitHub上的评论](https://github.com/anbox/anbox/issues/3#issuecomment-294023515 &quot;https://github.com/anbox/anbox/issues/3#issuecomment-294023515&quot;)。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="Anbox" scheme="https://tamsiree.com/categories/Software/Anbox/"/>
    
    
      <category term="Android" scheme="https://tamsiree.com/tags/Android/"/>
    
      <category term="Linux" scheme="https://tamsiree.com/tags/Linux/"/>
    
      <category term="Manjaro" scheme="https://tamsiree.com/tags/Manjaro/"/>
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="Anbox" scheme="https://tamsiree.com/tags/Anbox/"/>
    
  </entry>
  
  <entry>
    <title>路由器固件</title>
    <link href="https://tamsiree.com/Hardware/Router/%E8%B7%AF%E7%94%B1%E5%99%A8%E5%9B%BA%E4%BB%B6/"/>
    <id>https://tamsiree.com/Hardware/Router/%E8%B7%AF%E7%94%B1%E5%99%A8%E5%9B%BA%E4%BB%B6/</id>
    <published>2020-01-13T11:14:54.000Z</published>
    <updated>2020-01-13T11:40:33.442Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近偶然原因需要刷机，潜水研究，开始也是搞不清各种固件区别，后来慢慢整理了下整理的资料。</p><p>目前路由器折腾刷机，除了采用各品牌的原厂固件外，第三方路由器固件，基本就是：Tomato、<a href="https://www.luyouwang.net/tag/dd-wrt/" target="_blank" rel="noopener" title="查看与 DD-WRT 相关的文章">DD-WRT</a>、OpenWRT三种。 当然还有其他一些更加小众的版本, 和很多从这三大固件衍生出来的修改版固件。这篇文章, 可以让大家对这些知识有一个相对比较全面的理解, 使你更容易入门一些。</p><p>本文转载自 <a href="https://www.luyouwang.net/1237.html" target="_blank" rel="noopener">路由网</a> 。</p><h1 id="开源路由器固件历史"><a href="#开源路由器固件历史" class="headerlink" title="开源路由器固件历史"></a>开源路由器固件历史</h1><p>2003年Linksys公司（已被思科收购）推出WRT-54G，一款基于MIPS架构的无线路由器，WRT-54G操作系统以Linux取代vXworks，是很经典的一款产品，可是这个产品的软件核心是基于GPL许可下开发的，而GPL许可是遵循开源标准的，种种压力之下，思科最终还是被迫于2003年7月开放了Linksys WRT54G源代码，开源爱好者便清楚了 Linksys 是如何操作这些硬件的，这样 WRT54G 就从黑盒子变为了白盒子，从而产生出后来的各种开源项目。如 OpenWRT，dd-wrt, Tomato，Gargoyle（石像鬼），OPNsense, PFSense 等等还有很多。（Tomato 和 ddwrt 的代码与 OpenWRT 的源代码并无直接的联系，虽然 ddwrt 有在使用 OpenWRT 的GPL 的内核补丁，但是应用层的软件、启动代码等都有很大的不同。）下面说些国内论坛常见的：  </p><ul><li><p>OpenWRT（OpenWRT，LEDE，Pandora/潘多拉）  </p><ul><li>2004年1月出现所谓的OpenWRT，第一个版本是基于Linksys源码及uclibc中的buildroot项目，相关的内核驱动的代码都经过了重写，以保证其版权100%属于 OpenWRT 的版权所有人。真正基于OpenWrt发展的路由器固件项目可以参见这里：<a href="https://en.wikipedia.org/wiki/OpenWrt#Derivatives" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/OpenWrt#Derivatives</a>。</li><li>LEDE 是 OpenWRT 的一个分支，可应用于多种处理器平台，国内论坛中应用最多的就是基于 X64/Intel64（X86扩展为64位版本且兼容X86） 处理器的版本，俗称的软路由系统即指这个。</li><li>Pandora/潘多拉即 PandoraBox，是基于OpenWrt的，前身是DreamBox，由OpenWrt中国创始人之一的Lintel 所带领的技术团队维护。 Pandora 是基于OP深度定制的路由器系统，系统底层部分采用了原厂原声驱动，而非开源驱动，使其相比OP有更好的稳定性。由于OP配置及二次开发的方便性，加上Lintel根据中国网络环境对PB作出的调整及优化，受到不少互联网大咖的关注（听说还有橄榄枝）。 在中国深圳，不少公司厂家推出的“基于OP深度定制的系统”，使用的是当时开源的 DreamBox 源码或者泄漏的早期PB源码。 现时PB已得到OP的官方支持，而PB的成员也向OP贡献代码。</li><li>相对原厂固件而言，OpenWRT不是一个单一、静态的固件，而是提供了一个可添加软件包的可写的文件系统。这使用户可以自由的选择应用程序和配置，而不必受设备提供商的限制，并且可以使用一些适合某方面应用的软件包来定制你的设备。对于开发者来说，OpenWRT是一个框架，开发者不必麻烦的构建整个固件就能得到想要的应用程序；对于用户来说，这意味着完全定制的能力，与以往不同的方式使用设备，OPKG包含超过3500个软件，其 默认使用LuCI作为web交互界面。简单来说，由于OpenWRT的灵活性高，所以其部属十分复杂。因此OpenWRT最适合专家型人群。该固件适合于希望操作方面的限制尽量少、想大胆使用不同寻常的硬件，以及擅长自行推出个性化Linux发行版本的用户。  </li></ul></li><li><p>华硕开源（包括华硕原厂系统 Asuswrt，梅林，Padavan/老毛子）  </p><ul><li>华硕路由器固件（Asuswrt）是基于Tomato-RT/Tomato-USB进行二次开发的版本，需遵守GPL开源协议，除了少部分比如 Broadcom/Ralink驱动以二进制格式闭源提供外，其他大部分模块都以源码格式开源提供。</li><li>梅林固件基于华硕固件进行修改和增强，它使用的是华硕官方的闭源驱动，而不是其他人使用的开源驱动，稳定性相比开源驱动要高很多，同时它也是受到官方默许的固件，在华硕的路由器中是可以直接通过网页端手动更新的，想换回来的时候也可以直接在梅林固件的更新页面通过手动上传官方固件就更新回来了，路由器设置什么的都保留着。不过梅林固件官网只支持华硕的路由器，无法支持华硕以外的第三方路由器。而国内有些开发者大神将梅林原版进行适配，支持了更多第三方的路由器。</li><li>padavan也是基于华硕固件修改，最初是在华硕N14U N54U 的固件上经过俄国（老毛子）大神深度开发的华硕固件，就是 padavan/老毛子固件，运行速度快，界面友好，对硬件要求低。</li><li>国内常用的梅林、padavan修改版本：koolshare上面是小宝修改版merlin，Koolshare改版梅林主要就是多了以软件中心为主的第三方应用功能，譬如kms自建服务器，广告过滤等。恩山上常见的是hiboy修改版padavan。  </li></ul></li><li><p>DD-WRT  </p><ul><li>DD-WRT固件由BrainSlayer维护，<a href="http://放在dd-wrt.com" target="_blank" rel="noopener">放在dd-wrt.com</a>。从第一个版本直至V22版本都是基于Sveasoft Inc公司的Alchemy开发出来，而Alchemy又是基于以GPL发放之Linksys固件及许多其它开放源程序。由于后来人们需要向Sveasoft支付$20才能下载Alchemy固件，于是从V23开始的DD-WRT几乎完全重写，linux核心部分基于OpenWrt核心。 DD-WRT最接近实用，算是中庸，但是要定制和扩展都比较难。  </li></ul></li><li><p>Gargoyle/石像鬼  </p><ul><li>基于GPL，提供完整的全套路由功能，流量监控强悍，带宽管理和QoS很是强大，不比Tomato逊色，如果不想自己动手编译或设置，但是又想要用版权规范的OpenWRT，且想一步到位的话，Gargoyle是最好的选择，很适合追求稳定的普通用户或小微企业用户，默认界面风格传统，但有时尚风格的主题可更换，不支持多国语言，国内不流行，但已有汉化的补丁出现。  </li></ul></li><li><p>Tomato  </p><ul><li>Tomato最封闭，只针对老机器，非常保守而稳定，正在消亡中……</li></ul></li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="固件分类"><a href="#固件分类" class="headerlink" title="固件分类"></a>固件分类</h3><p>第三方路由器固件，基本就是：Tomato、<a href="https://www.luyouwang.net/tag/dd-wrt/" target="_blank" rel="noopener" title="查看与 DD-WRT 相关的文章">DD-WRT</a>、OpenWRT三种.</p><h3 id="前端和后端"><a href="#前端和后端" class="headerlink" title="前端和后端"></a>前端和后端</h3><p>基本上所有第三方路由器固件的架构上可分为前端（Frontend）和后端（Backend），后端一般情况下是一个不带界面的Linux系统, 前端一般指图形用户接口，即GUI，主要体现为Web管理界面。 比较流行的OpenWRT自身默认编译出来是不带前端的。</p><h3 id="OpenWRT的在国内常见的前端有"><a href="#OpenWRT的在国内常见的前端有" class="headerlink" title="OpenWRT的在国内常见的前端有"></a>OpenWRT的在国内常见的前端有</h3><p>LuCI：基于Apache License，现在主流，是自行编译的OpenWRT最佳搭配；</p><p>X-WRT：基于GPL，不太活跃，不太流行，好像没怎么更新了；</p><p>Gargoyle：基于GPL，提供完整的全套路由功能，流量监控强悍，带宽管理和QoS很是强大，不比Tomato逊色，如果不想自己动 手编译或设置，但是又想要用版权规范的OpenWRT，且想一步到位的话，Gargoyle是最好的选择，很适合追求稳定的普通用户或小微企业用户，默认 界面风格传统，但有时尚风格的主题可更换，不支持多国语言，国内不流行，但已有汉化的补丁出现了；</p><h3 id="其它两大固件的前端"><a href="#其它两大固件的前端" class="headerlink" title="其它两大固件的前端"></a>其它两大固件的前端</h3><p>Tomato前端部分：私有，非GPL（有源码供自编译，不能随便修改），版权模糊，有免费版，但也有很多付费增强功能的版本，界面简约，运行稳定，QoS很强大，机型的支持比较少；</p><p>DD-WRT前端部分：版权模糊，部分私有，非GPL（有提供源码，不能随便修改），有免费版，也有增强功能的付费版，界面美观，中继能力强大，支持语言众多，对机型的支持最广泛，但免费版QoS性能一般；</p><h3 id="Tomato-DualWAN"><a href="#Tomato-DualWAN" class="headerlink" title="Tomato DualWAN"></a>Tomato DualWAN</h3><p>Tomato DualWAN 使那些能刷Tomato或DD-WRT固件的路由器由原来的单WAN口变成双WAN口，而这一切不需要在路由器上增加任何硬件，只需要刷一下 Tomato DualWAN 固件就可以。刷了Tomato DualWAN之后转变出来的第二个WAN口可以接有线网络也可以接无线网络，双WAN模式支持带宽合并或智能路由。</p><p>DualWan前端部分：私有，非GPL（有源码供自编译，不能随便修改源码），版权模糊，有免费版，也有增强功能的付费版，基于Tomato前端部分的衍生，算是中文Tomato的典型代表，多拨功能强大，对机型的支持比较少；</p><h2 id="三大固件的介绍和对比"><a href="#三大固件的介绍和对比" class="headerlink" title="三大固件的介绍和对比"></a>三大固件的介绍和对比</h2><h3 id="DDWRT"><a href="#DDWRT" class="headerlink" title="DDWRT"></a>DDWRT</h3><p>界面美观,设置简单直观,易用性比较好,官方固件自带的功能是三大固件中最为丰富的,对新路由的支持也十分迅速,可支持迅速的同时,由于新代码的加入,导致 DDWRT经常出现一些bug,一些可能之前已经解决的bug,往往又会在之后的某次更新中原地满状态复活 ,着实让人喷血,最让人呕病的,是孱弱的QOS功能,DDWRT的qos功能只能说聊胜于无吧.功能的话到时还挺多,PPTP openvpn qos 上网控制 mac过滤等等功能都很使用,还能调节官方版本一般不提供的无线信号功率,当然还有中继,说中继可能有些人不敏感,说CW,很多人估计会会心一笑。DDWRT绝对是最适合新手入手的第三方固件,功能丰富,大部分机子的reset都是有效的,路由设置变砖后轻抚菊花即可涅磐重生 ,所以可以放心折腾~</p><h3 id="Tomato"><a href="#Tomato" class="headerlink" title="Tomato"></a>Tomato</h3><p>界面尚可,设置也算简单,易用性还行,流量的统计查看等功能是三个固件中做的最好的.官版Tomato是所有第三方路由固件中最为稳定的, 它的稳定源自于它的保守,官方版本的Tomato好几个版本之前就已经没有再加入什么新功能. 在这里我要补充几句,泰迪熊TT也好,国内的DWTT也好,这些都不是官方Tomato,只是根据官方原版Tomato进行修改和功能扩充的MOD版本</p><h3 id="OpenWRT"><a href="#OpenWRT" class="headerlink" title="OpenWRT"></a>OpenWRT</h3><p>Openwrt是三大固件中扩展性最好的固件,通过扩展,可以实现很多超过路由本职工作的事情,比如脱机下载,网站,论坛,qos功能也十分强大,不逊 色于Tomato的QOS,设置得当后网络表现会让人偷着乐~而且openwrt对新路由的支持也是十分迅速,个人认为是最有前途的固件,因为可以在新路由强劲CPU的支持下获得很好的性能表现,比那些老古董和洋垃圾的性能强大太多.各种功能的软件扩展包比比皆是,而且还有飞翔的天空开发的nwan多 wan和限速qos。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果想玩路由的话，推荐从DD-WRT入手最方便；</p><p>过后若想用折腾QoS，就用Tomato</p><p>要多拨用DualWan；</p><p>注重版权意识又想功能丰富的就自编译OpenWRT去集成LuCI等各种组件——自由自主，功能强大，应有尽有，这或许是很多路由器玩家的最终选择。</p><h3 id="OpenWrt的来历"><a href="#OpenWrt的来历" class="headerlink" title="OpenWrt的来历"></a><a href="https://www.luyouwang.net/tag/openwrt/" target="_blank" rel="noopener" title="查看与 OpenWrt 相关的文章">OpenWrt</a>的来历</h3><p>Cisco/Linksys 在2003 年发行的WRT54G这款无线路由器非常“经典”。</p><p>同年有好事者在 Linux Kernel Mailing List 搜索 WRT54G，发现它的IOS 是基于Linux，然而Linux 基于GPL 发布许可证，就是 GNU General Public License. 该许可证规定Cisco 应该把WRT54G 的IOS 的源代码公开。</p><p>本来Cisco 拒绝公开源代码，最后，03年三月份的时候，基于公众压力Linksys 公开了WRT54G 的源代码。</p><p>故事本来到这里就结束了，然而相反，结果越闹越大：</p><p>有了源代码以后，开发者便清楚知道代码如何控制路由器的硬件，并且掌握了一些通过增加新的代码到原有的IOS 当中去 —— 使得硬件支持更多的Feature 的技术。这些开发者组成了一个项目开发团队，不断对原来的IOS 进行更新，编码，加入新的特性…… 现在他们手上的WRT54G 无线路由器的能力已经大大超过了原来Cisco 设计的地摊货的设计思路。</p><p>不但如此，随着这两年互联网Web2.0 技术的发展，不同的开发团队之间找到了更好的协同工作平台，其规模不亚于TAC. 他们最近建立了一个DD-WRT 项目的Wiki 站点将全套文档以及代码公开发布。使用DD-WRT 项目提供的源代码，重新升级WRT54G 以后你就能够获得一台相当于$600 左右的中端无线路由器了。</p><p>当Linksys 释放 WRT54G/GS 的源码后，网上出现了很多不同版本的 Firmware 去增强原有的功能。大多数的 Firmware 都是99%使用 Linksys的源码，只有1%是加上去的，每一种 Firmware 都是针对特定的市场而设计，这样做有2个缺点，第一个是难以集合各版本Firmware的长处，第二个是这版本距离 Linux 正式发行版越来越远。</p><p>OpenWrt 选择了另一条路，它从零开始，一点一点的把各软件加入去，使其接近 Linksys 版 Firmware的功能，而OpenWrt 的成功之处是它的文件系统是可写的，开发者无需在每一次修改后重新编译，另它更像一个小型的 Linux 电脑系统，也加快了开发速度。</p><p>简化总结</p><ul><li>从前有个路由器公司，突然有一天想在Linux基础上开发固件，结果后来被捅出来了，于是要求他们公开源代码，于是他们就被迫公开了。</li><li>于是大家很兴奋，做了很多修改版出来～</li><li>有一个团队基于上述开源的代码从零开始加入各种软件, 结果一不小心做成了此行业的狡狡者, 他们给自己的产品起名叫OpenWrt</li></ul><h3 id="OpenWrt的衍生版本-PandoraBox"><a href="#OpenWrt的衍生版本-PandoraBox" class="headerlink" title="OpenWrt的衍生版本-PandoraBox"></a>OpenWrt的衍生版本-PandoraBox</h3><ul><li>PandoraBox是OpenWrt的一条分支，前身是DreamBox，由OpenWrt中国创始人之一的Lintel所带领的技术团队维护。</li><li>PandoraBox是基于OpenWrt深度定制的路由器系统，系统底层部分采用了原厂原生驱动，而非开源驱动，使其相比OpenWrt有更好的稳定性。由于OpenWrt配置及二次开发的方便性，加上Lintel根据中国网络环境对PandoraBox作出的调整及优化，受到不少互联网大咖的关注（听说还有橄榄枝）。</li><li>在中国深圳，不少公司厂家推出的“基于OpenWrt深度定制的系统”，使用的是当时开源的DreamBox源码或者泄漏的早期PandoraBox源码。</li></ul><h3 id="OpenWrt介绍"><a href="#OpenWrt介绍" class="headerlink" title="OpenWrt介绍"></a>OpenWrt介绍</h3><p>OpenWrt社区聚集了一大批纯正的Linux各个方向的死忠级专家,从而使OpenWrt具备了如下与传统NorFlash嵌入式Linux截然不同的高级特征。</p><h3 id="SquashFS与JFFS2文件系统的整合形成的overlayfs机制"><a href="#SquashFS与JFFS2文件系统的整合形成的overlayfs机制" class="headerlink" title="SquashFS与JFFS2文件系统的整合形成的overlayfs机制"></a><strong>SquashFS与JFFS2文件系统的整合形成的overlayfs机制</strong></h3><p>对用户而言,OpenWrt的整个文件系统是完全动态可读写的,而其中的固件部分是用SquashFS实施的只读压缩文件系统,而用户所有的对文件系统的增删改都是用类似“差值”的形态存储在JFFS2文件系统中的,二者用overlayfs机制黏合,对用户完全透明。</p><p>因此我们可以在文件系统中肆意发挥、随便折腾,出现任何问题则可像手机一样恢复出厂设置,并提供fail-safe模式帮助用户修复系统。</p><p>而在传统的嵌入式Linux里,固件是静态的,对系统做任何一点与可运行程序相关的变动,比如增加一个模块,删除一个应用程序,都要重新编译全部固件,并重新刷写,就好比你一个Android手机要升级微信就要重新刷机。这种反人类的传统文件系统完全阻挡了非专业爱好者进入嵌入式Linux这一领域。</p><h3 id="UCI（Unified-Configuration-Interface）"><a href="#UCI（Unified-Configuration-Interface）" class="headerlink" title="UCI（Unified Configuration Interface）"></a><strong>UCI（Unified Configuration Interface）</strong></h3><p>帮助用户在任何平台的OpenWrt上用同样的方法配置系统、网络和应用。在Boardcom的平台上,在Atheros的平台上,甚至x86的平台上,修改系统配置均为同样的命令。</p><p>而UCI的机制并不是二进制硬件虚拟层实现的,是由Linux shell脚本实现的。</p><p>这毫无疑问是一种别致的创新,比Android来的轻巧得多。OpenWrt里的Linux shell脚本用得很帅很高端,那种感觉怎么形容呢？就好像精通十八般武艺的高手有一天特别复古地拿起铅笔刀在硬盘上刻出来了系统,就是这种感觉。</p><h3 id="Opkg包管理系统与丰富的软件源"><a href="#Opkg包管理系统与丰富的软件源" class="headerlink" title="Opkg包管理系统与丰富的软件源"></a><strong>Opkg包管理系统与丰富的软件源</strong></h3><p>是一个与桌面级Linux使用的apt-get、yum等同级别的包管理系统,使用形如：opkg install xxxx-app的命令从互联网软件源中安装大约3000余种各种软件。</p><p>3000款软件,数量没法跟手机的应用市场比,但是要知道,这里头的任何一个软件都来头不小,是经过Linux社区千锤百炼的东西,一个应用折腾一个月都玩不够。</p><p>类型覆盖网络、音频、视频、编程开发、Linux系统管理等。当然,如果是专业比较偏的东西OpenWrt的软件源里还是不够完善,比如笔者团队用到的OpenCV的东西,源里就没有,就靠自己交叉编译了。</p><h3 id="Luci-WEB界面系统"><a href="#Luci-WEB界面系统" class="headerlink" title="Luci WEB界面系统"></a><strong>Luci WEB界面系统</strong></h3><p>除CLI命令行终端界面外,不同于桌面级Linux使用屏幕GUI作为交互界面,OpenWrt使用WEB界面交互。而不同于传统路由器web管理界面的是,luci是用户可订制的,安装了支持luci的软件后,WEB界面系统就中出现了新的模块,而opkg本身也web化了。这个特征让用户感觉很像手机的app store。</p><hr><p>参考连接：</p><blockquote><p><a href="http://www.chinadsl.net/forum-27-1.html" target="_blank" rel="noopener"><code>[ 宽带技术网 ]</code></a><br><a href="https://www.luyouwang.net/" target="_blank" rel="noopener"><code>[ 路由网 ]</code></a><br><a href="https://service.tp-link.com.cn/article?classtip=wireless&p0=1&p1=0" target="_blank" rel="noopener"><code>[ TP-LINK 服务支持 | 文档中心 ]</code></a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      目前路由器折腾刷机，除了采用各品牌的原厂固件外，第三方路由器固件，基本就是：Tomato、DD-WRT、OpenWRT三种。 当然还有其他一些更加小众的版本, 和很多从这三大固件衍生出来的修改版固件。这篇文章, 可以让大家对这些知识有一个相对比较全面的理解, 使你更容易入门一些。
    
    </summary>
    
    
      <category term="Hardware" scheme="https://tamsiree.com/categories/Hardware/"/>
    
      <category term="Router" scheme="https://tamsiree.com/categories/Hardware/Router/"/>
    
    
      <category term="Router" scheme="https://tamsiree.com/tags/Router/"/>
    
      <category term="Hardware" scheme="https://tamsiree.com/tags/Hardware/"/>
    
  </entry>
  
  <entry>
    <title>Unity的Canvas组件</title>
    <link href="https://tamsiree.com/Software/Unity/Unity%E7%9A%84Canvas%E7%BB%84%E4%BB%B6/"/>
    <id>https://tamsiree.com/Software/Unity/Unity%E7%9A%84Canvas%E7%BB%84%E4%BB%B6/</id>
    <published>2020-01-11T08:29:18.000Z</published>
    <updated>2020-01-13T11:45:31.115Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h1><p>Canvas组件在Unity UI系统中表示画布，任何UI元素都是基于这一张画布，通过不同的UI Widget组合，设计出一个漂亮的UI。下面我们来认识这一组件。</p><h1 id="Render-Mode"><a href="#Render-Mode" class="headerlink" title="Render Mode"></a>Render Mode</h1><p>Unity4.6 发布的New GUI 有三种渲染模式，下面一一介绍：</p><ol><li><p>ScreenSpace－Overlay 通常这种模式下，我们不需要相机，也可以讲UI Widget渲染在屏幕上面。它好像在我们的摄像机上面添了一层薄薄的膜，也就是说，在这种模式下，当场景中存在其他物体时，首先看到的将是UI上面的Widget。</p></li><li><p>ScreenSpace－Camera 通常在这种模式下，我们可以使得3D场景中的物体夹在摄像机 和 我们的UI 之间，这样我们可以将场景中的物体，比如一些特效之类的渲染在UI的上面，使得画面更炫。<br>当我们设置为Camera模式时，我们需要指定一相机，这样Unity系统会通过该相机来渲染与之相关的UI和场景中的GameObject. 另外，我们发现相机 和 我们的Canvas保存固定的相对位置，当改变Camera位置时，Canvas的坐标也跟着变化，而Canvas中的UI Widget 和 Canvas保持相对位置不变。</p></li><li><p>WorldSpace 这时UI是相对于世界空间的，和其他场景里的物体一样有世界位置、遮挡关系。此时相机为透视投影模式，UI离摄像机越远，则越小，反之越大。</p></li></ol><p>Canvas有三个组件：Canvas组件，Canvas Scaler组件，Graphic Raycaster组件</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      Canvas组件在Unity UI系统中表示画布，任何UI元素都是基于这一张画布，通过不同的UI Widget组合，设计出一个漂亮的UI。下面我们来认识这一组件。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/categories/Software/Unity/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity动态加载Prefab</title>
    <link href="https://tamsiree.com/Software/Unity/Unity%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDPrefab/"/>
    <id>https://tamsiree.com/Software/Unity/Unity%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDPrefab/</id>
    <published>2020-01-09T15:49:13.000Z</published>
    <updated>2020-01-13T11:45:24.288Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在进行一些功能开发的时候，我们常常将一些能够复用的对象制作成 <code>.prefab</code> 的预设物体，然后将预设体存放到 <code>Resources</code> 目录之下，使用时再动态加载到场景中并进行实例化。例如：子弹、特效甚至音频等，都能制作成预设体。</p><h1 id="预设动态加载到场景"><a href="#预设动态加载到场景" class="headerlink" title="预设动态加载到场景"></a>预设动态加载到场景</h1><p>一个预设体要能够通过代码控制在场景中进行显示，需要三个步骤，这里我们以动态加载怪物血条为例子分析一个常见的误区：</p><h2 id="预设体资源加载"><a href="#预设体资源加载" class="headerlink" title="预设体资源加载"></a>预设体资源加载</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//加载预设体资源</span></span><br><span class="line">GameObject bulletPrefab = (GameObject)Resources.Load(<span class="string">"Prefabs/BulletPrefab"</span>);</span><br></pre></td></tr></table></figure></div><p>通过上述操作，实现从资源目录下载入 <code>Prefabs\BulletPreFab.prefab</code> 预设体，用一个 GameObject 对象来存放，此时该预设物体并未真正载入到场景中，因为还未进行实例化操作。</p><h2 id="预设体实例化"><a href="#预设体实例化" class="headerlink" title="预设体实例化"></a>预设体实例化</h2><p>在第一步中我们已经将预设体资源加载完毕，但是为实例化的资源不会出现在场景中，所以第二不我们需要对资源进行实例化，实例化使用的是 MonoBehaviour.Instantiate 函数来完成的，其实质就是从预设体资源中克隆出一个对象，它具有与预设体完全相同的属性，并且被加载到当前场景中：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实例化预设体</span></span><br><span class="line">Instantiate(bulletPrefab);</span><br></pre></td></tr></table></figure></div><p>因为我们没有对此实例化后的对象进行任何的属性设置，所以其属性与预设体最初的属性保持一致，并且其父节点默认为当场的场景对外层。</p><h2 id="实例化对象属性设置（可选）"><a href="#实例化对象属性设置（可选）" class="headerlink" title="实例化对象属性设置（可选）"></a>实例化对象属性设置（可选）</h2><p>完成上述步骤之后，我们已经可以在场景中看到实例化之后的对象，但是通常情况下我们喜欢我们的对象之间层次感分明，而且这样也方便我们进行对象统一管理，而不是在Hierarchy中看到一大堆并排散乱对象，所以我们需要为对象设置名称已经父节点等属性。</p><p>（常见错误：对未初始化的hp_bar进行属性设置，设置之后的属性在实例化之后无法生效。这是因为我们最后在场景中显示的其实并非实例化前的资源对象，而是一个克隆对象，所以假如希望设置的属性在最后显示出来的对象中生效，我们需要对实例化之后的对象进行设置。）</p><p>正确的设置代码如下，可以看到实例化对象已成功挂在到父节点Canvas上：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">GameObject bulletPrefab = (GameObject)Resources.Load(<span class="string">"Prefabs/bulletPrefab"</span>);GameObject mUICanvas = GameObject.Find(<span class="string">"Canvas"</span>);</span><br><span class="line">bullet = Instantiate(bulletPrefab);</span><br><span class="line">bullet.transform.parent = mUICanvas.transform;</span><br></pre></td></tr></table></figure></div><p>其实前两个步骤可以在一起完成，简化后的写法如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">GameObject bullet = (GameObject)Instantiate(Resources.Load(<span class="string">"Prefabs/bulletPrefab"</span>));</span><br><span class="line">GameObject mUICanvas = GameObject.Find(<span class="string">"Canvas"</span>);</span><br><span class="line">bullet.transform.parent = mUICanvas.transform;</span><br></pre></td></tr></table></figure></div><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      在进行一些功能开发的时候，我们常常将一些能够复用的对象制作成 `.prefab` 的预设物体，然后将预设体存放到 `Resources` 目录之下，使用时再动态加载到场景中并进行实例化。例如：子弹、特效甚至音频等，都能制作成预设体。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/categories/Software/Unity/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>VisualStudioCode开发Unity</title>
    <link href="https://tamsiree.com/Software/VisualStudioCode/VisualStudioCode%E5%BC%80%E5%8F%91Unity/"/>
    <id>https://tamsiree.com/Software/VisualStudioCode/VisualStudioCode%E5%BC%80%E5%8F%91Unity/</id>
    <published>2020-01-08T15:22:15.000Z</published>
    <updated>2020-01-13T11:44:32.738Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因为我的Alienware更换成了Manjaro系统，想要在Manjaro下开发是Unity,但是运行环境还是需要折腾一番。</p><h1 id="安装Unity"><a href="#安装Unity" class="headerlink" title="安装Unity"></a>安装Unity</h1><p>在 AUR 市场搜索下载 UnityHub 程序，然后通过UnityHub安装最新版本的Unity编辑器。</p><h1 id="配置VSCode"><a href="#配置VSCode" class="headerlink" title="配置VSCode"></a>配置VSCode</h1><p>VsCode安装完成后，我们就可以在我们在unity3d中配置我们编写代码的工具了。  </p><blockquote><p>打开unity3d软件，在edit菜单栏中点击Preferences,弹出Unity Preferences面板，<br>在Unity Preferences面板中选择第二项External Tools，<br>在右侧第一项External Script Editor 中选择Browser,<br>然后选择桌面的VsCode快捷方式即可，<br>此时我们再在列表中选择我们需要的 Visual Studio Code 即可完成编辑器的配置。</p></blockquote><p><a href="https://i0.hdslb.com/bfs/article/3073f913268b5c652ae2c5a40efa328340f035a2.png@1320w_716h.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://i0.hdslb.com/bfs/article/3073f913268b5c652ae2c5a40efa328340f035a2.png@1320w_716h.webp" class="lazyload" title></a></p><h1 id="测试VSCode打开代码的响应速度"><a href="#测试VSCode打开代码的响应速度" class="headerlink" title="测试VSCode打开代码的响应速度"></a>测试VSCode打开代码的响应速度</h1><p>下面我们测试一下，我们在unity3d中创建一个脚本，然后第一次双击打开，VsCode从软件响应到打开我们要编辑的代码文件，在我的机器上仅仅用了5秒钟，比之前vs打开响应速度提升了好几个量级。虽然还谈不上绝对秒开，却也是拖拖的爽了一把。</p><p><a href="https://i0.hdslb.com/bfs/article/ab84a73fb58b489119d9b2adb2ca46055c773be6.png@1320w_698h.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://i0.hdslb.com/bfs/article/ab84a73fb58b489119d9b2adb2ca46055c773be6.png@1320w_698h.webp" class="lazyload" title></a></p><h1 id="VSCode开发Unity必备插件"><a href="#VSCode开发Unity必备插件" class="headerlink" title="VSCode开发Unity必备插件"></a>VSCode开发Unity必备插件</h1><p>前面提到，VsCode本身只提供一个最基本的框架和最基本功能，把所有需要的功能插件化，按需索取，由插件来丰富和扩展它的功能。增加的软件的灵活性和可持续扩展性，为软件的高效开发奠定的良好的基础，VSCode很像一个根据现实需要随时更换铠甲装备去迎接战斗的战士，活脱脱的现在装甲兵，机动性超强。</p><h2 id="Chinese-Simplified-Language-Pack"><a href="#Chinese-Simplified-Language-Pack" class="headerlink" title="Chinese (Simplified) Language Pack"></a>Chinese (Simplified) Language Pack</h2><p>此中文（简体）语言包为 VS Code 提供本地化界面。针对刚刚上手的英文不是很好的同学们，应该是一个不错的选择</p><h2 id="C-powered-by-OmniSharp"><a href="#C-powered-by-OmniSharp" class="headerlink" title="C# (powered by OmniSharp)"></a>C# (powered by OmniSharp)</h2><p>大家都知道最新版的Unity取消了JS(Unityscript)、Boo语言。未来将仅支持C#，所以必需安装安装C# 扩展以便让 VS Code 支持C#的开发,此款插件还附加很多其它功能的加持，效果杠杠的。亮点功能有智能感知、C＃的片段、搜索符号、引用参考。</p><h2 id="Debugger-for-Unity"><a href="#Debugger-for-Unity" class="headerlink" title="Debugger for Unity"></a>Debugger for Unity</h2><p>在实际的项目中，我们会频繁的调试程序来排查程序的错误点，安装Debugger for Unity扩展可以让我们使用VsCode代码调试Unity C＃项目。</p><p>通过在脚本中设置断点，切换到调试视图并单击绿色三角形按钮以附加到Unity，在VS Code中调试C＃脚本。在Unity中进入播放模式，断点应该在VS代码中停止。如果想修改代码，无须停止调试，直接在编辑器中修改即可。</p><p><a href="https://i0.hdslb.com/bfs/article/b27d3e8fbec666d351c13592d9a854718e39a670.png@1320w_688h.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://i0.hdslb.com/bfs/article/b27d3e8fbec666d351c13592d9a854718e39a670.png@1320w_688h.webp" class="lazyload" title></a></p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DUnity.unity-debug" target="_blank" rel="noopener">安装地址</a></p><h2 id="Unity-Tools"><a href="#Unity-Tools" class="headerlink" title="Unity Tools"></a>Unity Tools</h2><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DTobiah.unity-tools" target="_blank" rel="noopener">安装地址</a></p><h2 id="Unity-Snippets"><a href="#Unity-Snippets" class="headerlink" title="Unity Snippets"></a>Unity Snippets</h2><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DYclepticStudios.unity-snippets" target="_blank" rel="noopener">安装地址</a></p><h2 id="Unity-Code-Snippets"><a href="#Unity-Code-Snippets" class="headerlink" title="Unity Code Snippets"></a>Unity Code Snippets</h2><p>此款插件扩展为VS Code创建了Unity里的代码集合，它利用最新的代码段功能为你轻松创建Unity类和方法。特别是我们常用的MonoBehaviour类中所有方法，都可以快速创建，极大提高了程序猿写代码的速度。</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Dkleber-swf.unity-code-snippets" target="_blank" rel="noopener">安装地址</a></p><h2 id="C-XML-Documentation-Comments"><a href="#C-XML-Documentation-Comments" class="headerlink" title="C# XML Documentation Comments"></a>C# XML Documentation Comments</h2><p>快速生成代码注释头</p><h1 id="安装SDK环境"><a href="#安装SDK环境" class="headerlink" title="安装SDK环境"></a>安装SDK环境</h1><p>安装 <code>.Net SDK</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S dotnet-sdk</span><br></pre></td></tr></table></figure></div><p>安装 <code>.Net Runtime</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S dotnet-runtime</span><br></pre></td></tr></table></figure></div><p>安装 <code>msbuild</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S msbuild</span><br></pre></td></tr></table></figure></div><hr><blockquote><p>参考链接：<br><a href="https://code.visualstudio.com/docs/other/unity" target="_blank" rel="noopener">https://code.visualstudio.com/docs/other/unity</a><br><a href="https://www.bilibili.com/read/cv3620568/" target="_blank" rel="noopener">https://www.bilibili.com/read/cv3620568/</a><br><a href="https://github.com/OmniSharp/omnisharp-vscode/issues/2011" target="_blank" rel="noopener">https://github.com/OmniSharp/omnisharp-vscode/issues/2011</a></p></blockquote><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      因为我的Alienware更换成了Manjaro系统，想要在Manjaro下开发是Unity,但是运行环境还是需要折腾一番。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="VisualStudioCode" scheme="https://tamsiree.com/categories/Software/VisualStudioCode/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/tags/Unity/"/>
    
      <category term="VisualStudioCode" scheme="https://tamsiree.com/tags/VisualStudioCode/"/>
    
  </entry>
  
  <entry>
    <title>五险一金</title>
    <link href="https://tamsiree.com/Daily/%E4%BA%94%E9%99%A9%E4%B8%80%E9%87%91/%E4%BA%94%E9%99%A9%E4%B8%80%E9%87%91/"/>
    <id>https://tamsiree.com/Daily/%E4%BA%94%E9%99%A9%E4%B8%80%E9%87%91/%E4%BA%94%E9%99%A9%E4%B8%80%E9%87%91/</id>
    <published>2020-01-07T06:54:45.000Z</published>
    <updated>2020-01-14T07:01:58.430Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>身在职场，还是需要了解一些关于五险一金的基本知识，特意记录下来，供参考。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>什么是五险一金？相信很多人，只知道什么养老保险，医疗保险，公积金，有些还没认全所有的成员吧。</p><p><a href="https://pic4.zhimg.com/v2-b264a75e2ca1ca4f42f502746927692f_b.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://pic4.zhimg.com/v2-b264a75e2ca1ca4f42f502746927692f_b.png" class="lazyload"></a></p><p><strong>五险</strong>  </p><blockquote><p>1、养老保险。<br>2、医疗保险。<br>3、生育保险。<br>4、失业保险。<br>5、工伤保险。</p></blockquote><p><strong>一金</strong>  </p><blockquote><p>公积金</p></blockquote><hr><h2 id="养老保险"><a href="#养老保险" class="headerlink" title="养老保险"></a>养老保险</h2><p>养老保险就是等你退休之后才可以领到的资金啦。需要你在退休之前不断地累积交齐15年了，就可以坐等退休后享受了。</p><p>怎么交：个人缴纳当地年度职工平均工资的8%，进入个人账户，单位缴纳20%，进入统筹账户。</p><p>领多少：基础养老金+个人养老金=你所领到每月的养老金。</p><p>基础养老金=上一年度全市职工月工资的M%（M为个人缴费年限）</p><p>个人账户养老金=本人养老保险账户储存额/N(N是一个数值，可以上网进行搜索查询，不同退休年纪，N值不同。50岁退休，N为195,55岁退休，N为170，60岁退休，N为139,)</p><p>如果在不同城市缴纳，需要办理异地转移五险一金。只要去到原参保所在地社保局，开具参保缴费凭证，并转交到新的地方社保局就行啦。</p><hr><h2 id="医疗保险"><a href="#医疗保险" class="headerlink" title="医疗保险"></a>医疗保险</h2><p>注意：医保的一个重要问题，就是如果医保停止缴纳后3个月就不再享受医疗报销的待遇。需要再次缴纳后连续缴纳6个月之后，才能再次享受住院报销等待遇。</p><p>所以没什么事情千万不要停了缴纳医保的哦小伙伴们。如果长时间没有缴纳，建议自己去社保个人缴纳社保。或者直接购买一份商业医疗保险。</p><p>交多久：不同地区，有不同的要求累计年限。例如是有些地区退休前必须累计缴纳20年，退休后才能享受医保待遇。</p><p>怎么交：个人缴纳约2%+还有几块钱的大病保险+单位缴纳8%-10%</p><p>领多少：个人的全部缴纳医保+部分单位缴纳的医保，每年会返还进个人医保卡中，可以刷卡买药看门诊。</p><hr><h2 id="生育保险"><a href="#生育保险" class="headerlink" title="生育保险"></a>生育保险</h2><p>交多久：大部分城市来说，需要在所在单位缴满1年的时间，女性生小孩，或者男性同胞的妻子生小孩，都可以享受这个待遇。</p><p>怎么交：全部由企业缴纳，0.5%-1%</p><p>领多少：生小孩的相关检查费、接生费、手术费、住院费、药费都可以用。</p><p>注意：如果中断缴纳了生育保险，必须在连续缴费半年/一年，才能重新享受。</p><hr><h2 id="失业保险"><a href="#失业保险" class="headerlink" title="失业保险"></a>失业保险</h2><p>怎么交：个人缴0.2%-1%，单位缴2%、不同地方有不同规定。</p><p>交多久：失业前需要在之前所在单位累计缴纳失业保险满1年，并且是非本人意愿的失业，主动辞职就不能领取啦。在失业后60天内进行失业登记，满足这三个条件才能享受哦。</p><p>领多久：最多就2年啦。所以小伙伴还是乖乖搬砖吧。</p><p>如果被迫失业的话，需要进行的流程是：</p><p>(1)首先要先到当地的就业服务中心（人才中心）进行失业登记。</p><p>提供的资料：解除合同证明书，身份证复印件。领取登记表填写并申请按规定享受失业救济金待遇。同时办理《再就业优惠证》享受相关的政策优惠待遇。</p><p>(2)然后，提供《失业证》《再就业优惠证》、身份证、单位出具的参加医疗保险时限证明书到医保中心办理医疗保险参保手续。</p><p>(3)另外，待业期间所欠缴费用，必须到社保中心（就业中心）个人缴费窗口，提供《养老保险手册》《养老保险个人账户登记卡片》《养老保险个人账户封存单》《失业证》《再就业优惠证》等，按照手续参加办理城乡居民养老保险。</p><p>流程之复杂，只能到时候多咨询工作人员吧。</p><hr><h2 id="工伤保险"><a href="#工伤保险" class="headerlink" title="工伤保险"></a>工伤保险</h2><p>包括了：工作期间，上下班路上也算咯哦。遭受了意外伤害或者得了职业病，暂时或者永久丧失了劳动能力，甚至不幸死亡。</p><p>不过，因工死亡必须是在被救治后48小时内死亡才能算在工伤保险范围内。</p><p>怎么交：全部由单位缴纳，0.5%-2%</p><p>领多少：根据工伤不同来领取。</p><hr><h2 id="住房公积金"><a href="#住房公积金" class="headerlink" title="住房公积金"></a>住房公积金</h2><p>买房、装修、租房、离职、退休都可以领回家的。</p><p>怎么交：个人12%+单位缴纳12%,不同根据不同地区，有些地区可以有得挑选比例。基本就是你交多少，公司对应也交多少的。</p><p>领多少：个人缴的全部归我们自己所有，可以领取。</p><hr><p>不过因为不同地区的社保情况还是有挺大的区别的，本篇不代表权威性的各地五险一金的区别比较大，建议打电话咨询更为准确哦。  </p><p>根据社保法，企业必须为员工缴纳社保，如果未缴纳的企业，是要缴纳滞纳金并罚款的。可以去社保的检察部门进行投诉，或者建议换一份工作。</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      身在职场，还是需要了解一些关于五险一金的基本知识，特意记录下来，供参考。
    
    </summary>
    
    
      <category term="Daily" scheme="https://tamsiree.com/categories/Daily/"/>
    
      <category term="五险一金" scheme="https://tamsiree.com/categories/Daily/%E4%BA%94%E9%99%A9%E4%B8%80%E9%87%91/"/>
    
    
      <category term="Daily" scheme="https://tamsiree.com/tags/Daily/"/>
    
      <category term="五险一金" scheme="https://tamsiree.com/tags/%E4%BA%94%E9%99%A9%E4%B8%80%E9%87%91/"/>
    
  </entry>
  
  <entry>
    <title>DeepLearning</title>
    <link href="https://tamsiree.com/TechnicalResearch/MachineLearning/DeepLearning/DeepLearning/"/>
    <id>https://tamsiree.com/TechnicalResearch/MachineLearning/DeepLearning/DeepLearning/</id>
    <published>2020-01-06T13:53:09.000Z</published>
    <updated>2020-01-06T15:15:03.453Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>深度学习(DL, Deep Learning)是机器学习(ML, Machine Learning)领域中一个新的研究方向，它被引入机器学习使其更接近于最初的目标——人工智能(AI, Artificial Intelligence)。</p><p>深度学习是学习样本数据的内在规律和表示层次，这些学习过程中获得的信息对诸如文字，图像和声音等数据的解释有很大的帮助。它的最终目标是让机器能够像人一样具有分析学习能力，能够识别文字、图像和声音等数据。 深度学习是一个复杂的机器学习算法，在语音和图像识别方面取得的效果，远远超过先前相关技术。</p><p>深度学习在搜索技术，数据挖掘，机器学习，机器翻译，自然语言处理，多媒体学习，语音，推荐和个性化技术，以及其他相关领域都取得了很多成果。深度学习使机器模仿视听和思考等人类的活动，解决了很多复杂的模式识别难题，使得人工智能相关技术取得了很大进步。</p><p>深度学习的概念源于人工神经网络的研究。含多隐层的多层感知器就是一种深度学习结构。深度学习通过组合底层特征形成更加抽象的高层表示属性类别或特征，以发现数据的分布式特征表示。<br>深度学习的概念由Hinton等人于2006年提出。基于深度置信网络（Deep Belief Network, DBN）提出非监督贪心逐层训练算法，为解决深层结构相关的优化难题带来希望，随后提出多层自动编码器深层结构。此外LeCun等人提出的卷积神经网络也是第一个真正多层结构学习算法，它利用空间相对关系减少参数数目以提高训练性能。</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>一般来说，典型的深度学习模型是指具有“多隐层”的神经网络，这里的“多隐层”代表有三个以上隐层，深度学习模型通常有八九层甚至更多隐层。隐层多了，相应的神经元连接权、阈值等参数就会更多。这意味着深度学习模型可以自动提取很多复杂的特征。过去在设计复杂模型时会遇到训练效率低，易陷入过拟合的问题，但随着云计算、大数据时代的到来，海量的训练数据配合逐层预训练和误差逆传播微调的方法，让模型训练效率大幅提高，同时降低了过拟合的风险。 相比而言，传统的机器学习算法很难对原始数据进行处理，通常需要人为的从原始数据中提取特征。这需要系统设计者对原始的数据有相当专业的认识。在获得了比较好的特征表示后就需要设计一个对应的分类器，使用相应的特征对问题进行分类。而深度学习是一种自动提取特征的学习算法，通过多层次的非线性变换，它可以将初始的“底层”特征表示转化为“高层”特征表示后，用“简单模型”即可完成复杂的分类学习任务。</p><p><a href="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=1930683343,3820008473&fm=173&app=25&f=JPEG?w=640&h=404&s=0EAA7A231BBDD9EB5E7511CE0100E0A0" data-fancybox="group" data-caption="深度神经网络" class="fancybox"><img alt="深度神经网络" title="深度神经网络" data-src="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=1930683343,3820008473&fm=173&app=25&f=JPEG?w=640&h=404&s=0EAA7A231BBDD9EB5E7511CE0100E0A0" class="lazyload"></a></p><p>所以总结一下，深度学习和传统机器学习相比有以下三个优点：</p><p>1、高效率：例如用传统算法去评估一个棋局的优劣，可能需要专业的棋手花大量的时间去研究影响棋局的每一个因素，而且还不一定准确。而利用深度学习技术只要设计好网络框架，就不需要考虑繁琐的特征提取的过程。这也是 DeepMind公司的AlphaGo 能够强大到轻松击败专业的人类棋手的原因，它节省了大量的特征提取的时间，使得本来不可行的事情变为可行。</p><p>2、可塑性：在利用传统算法去解决一个问题时，调整模型的代价可能是把代码重新写一遍，这使得改进的成本巨大。深度学习只需要调整参数，就能改变模型。这使得它具有很强的灵活性和成长性，一个程序可以持续改进，然后达到接近完美的程度。</p><p>3、普适性：神经网络是通过学习来解决问题，可以根据问题自动建立模型，所以能够适用于各种问题，而不是局限于某个固定的问题。</p><p>经过多年的发展，深度学习理论中包含了许多不同的深度网络模型，例如经典的深层神经网络(Deep Neural Network, DNN)，深层置信网络，卷积神经网络(Convolutional Neural Network, CNN)，深层玻尔兹曼机(Deep Boltzmann Machines, DBM)，循环神经网络(Recurrent Neural Network)等，它们都属于人工神经网络。不同结构的网络适用于处理不同的数据类型，例如卷积神经网络适用于图像处理，循环神经网络适用于语音识别等。同时，这些网络还有一些不同的变种。</p><hr><h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><h2 id="TensorFlow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a>TensorFlow</h2><p>链接：<a href="https://www.tensorflow.org/" target="_blank" rel="noopener">https://www.tensorflow.org/</a></p><p>对于那些听说过深度学习但还没有太过专门深入的人来说，TensorFlow 是他们最喜欢的深度学习框架，但在这里我要澄清一些事实。</p><p>在 TensorFlow 的官网上，它被定义为「一个用于机器智能的开源软件库」，但我觉得应该这么定义：TensorFlow 是一个使用数据流图（data flow graphs）进行数值计算的开源软件库。在这里，他们没有将 TensorFlow 包含在「深度学习框架」范围内，而是和 Theano 一起被包含在「图编译器（graph compilers）」类别中。</p><p>在结束了 Udacity 的 Deep Learning 课程（<a href="https://www.udacity.com/course/deep-learning--ud730）之后，我的感觉是" target="_blank" rel="noopener">https://www.udacity.com/course/deep-learning--ud730）之后，我的感觉是</a> TensorFlow 是一个非常好的框架，但是却非常低层。使用 TensorFlow 需要编写大量的代码，你必须一遍又一遍地重新发明轮子。而且我并不是唯一一个这么想的人。Andrej Karpathy 在 Twitter 上就多次吐过槽：</p><p><a href="https://static.oschina.net/uploads/space/2017/0102/160815_2zve_2894582.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/0102/160815_2zve_2894582.png" class="lazyload"></a></p><p>推文：我希望 TensorFlow 能标准化我们的代码，但它是低层面的，所以我们在其上面的层上分道扬镳了：Slim、PrettyTensor、Keras、TFLearn …</p><p><a href="https://static.oschina.net/uploads/space/2017/0102/161013_zsdt_2894582.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/0102/161013_zsdt_2894582.png" class="lazyload"></a></p><p>比如：我们在 OpenAI 使用 TensorFlow，但我们似乎都更喜欢其它框架，我们有些人还写自定义代码。叹</p><p>几个月前，我去参加了「Google Experts Summit: TensorFlow, Machine Learning for everyone, with Sergio Guadarrama」。Sergio 是开发 TensorFlow 的一位工程师，但他在会上没有展示 TensorFlow，而是展示了一个在 TensorFlow 上工作的更高层的库 tf.contrib：<a href="https://www.tensorflow.org/tutorials/tflearn/。我的看法是：他们内部已经意识到如果要让更多人使用" target="_blank" rel="noopener">https://www.tensorflow.org/tutorials/tflearn/。我的看法是：他们内部已经意识到如果要让更多人使用</a> TensorFlow，他们就需要以更高的抽象水平在其上创建一些层，从而简化 TensorFlow 的使用。</p><p>TensorFlow 支持 Python 和 C++，也允许在 CPU 和 GPU 上的计算分布，甚至支持使用 gRPC 进行水平扩展。</p><p>总结：TensorFlow 非常好，但你必须了解它好在哪里。如果你不想什么事都自己手动去做和重新发明轮子，你可以使用更简单的库（安利一下 Keras）。</p><hr><h2 id="Theano"><a href="#Theano" class="headerlink" title="Theano"></a>Theano</h2><p>链接：<a href="http://deeplearning.net/software/theano/" target="_blank" rel="noopener">http://deeplearning.net/software/theano/</a></p><p>Theano 是最老牌和最稳定的库之一。据我所知，深度学习库的开端不是 Caffe 就是 Theano。</p><p>和 TensorFlow 类似，Theano 是一个比较低层的库。也因此它并不适合深度学习，而更适合数值计算优化。它支持自动的函数梯度计算，带有 Python 接口并集成了 Numpy，这使得它从一开始就成为了通用深度学习领域最常使用的库之一。</p><p>今天，Theano 依然效果良好，但由于它不支持多 GPU 和水平扩展，在 TensorFlow 的热潮下（它们针对同一个领域），Theano 已然开始被遗忘了。</p><hr><h2 id="Keras"><a href="#Keras" class="headerlink" title="Keras"></a>Keras</h2><p>链接：<a href="https://keras.io/" target="_blank" rel="noopener">https://keras.io/</a></p><p>「You have just found Keras.」</p><p>上面这句话是你打开文档页面时看到的第一句话。我还记得我第一次发现 Keras 的时候。那时候我正在柏林解决 Data Science Retreat 的最后一个项目，为此我努力进入了深度学习库的世界。我在起步时就已经有了足够的深度学习知识，但我没有时间自己手动编写功能，也没有时间探索和学习一个新的库（截止时间不到 2 个月，而我还有课要上）。然后我发现了 Keras。</p><p>我真的很喜欢 Keras，因为它的句法是相当明晰的，它的文档也非常好（尽管相对较新），而且它支持我已经掌握的语言 Python。它的使用非常简单轻松；我们也能很直观地了解它的指令、函数和每个模块之间的链接方式。</p><p>Keras 是一个非常高层的库，可以工作在 Theano 和 TensorFlow（可以配置）之上。另外，Keras 强调极简主义——你只需几行代码就能构建一个神经网络。在这里你可以比较一下 Keras 和 TensorFlow 实现相同功能时所需的代码：<a href="https://gist.github.com/ricgu8086/0ba44ce3aab19ec50425383a4d778b50" target="_blank" rel="noopener">https://gist.github.com/ricgu8086/0ba44ce3aab19ec50425383a4d778b50</a></p><hr><h2 id="Lasagne"><a href="#Lasagne" class="headerlink" title="Lasagne"></a>Lasagne</h2><p>链接：<a href="http://lasagne.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">http://lasagne.readthedocs.io/en/latest/index.html</a></p><p>Lasagne 是一个工作在 Theano 之上的库。它的使命是简化一点深度学习算法之下的复杂计算，同时也提供了一个更加友好的接口（也是 Python 的）。这是一个老牌的库，并且很长时间以来它都是一个扩展能力很强的工具；但在我看来，它的发展速度赶不上 Keras。它们的适用领域都差不多，但 Keras 有更好的文档、也更完整。</p><hr><h2 id="Caffe"><a href="#Caffe" class="headerlink" title="Caffe"></a>Caffe</h2><p>链接：<a href="http://caffe.berkeleyvision.org/" target="_blank" rel="noopener">http://caffe.berkeleyvision.org/</a></p><p>Caffe 不只是最老牌的框架之一，而是老牌中的老牌。</p><p>在我看来，Caffe 有非常好的特性，但也有一些小缺点。起初的时候它并不是一个通用框架，而仅仅关注计算机视觉，但它具有非常好的通用性。在我们实验室的实验中，CaffeNet 架构的训练时间在 Caffe 中比在 Keras 中（使用了 Theano 后端）少 5 倍。Caffe 的缺点是它不够灵活。如果你想给它来一点新改变，那你就需要使用 C++ 和 CUDA 编程，不过你也可以使用 Python 或 Matlab 接口进行一些小改变。</p><p>Caffe 的文档非常贫乏。你需要花大量时间检查代码才能理解它（Xavier 初始化有什么用？Glorot 是什么？）</p><p>Caffe 的最大缺点之一是它的安装。它需要解决大量的依赖包……我曾经安装过 Caffe 两次，真正痛苦至极。</p><p>但要清楚，Caffe 并不是一无是处。在投入了生产的计算机视觉系统的工具上，Caffe 是无可争议的领导者。它非常稳健非常快速。我的建议是：用 Keras 进行实验和测试，然后迁移到 Caffe 中进行生产。</p><hr><h2 id="DSSTNE"><a href="#DSSTNE" class="headerlink" title="DSSTNE"></a>DSSTNE</h2><p>链接：<a href="https://github.com/amznlabs/amazon-dsstne" target="_blank" rel="noopener">https://github.com/amznlabs/amazon-dsstne</a></p><p>DSSTNE 的发音同 Destiny，是一个酷劲十足的框架却总是被忽略。为什么？除去其他的因素不谈，原因在于这个框架不具有普适性，不是为一般常见任务所设计的。DSSTNE 框架只做一件事——推荐系统，但把这件事做到了极致。既不是为研究而设计，也不是为测试 idea 而设计（来源其官方网站的宣传语），DSSTNE 框架是为量产而设计。</p><p>我们已在 BEEVA 上做一些实验测试了，目前我已经感觉到这是一个运行非常快的工具并且能够得到非常好的运行结果（平均准确率均值——mAP 很高）。为了达到这一速度，DSSTNE 框架用 GPU 运行，这也是它的弊端之一：不同于篇中分析的其他框架或者库，这个框架不支持使用者随意在 CPU 和 GPU 中切换，而这可能会对有些尝试有用，但我们在 DSSTNE 里做这样的尝试时是不被框架所允许的。</p><p>其他的感受就是迄今为止 DSSTNE 还不是一个足够成熟的项目，而且它封装的太严密了（「black box」）。如果我们想深入了解这个框架的运行机制是什么，我们必须且只能去看它的源码，并且你需要完成很多必须完成的设置（「TODO」）才可以看到。同时，关于这个框架的在线教程不多，而能让开发者进行操作尝试的指导就更少了。我的意见是再等 4 个月看看 DSSTNE 的最新版本。不能不说 DSSTEN 的确是一个很有意思的项目但还需要一点成长空间。</p><p>还想说明一点，这个框架对编程能力没有要求。DSSTNE 框架通过其终端的命令行来执行相关操作。</p><p>到目前为止，很多我知道也很流行的框架和库我还没有用过，我不能给出更多具体的细节。</p><hr><h2 id="Torch"><a href="#Torch" class="headerlink" title="Torch"></a>Torch</h2><p>链接：<a href="http://torch.ch/" target="_blank" rel="noopener">http://torch.ch/</a></p><p>在这个世界上每天仍有很多战争，但是一个优秀的「勇士」（西班牙语「Guerrero」）必须熟知哪些战争是需要去参加作战的，哪些是可以选择不参与的。</p><p>Torch 是一个很著名的框架，因巨头 Facebook 的人工智能研究所用的框架是 Torch，并且在被谷歌收购之前 DeepMind 也是用的 Torch（收购之后 DeepMind 转向了 TensorFlow）。Torch 的编程语言是 Lua，这就是我刚才所谈的「战争」的具体所指。在目前深度学习编程语言绝大部分以 Python 实现为主的大趋势下，一个以 Lua 为编程语言的框架的最大劣势莫过于此。我从未用使用过这个语言，如果我想使用 Torch 这个工具，毫无疑问我需要先学习 Lua 语言然后才能使用 Torch。这固然是一个合理的过程，但就我个人情况来说，我偏向于用 Python、Matlab 或者 C++的实现。</p><hr><h2 id="MXNet"><a href="#MXNet" class="headerlink" title="MXNet"></a>MXNet</h2><p>链接：<a href="https://github.com/dmlc/mxnet" target="_blank" rel="noopener">https://github.com/dmlc/mxnet</a></p><p>mxnet 是一个支持大多数编程语言的框架之一，包括 Python，R，C++，Julia 等。但我觉得使用 R 语言的开发者会特别偏爱 mxnet，因为至今为止还是 Python 以不可置疑的态势称霸深度学习语言的（Python 与 R 的对决，猜猜我会站哪边？:-p）</p><p>老实说，在此之前我并没有很关注 mxnet。但是当亚马逊 AWS 宣布选择 mxnet 作为其深度学习 AMI 的库时触发我开始关注 mxnet。我必须去了解一下。后来我获知亚马逊把 mxnet 列为其深度学习的参考库并宣称其巨大的横向扩展能力。我感觉到这里面有一些新的改变发生而且我必须深入了解。这也是为什么我们 2017 的 BEEVA 的技术测试名单里有 mnxet 的原因。</p><p>我对多 GPU 的扩展能力有点疑虑并且我很原意去了解这样实验的更多细节，但目前我还是对 mxnet 持怀疑态度。</p><hr><h2 id="DL4J"><a href="#DL4J" class="headerlink" title="DL4J"></a>DL4J</h2><p>链接：<a href="https://deeplearning4j.org/" target="_blank" rel="noopener">https://deeplearning4j.org/</a></p><p>我接触这一库，是因为它的 documentation。当时我正在寻找受限玻尔兹曼机、自编码器，在 DL4J 中找到了这两个 documentation。里面的文件很清楚，有理论，有代码案例。我必须得说 DL4J 的 documentation 简直是艺术品，其他库在记录代码的时候需要向它学习。</p><p>DL4J 背后的公司 Skymind 意识到，虽然在深度学习圈内 Python 是老大，但大部分程序员起自 Java，所以需要找到一个解决方案。DL4J 兼容 JVM，也适用 Java、Clojure 和 Scala，随着 Scala 的起起落落，它也被很多有潜力的创业公司使用，所以我还会继续紧追这个库。</p><p>此外，Skymind 的 twitter 账户非常活跃，不断公开最新的科学论文、案例和教程，及其推荐大家关注。</p><hr><h2 id="Cognitive-Toolkit"><a href="#Cognitive-Toolkit" class="headerlink" title="Cognitive Toolkit"></a>Cognitive Toolkit</h2><p>链接：<a href="https://github.com/Microsoft/CNTK" target="_blank" rel="noopener">https://github.com/Microsoft/CNTK</a></p><p>认知工具包（Cognitive Toolkit）之前被大家所知的缩略是 CNTK，但是最近又重命名回归到 Cognitive Toolkit，很可能是想沾最近微软认知服务（Microsoft Cognitive services）的光。在公开的基准测试上的表现来看，这个工具似乎很强劲，支持纵向和横向的推移。</p><p>目前为止，Cognitive Toolkit 似乎不是很流行。我并没有读到很多关于使用这个库的博客、在线实验案例或者在 Kaggle 里的相关评论。但是对我来说，一个背靠微软研究的框架特别强调自己的推移能力让我觉得有些奇怪，毕竟微软研究团队可是在语音识别上打破世界纪录并逼近人类水准。</p><p>我在查看他们项目百科的一个范例的时候了解到 Cognitive Toolkit 在 Python 上的语法和 Keras 是非常相类似的（Cognitive Toolkit 也支持 C++），这不禁让我在想（并不是确认）Keras 才是正确的方式。</p><hr><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>我的结论是：如果你想进入这一领域，你应该首先学习 Python。尽管这一领域还支持其它很多语言，但 Python 是应用范围最广而且最简单的一个。但是为什么要选择 Python 呢——毕竟 Python 速度这么慢？因为大多数的库都使用的是符号式语言（symbolic language）方法而非命令式语言（imperative language）方法。解释一下也就是说：不是一条接一条地执行你的指令，而是根据你给出的所有指令创建一个计算图（computing graph）。这个图被内部优化和编译成可执行的 C++ 代码。这样你就能同时利用上两个世界的最优之处：Python 带来的开发速度和 C++ 带来的执行速度。</p><p>人们对深度学习的兴趣越来越大了，但人们并不愿意等待算法训练所需的大量计算时间（而且我说的是 GPU，想都不要想只使用 CPU）。这也是多 GPU 支持、多机器上的水平扩展甚至定制硬件最近开始得势的原因。</p><p>深度学习领域非常活跃、易变。</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      深度学习(DL, Deep Learning)是机器学习(ML, Machine Learning)领域中一个新的研究方向，它被引入机器学习使其更接近于最初的目标——人工智能(AI, Artificial Intelligence)。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="MachineLearning" scheme="https://tamsiree.com/categories/TechnicalResearch/MachineLearning/"/>
    
      <category term="DeepLearning" scheme="https://tamsiree.com/categories/TechnicalResearch/MachineLearning/DeepLearning/"/>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="MachineLearning" scheme="https://tamsiree.com/tags/MachineLearning/"/>
    
      <category term="DeepLearning" scheme="https://tamsiree.com/tags/DeepLearning/"/>
    
  </entry>
  
  <entry>
    <title>Alienware更换电池</title>
    <link href="https://tamsiree.com/Computer/Alienware/Alienware%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0/"/>
    <id>https://tamsiree.com/Computer/Alienware/Alienware%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0/</id>
    <published>2020-01-05T08:21:46.000Z</published>
    <updated>2020-01-06T14:50:40.477Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>入手 <code>Alienware</code> 也有快四个年头了，当初是在官网买的 <code>Alienware 15R2</code> 版本，用到现在整体性能还不错，就是因为在之前的公司经常需要自带电脑，而且常常在一些猝不及防的时候就有紧急工作安排，所以导致电池的寿命持续变短，今天正好腾出空来更换一下电池。</p><hr><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><table><thead><tr><th align="center">一把小尖嘴钳</th><th align="center">一把小号十字起</th><th align="center">一把小号一字起</th></tr></thead><tbody><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/dsauiojxl3448723251823788294.jpg" data-fancybox="group" data-caption="一把小尖嘴钳" class="fancybox"><img height="200" width="300" alt="一把小尖嘴钳" title="一把小尖嘴钳" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/dsauiojxl3448723251823788294.jpg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2FMTQ2MjQzOTYyMTAyMC04OTMzOTQ1MTk.jpeg" data-fancybox="group" data-caption="一把小号十字起" class="fancybox"><img height="200" width="300" alt="一把小号十字起" title="一把小号十字起" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2FMTQ2MjQzOTYyMTAyMC04OTMzOTQ1MTk.jpeg" class="lazyload"></a></td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2FqzKsyNQVL_1409936118.jpeg" data-fancybox="group" data-caption="一把小号一字起" class="fancybox"><img height="200" width="300" alt="一把小号一字起" title="一把小号一字起" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2FqzKsyNQVL_1409936118.jpeg" class="lazyload"></a></td></tr></tbody></table><hr><h2 id="动手"><a href="#动手" class="headerlink" title="动手"></a>动手</h2><table><thead><tr><th align="center">图解</th></tr></thead><tbody><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1619218cyzy5ymeimwllif.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1619218cyzy5ymeimwllif.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161921a8abz2u94tugell4.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161921a8abz2u94tugell4.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161922z3d3zdt7v4dd4utb.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161922z3d3zdt7v4dd4utb.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162138zvtirbvotycmrxrl.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162138zvtirbvotycmrxrl.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162139epw5n5cmxe24cfm8.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162139epw5n5cmxe24cfm8.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1621400v971l0l0lelln0v.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1621400v971l0l0lelln0v.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162213fg4fozu4uf5fwf54.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162213fg4fozu4uf5fwf54.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1622141ll135vlc3ml9mzb.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1622141ll135vlc3ml9mzb.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162215k1rykzlhpnklplto.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162215k1rykzlhpnklplto.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1622432qzbmdpg2dpfp1zp.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1622432qzbmdpg2dpfp1zp.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/16224421ob8s5sy21t1f2x.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/16224421ob8s5sy21t1f2x.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162244zc9zesjffccsss9u.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162244zc9zesjffccsss9u.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162319ljl7exjeegvzl7l5.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162319ljl7exjeegvzl7l5.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162320moifs6ir9fy9456r.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162320moifs6ir9fy9456r.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/16232121jsmnhd0wtthaer.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/16232121jsmnhd0wtthaer.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1624339kd2de89d9i2kgen.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1624339kd2de89d9i2kgen.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162434gk70omebg7aaoo0j.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162434gk70omebg7aaoo0j.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162435lcqsmafu2qfscogu.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162435lcqsmafu2qfscogu.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162509llziu9b7i9uucrdz.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162509llziu9b7i9uucrdz.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/16251014nnao6k49844mao.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/16251014nnao6k49844mao.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1625109wlxszoyeleiyntw.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1625109wlxszoyeleiyntw.jpg" class="lazyload"></a></td></tr><tr><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/16251192lycceqycs1oyon.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/16251192lycceqycs1oyon.jpg" class="lazyload"></a></td></tr></tbody></table><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      入手Alienware也有快四个年头了，当初是在官网买的Alienware 15R2版本，用到现在整体性能还不错，就是因为在之前的公司经常需要自带电脑，而且常常在一些猝不及防的时候就有紧急工作安排，所以导致电池的寿命持续变短，今天正好腾出空来更换一下电池。
    
    </summary>
    
    
      <category term="Computer" scheme="https://tamsiree.com/categories/Computer/"/>
    
      <category term="Alienware" scheme="https://tamsiree.com/categories/Computer/Alienware/"/>
    
    
      <category term="Computer" scheme="https://tamsiree.com/tags/Computer/"/>
    
      <category term="Alienware" scheme="https://tamsiree.com/tags/Alienware/"/>
    
  </entry>
  
  <entry>
    <title>个人所得税</title>
    <link href="https://tamsiree.com/Daily/%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E/%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E/"/>
    <id>https://tamsiree.com/Daily/%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E/%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E/</id>
    <published>2020-01-04T06:37:00.000Z</published>
    <updated>2020-01-14T07:01:29.283Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>工作的这些时间，对于自己工资的个人所得税部分还是有些雾里探花，所以找些资料详细的了解一下。</p><hr><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="居民工资薪金所得"><a href="#居民工资薪金所得" class="headerlink" title="居民工资薪金所得"></a>居民工资薪金所得</h2><p>（1）有住所居民个人正常工资薪金所得</p><p>正常工资薪金所得是指个人因任职或者受雇而取得的工资、薪金、奖金、年终加薪、劳动分红、津贴、补贴以及与任职或者受雇有关的其他所得。</p><p>计算公式为：</p><blockquote><p>应预扣预缴税额=（累计预扣预缴应纳税所得额×税率－速算扣除数）－累计减免税额－累计已预扣预缴税额</p><p>累计预缴应纳税所得额=累计收入－累计免税收入－累计减除费用－累计专项扣除－累计专项附加扣除－累计依法确定的其它扣除</p></blockquote><p>（2）无住所居民个人正常工资薪金所得</p><p>无住所居民个人在境内居住累计满183天的年度连续不满六年（含无住所居民个人为高级管理人员人员）</p><blockquote><p>应纳税所得额=当月境内外工资薪金总额×〔1－（当月境外支付工资薪金数额÷当月境内外工资薪金总额）×（当月工资薪金所属工作期间境外工作天数÷当月工资薪金所属工作期间公历天数）〕－减除费用</p><p>应纳税额=应纳税所得额×适用税率－速算扣除数</p></blockquote><p>无住所居民个人在境内居住累计满183天的年度连续满六年（含无住所居民个人为高级管理人员人员）</p><blockquote><p>应纳税所得额=当月境内外工资薪金总额－减除费用</p><p>应纳税额=应纳税所得额×税率－速算扣除数</p></blockquote><p>无住所个人此前六年的任一年在中国境内累计居住天数不满183天或者单次离境超过30天。该纳税年度来源于中国境外且由境外单位或者个人支付的所得，免予缴纳个人所得税。重新计算连续居住年限。</p><hr><h2 id="居民个人全年一次性奖金收入"><a href="#居民个人全年一次性奖金收入" class="headerlink" title="居民个人全年一次性奖金收入"></a>居民个人全年一次性奖金收入</h2><p>居民个人取得全年一次性奖金，符合《国家税务总局关于调整个人取得全年一次性奖金等计算征收个人所得税方法问题的通知》（国税发〔2005〕9号）规定的，在2021年12月31日前，不并入当年综合所得，以全年一次性奖金收入除以12个月得到的数额，按照本通知所附按月换算后的综合所得税率表（以下简称月度税率表），确定适用税率和速算扣除数，单独计算纳税。计算公式为：</p><blockquote><p>应纳税额=全年一次性奖金×适用税率－速算扣除数</p></blockquote><p>居民个人取得全年一次性奖金，也可以选择并入当年综合所得计算纳税。</p><p>自2022年1月1日起，居民个人取得全年一次性奖金，应并入当年综合所得计算缴纳个人所得税。</p><hr><h2 id="居民个人劳务报酬所得"><a href="#居民个人劳务报酬所得" class="headerlink" title="居民个人劳务报酬所得"></a>居民个人劳务报酬所得</h2><p>（1）劳务报酬所得－保险营销员、证券经纪人</p><p>保险营销员、证券经纪人取得的佣金收入，属于劳务报酬所得，以不含增值税的收入减除20%的费用后的余额为收入额，收入额减去展业成本以及附加税费后，并入当年综合所得，计算缴纳个人所得税。保险营销员、证券经纪人展业成本按照收入额的25%计算。</p><p>（2）劳务报酬所得－一般劳务、其他劳务</p><p>劳务报酬所得以每次收入减除费用后的余额为收入额；每次收入不超过四千元的，费用按八百元计算；每次收入四千元以上的，费用按百分之二十计算。计算公式为：</p><blockquote><p>应预扣预缴税额=预扣预缴应纳税所得额×预扣率－速算扣除数</p></blockquote><hr><h2 id="居民个人稿酬所得"><a href="#居民个人稿酬所得" class="headerlink" title="居民个人稿酬所得"></a>居民个人稿酬所得</h2><p>稿酬所得，是指个人因其作品以图书、报刊等形式出版、发表而取得的所得。以收入减除费用后的余额为收入额，收入额减按百分之七十计算。每次收入不超过四千元的，减除费用按八百元计算；每次收入四千元以上的，减除费用按百分之二十计算。</p><p>计算公式为：</p><blockquote><p>应预扣预缴税额=预扣预缴应纳税所得额×适用税率（20%）</p></blockquote><hr><h2 id="居民个人特许权使用费所得"><a href="#居民个人特许权使用费所得" class="headerlink" title="居民个人特许权使用费所得"></a>居民个人特许权使用费所得</h2><p>特许权使用费所得以每次收入减除费用后的余额为收入额。每次收入不超过四千元的，减除费用按八百元计算；每次收入四千元以上的，减除费用按百分之二十计算。</p><p>计算公式为：</p><blockquote><p>应预扣预缴税额=预扣预缴应纳税所得额×适用税率（20%）</p></blockquote><hr><h2 id="非居民纳税人工资薪金所得"><a href="#非居民纳税人工资薪金所得" class="headerlink" title="非居民纳税人工资薪金所得"></a>非居民纳税人工资薪金所得</h2><p>（1）非高层管理人员应纳税额：</p><p>1）非居民个人境内居住时间累积不超过90天</p><blockquote><p>应纳税所得额=当月境内外工资薪金总额×（当月境内支付工资薪金数额÷当月境内外工资薪金总额）×（当月工资薪金所属工作期间境内工作天数÷当月工资薪金所属工作期间公历天数）－减除费用</p><p>应纳税额=应纳税所得额×适用税率－速算扣除数</p></blockquote><p>2）非居民个人境内居住时间累积超过90天不满183天</p><blockquote><p>应纳税所得额=当月境内外工资薪金总额×（当月工资薪金所属工作期间境内工作天数÷当月工资薪金所属工作期间公历天数）－减除费用</p><p>应纳税额=应纳税所得额×适用税率－速算扣除数</p></blockquote><p>（2）高级管理人员人员应纳税额：</p><p>1）高级管理人员人员在境内居住时间累积不超过90天</p><p>应纳税所得额=当月境内外工资薪金总额×（当月境内支付工资÷当月境内外支付工资总额）－减除费用</p><blockquote><p>应纳税额=应纳税所得额×税率－速算扣除数</p></blockquote><p>2）高级管理人员人员在境内居住时间累积超过90天不满183天</p><p>应纳税所得额=当月境内外工资薪金总额×〔1－（当月境外支付工资薪金数额÷当月境内外工资薪金总额）×（当月工资薪金所属工作期间境外工作天数÷当月工资薪金所属工作期间公历天数）〕－减除费用</p><blockquote><p>应纳税额=应纳税所得额×适用税率－速算扣除数</p></blockquote><p>注：非居民个人在一个纳税年度内税款扣缴方法保持不变，达到居民个人条件时，应当告知扣缴义务人基础信息变化情况，年度终了后按照居民个人有关规定办理汇算清缴。</p><hr><h2 id="非居民人员数月奖金所得"><a href="#非居民人员数月奖金所得" class="headerlink" title="非居民人员数月奖金所得"></a>非居民人员数月奖金所得</h2><p>非居民个人一个月内取得数月奖金，单独计算当月收入额，不与当月其他工资薪金合并，按6个月分摊计税，不减除费用，在一个公历年度内，对每一个非居民个人，该计税办法只允许适用一次。</p><p>计算公式为：</p><blockquote><p>应纳税额=〔（数月奖金收入额÷6）×税率－速算扣除数〕×6</p></blockquote><hr><h2 id="非居民个人股权激励所得"><a href="#非居民个人股权激励所得" class="headerlink" title="非居民个人股权激励所得"></a>非居民个人股权激励所得</h2><p>非居民个人一个月内取得股权激励所得，单独计算当月收入额，不与当月其他工资薪金合并，按6个月分摊计税（一个公历年度内的股权激励所得应合并计算），不减除费用。</p><p>计算公式为：</p><blockquote><p>应纳税额=〔（本公历年度内股权激励所得合计额）÷6）×税率－速算扣除数〕×6－本公历年度内股权激励所得已纳税额</p></blockquote><hr><h2 id="非居民个人劳务报酬所得"><a href="#非居民个人劳务报酬所得" class="headerlink" title="非居民个人劳务报酬所得"></a>非居民个人劳务报酬所得</h2><p>劳务报酬所得以每次收入减除百分之二十的费用后的余额为应纳税所得额，适用个人所得税税率表三计算应纳税额。</p><p>计算公式为：</p><blockquote><p>应纳税所得额=每次收入×（1－20%）</p><p>应纳税额＝应纳税所得额×适用税率－速算扣除数</p></blockquote><p>其中适用税率和速算扣除数：按照综合所得适用的个人所得税税率按月换算</p><hr><h2 id="非居民个人稿酬所得"><a href="#非居民个人稿酬所得" class="headerlink" title="非居民个人稿酬所得"></a>非居民个人稿酬所得</h2><p>稿酬所得以每次收入减除费用后的余额为收入额，收入额减按百分之七十计算为应纳税所得额。适用个人所得税税率表三计算应纳税额。</p><p>计算公式为：</p><blockquote><p>应纳税所得额=每次收入×（1－20%）×70%</p><p>应纳税额＝应纳税所得额×适用税率－速算扣除数</p></blockquote><p>其中适用税率和速算扣除数：按照综合所得适用的个人所得税税率按月换算</p><hr><h2 id="非居民个人特许权使用费所得"><a href="#非居民个人特许权使用费所得" class="headerlink" title="非居民个人特许权使用费所得"></a>非居民个人特许权使用费所得</h2><p>特许权使用费所得以收入减除百分之二十的费用后的余额为应纳税所得额，适用个人所得税税率表三计算应纳税额。</p><p>计算公式为：</p><blockquote><p>应纳税所得额=每次收入×（1－20%）</p><p>应纳税额＝应纳税所得额×适用税率－速算扣除数</p></blockquote><p>其中适用税率和速算扣除数：按照综合所得适用的个人所得税税率按月换算</p><hr><h2 id="解除劳动合同一次性补偿金"><a href="#解除劳动合同一次性补偿金" class="headerlink" title="解除劳动合同一次性补偿金"></a>解除劳动合同一次性补偿金</h2><p>个人与用人单位解除劳动关系取得一次性补偿收入（包括用人单位发放的经济补偿金、生活补助费和其他补助费），在当地上年职工平均工资3倍数额以内的部分，免征个人所得税；超过3倍数额的部分，不并入当年综合所得，单独适用综合所得税率表，计算纳税。</p><p>计算公式为：</p><blockquote><p>应纳税所得额=一次性补偿收入－当地社平工资×3</p><p>应纳税额=应纳税所得额×适用税率－速算扣除数</p></blockquote><hr><h2 id="个人股权激励收入"><a href="#个人股权激励收入" class="headerlink" title="个人股权激励收入"></a>个人股权激励收入</h2><p>居民个人取得股票期权、股票增值权、限制性股票、股权奖励等股权激励（以下简称股权激励），符合《财政部国家税务总局关于个人股票期权所得征收个人所得税问题的通知》（财税〔2005〕35号）、《财政部国家税务总局关于股票增值权所得和限制性股票所得征收个人所得税有关问题的通知》（财税〔2009〕5号）、《财政部国家税务总局关于将国家自主创新示范区有关税收试点政策推广到全国范围实施的通知》（财税〔2015〕116号）第四条、《财政部国家税务总局关于完善股权激励和技术入股有关所得税政策的通知》（财税〔2016〕101号）第四条第（一）项规定的相关条件的，在2021年12月31日前，不并入当年综合所得，全额单独适用综合所得税率表，计算纳税。</p><p>计算公式为：</p><blockquote><p>应纳税额＝应纳税所得额×适用税率－速算扣除数</p><p>股票期权应纳税所得额=（行权股票的每股市场价－员工取得该股票期权支付的每股施权价）×股票数量</p><p>股票增值权应纳税所得额=（行权日股票价格－授权日股票价格）×行权股票份数</p><p>限制性股票应纳税所得额=（股票登记日股票市价+本批次解禁股票当日市价）÷2×本批次解禁股票份数－被激励对象实际支付的资金总额×（本批次解禁股票份数÷被激励对象获取的限制性股票总份数）</p></blockquote><hr><h2 id="年金领取"><a href="#年金领取" class="headerlink" title="年金领取"></a>年金领取</h2><p>个人达到国家规定的退休年龄，领取的企业年金、职业年金，符合《财政部人力资源社会保障部国家税务总局关于企业年金职业年金个人所得税有关问题的通知》（财税〔2013〕103号）规定的，不并入综合所得，全额单独计算应纳税额。按月领取的，适用月度税率表计算纳税；按季领取的，平均分摊计入各月，按每月领取额适用月度税率表计算纳税；按年领取的，适用综合所得税率表计算纳税。</p><p>计算公式为：</p><blockquote><p>应纳税额=年金领取收入额×适用税率－速算扣除数</p></blockquote><hr><h2 id="提前退休一次性补贴"><a href="#提前退休一次性补贴" class="headerlink" title="提前退休一次性补贴"></a>提前退休一次性补贴</h2><p>个人办理提前退休手续而取得的一次性补贴收入，应按照办理提前退休手续至法定离退休年龄之间实际年度数平均分摊，确定适用税率和速算扣除数，单独适用综合所得税率表，计算纳税。</p><p>计算公式为：</p><blockquote><p>应纳税额={〔（一次性补贴收入÷办理提前退休手续至法定退休年龄的实际年度数）－费用扣除标准〕×适用税率－速算扣除数} × 办理提前退休手续至法定退休年龄的实际年度数</p></blockquote><hr><h2 id="利息、股息、红利所得"><a href="#利息、股息、红利所得" class="headerlink" title="利息、股息、红利所得"></a>利息、股息、红利所得</h2><p>利息、股息、红利所得，以支付利息、股息、红利时取得的收入为一次。所得适用比例税率，税率为百分之二十。、</p><p>计算公式为：</p><blockquote><p>应纳税额=利息、股息、红利所得收入×适用税率</p></blockquote><hr><h2 id="财产租赁所得"><a href="#财产租赁所得" class="headerlink" title="财产租赁所得"></a>财产租赁所得</h2><p>财产租赁所得，是指个人出租不动产、机器设备、车船以及其他财产取得的所得。财产租赁所得适用比例税率，税率为百分之二十，以一个月内取得的收入为一次。每次收入不超过四千元的，减除费用八百元；四千元以上的，减除百分之二十的费用，其余额为应纳税所得额，乘以百分之二十的比例税率计算税款。</p><p>计算公式为：</p><p>（1）每次收入不超过4000元：</p><blockquote><p>应纳税额=〔每次（月）收入额－准予减除费用800元〕×20%</p></blockquote><p>（2）每次（月）收入在4000元以上：</p><blockquote><p>应纳税额=每次（月）收入额×（1－20%）×20%</p></blockquote><hr><h2 id="财产转让所得（含股权转让所得）"><a href="#财产转让所得（含股权转让所得）" class="headerlink" title="财产转让所得（含股权转让所得）"></a>财产转让所得（含股权转让所得）</h2><p>财产转让所得，是指个人转让有价证券、股权、合伙企业中的财产份额、不动产、机器设备、车船以及其他财产取得的所得。财产转让所得适用比例税率，税率为百分之二十，按照一次转让财产的收入额减除财产原值和合理费用后的余额计算纳税。</p><p>计算公式：</p><blockquote><p>应纳税所得额=收入总额－财产原值－合理费用<br>应纳税额=应纳税所得额×适用税率</p></blockquote><hr><h2 id="偶然所得"><a href="#偶然所得" class="headerlink" title="偶然所得"></a>偶然所得</h2><p>偶然所得，是指个人得奖、中奖、中彩以及其他偶然性质的所得。适用比例税率，税率为百分之二十，以每次取得该项收入为一次，以每次收入额为应纳税所得额。</p><p>计算公式为：</p><blockquote><p>应纳税所得额=每次收入额</p><p>应纳税额=应纳税所得额×适用税率</p></blockquote><hr><h2 id="限售股转让所得"><a href="#限售股转让所得" class="headerlink" title="限售股转让所得"></a>限售股转让所得</h2><p>限售股转让所得适用比例税率，税率为百分之二十。按照一次限售股转让收入减除股票原值和合理税费后的余额计算纳税。限售股原值，是指限售股买入时的买入价及按照规定缴纳的有关费用。合理税费，是指转让限售股过程中发生的印花税、佣金、过户费等与交易相关的税费。</p><p>计算公式为：</p><blockquote><p>应纳税所得额＝限售股转让收入－限售股原值－合理税费</p><p>应纳税额=应纳税所得额×适用税率</p></blockquote><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      工作的这些时间，对于自己工资的个人所得税部分还是有些雾里探花，所以找些资料详细的了解一下。
    
    </summary>
    
    
      <category term="Daily" scheme="https://tamsiree.com/categories/Daily/"/>
    
      <category term="个人所得税" scheme="https://tamsiree.com/categories/Daily/%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E/"/>
    
    
      <category term="Daily" scheme="https://tamsiree.com/tags/Daily/"/>
    
      <category term="个人所得税" scheme="https://tamsiree.com/tags/%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E/"/>
    
  </entry>
  
  <entry>
    <title>ARK</title>
    <link href="https://tamsiree.com/Game/GamePlatform/Steam/ARK/"/>
    <id>https://tamsiree.com/Game/GamePlatform/Steam/ARK/</id>
    <published>2020-01-03T11:35:36.000Z</published>
    <updated>2020-01-13T12:10:24.584Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>ARK全名是ARK: Survival Evolved，中文名为 <code>方舟：生存进化</code>，是由独立工作室Wildcard旗下由虚幻引擎4（Unreal Engine 4）打造的生存类开放世界游戏。  </p><h1 id="背景描述"><a href="#背景描述" class="headerlink" title="背景描述"></a>背景描述</h1><p>游戏故事主要讲述，一群人醒来便出现在神秘海滩，为了生存而探索远古开放世界，玩家需要通过合作/竞技来获取生活必需品。人类需要打猎、收获、研究技术，甚至要根据动态天气变化（酷热白昼、冰冷夜晚）搭建住处，而危险的远古动物会随机出现威胁人类生存。<br>此外玩家们还需要通过策略战术来驯服游戏中出现的各种恐龙和其他原始生物，并利用他们来跨越海陆空甚至进入地下世界。玩家们可以利用本作中深入的角色扮演系统来充分打造自己角色的长处，并获得各种物品和宠物等。玩家们还要同数以百计的其他玩家部落展开生存竞争，并最终发现“方舟(ARK)”的真正目的。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="生物"><a href="#生物" class="headerlink" title="生物"></a>生物</h2><p>根据动物的食性给予被击晕的动物不同类型的食物便可以将其驯服，部分无法驯服；被驯服的动物可以更改其攻击方式，比如主动攻击，被动防御之类，还可以为玩家取一部分物品，以及供玩家骑乘。部分地区必须依靠骑乘能力不同的动物才能到达。</p><p>野生的动物、恐龙无论大小、食性，其攻击性都主要分为三类  </p><table><thead><tr><th align="center">生物类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">软弱型</td><td align="center">不主动攻击，被打了也不还手而是逃跑</td></tr><tr><td align="center">老实型</td><td align="center">不主动攻击，但是被打了会还击</td></tr><tr><td align="center">欺软怕硬型</td><td align="center">一般为肉食类，看见玩家或者比自己弱小的生物就会冲过去捕食。<br>如果在攻击不敌的情况下也会逃跑，然后趁之不备又会跑回来继续反击。</td></tr></tbody></table><h3 id="鱼类"><a href="#鱼类" class="headerlink" title="鱼类"></a>鱼类</h3><table><thead><tr><th align="center">名称</th><th align="center">英文名</th><th align="center">食性</th><th align="center">生物类型</th><th align="center">能否驯服</th><th align="center">活动范围</th><th align="center">图例</th></tr></thead><tbody><tr><td align="center">腔棘鱼</td><td align="center">Coelacanth</td><td align="center">杂食</td><td align="center">软弱型</td><td align="center">无法驯服</td><td align="center">海水/淡水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9213b07eca8065381945dc0191dda144ad348270.jpg" data-fancybox="group" data-caption="腔棘鱼" class="fancybox"><img height="60" width="80" alt="腔棘鱼" title="腔棘鱼" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9213b07eca8065381945dc0191dda144ad348270.jpg" class="lazyload"></a></td></tr><tr><td align="center">食人鱼</td><td align="center">Piranha</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">无法驯服</td><td align="center">淡水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/7c1ed21b0ef41bd52f0f90e657da81cb39db3d47.jpg" data-fancybox="group" data-caption="食人鱼" class="fancybox"><img height="60" width="80" alt="食人鱼" title="食人鱼" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/7c1ed21b0ef41bd52f0f90e657da81cb39db3d47.jpg" class="lazyload"></a></td></tr><tr><td align="center">鮟鱇鱼</td><td align="center">Anglerfish</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/ae51f3deb48f8c54bf9792903c292df5e1fe7fcc.jpg" data-fancybox="group" data-caption="鮟鱇鱼" class="fancybox"><img height="60" width="80" alt="鮟鱇鱼" title="鮟鱇鱼" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/ae51f3deb48f8c54bf9792903c292df5e1fe7fcc.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨齿鲨</td><td align="center">Megalodon</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d043ad4bd11373f0198a178da20f4bfbfbed046e.jpg" data-fancybox="group" data-caption="巨齿鲨" class="fancybox"><img height="60" width="80" alt="巨齿鲨" title="巨齿鲨" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d043ad4bd11373f0198a178da20f4bfbfbed046e.jpg" class="lazyload"></a></td></tr><tr><td align="center">蝠鲼</td><td align="center">Manta</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/79f0f736afc3793199f0d396edc4b74542a911f0.jpg" data-fancybox="group" data-caption="蝠鲼" class="fancybox"><img height="60" width="80" alt="蝠鲼" title="蝠鲼" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/79f0f736afc3793199f0d396edc4b74542a911f0.jpg" class="lazyload"></a></td></tr><tr><td align="center">邓氏鱼</td><td align="center">Dunkleosteus</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f7246b600c33874455209cc3570fd9f9d62aa0ac.jpg" data-fancybox="group" data-caption="邓氏鱼" class="fancybox"><img height="60" width="80" alt="邓氏鱼" title="邓氏鱼" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f7246b600c33874455209cc3570fd9f9d62aa0ac.jpg" class="lazyload"></a></td></tr><tr><td align="center">利兹鱼</td><td align="center">Leedsilhthys</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">不可驯服</td><td align="center">深海</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d6ca7bcb0a46f21f68700c74f1246b600c33ae55.jpg" data-fancybox="group" data-caption="利兹鱼" class="fancybox"><img height="60" width="80" alt="利兹鱼" title="利兹鱼" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d6ca7bcb0a46f21f68700c74f1246b600c33ae55.jpg" class="lazyload"></a></td></tr><tr><td align="center">电鳗</td><td align="center">Eleltrophorlis</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/cf1b9d16fdfaaf514d9e7fc48b5494eef01f7a48.jpg" data-fancybox="group" data-caption="电鳗" class="fancybox"><img height="60" width="80" alt="电鳗" title="电鳗" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/cf1b9d16fdfaaf514d9e7fc48b5494eef01f7a48.jpg" class="lazyload"></a></td></tr><tr><td align="center">剑齿鲑</td><td align="center">Sabertooth Salmon</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">不可驯服</td><td align="center">淡水/海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/503d269759ee3d6d4611a8ae44166d224e4adefb.jpg" data-fancybox="group" data-caption="剑齿鲑" class="fancybox"><img height="60" width="80" alt="剑齿鲑" title="剑齿鲑" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/503d269759ee3d6d4611a8ae44166d224e4adefb.jpg" class="lazyload"></a></td></tr></tbody></table><h3 id="鸟类"><a href="#鸟类" class="headerlink" title="鸟类"></a>鸟类</h3><table><thead><tr><th align="center">名称</th><th align="center">英文名</th><th align="center">食性</th><th align="center">生物类型</th><th align="center">能否驯服</th><th align="center">活动范围</th><th align="center">图例</th></tr></thead><tbody><tr><td align="center">渡渡鸟</td><td align="center">Dodo</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/91529822720e0cf3392a37e90c46f21fbf09aac7.jpg" data-fancybox="group" data-caption="渡渡鸟" class="fancybox"><img height="60" width="80" alt="渡渡鸟" title="渡渡鸟" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/91529822720e0cf3392a37e90c46f21fbf09aac7.jpg" class="lazyload"></a></td></tr><tr><td align="center">阿根廷巨鹰</td><td align="center">Argentavis</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">雪原/高山</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/91529822720e0cf3397337e90c46f21fbe09aa18.jpg" data-fancybox="group" data-caption="阿根廷巨鹰" class="fancybox"><img height="60" width="80" alt="阿根廷巨鹰" title="阿根廷巨鹰" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/91529822720e0cf3397337e90c46f21fbe09aa18.jpg" class="lazyload"></a></td></tr><tr><td align="center">黄昏鸟</td><td align="center">Hesperornis</td><td align="center">肉食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/622762d0f703918f72065e75573d269758eec4be.jpg" data-fancybox="group" data-caption="黄昏鸟" class="fancybox"><img height="60" width="80" alt="黄昏鸟" title="黄昏鸟" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/622762d0f703918f72065e75573d269758eec4be.jpg" class="lazyload"></a></td></tr><tr><td align="center">远古企鹅</td><td align="center">Kairuku</td><td align="center">肉食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">冰川</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d439b6003af33a87189153a5c05c10385243b595.jpg" data-fancybox="group" data-caption="远古企鹅" class="fancybox"><img height="60" width="80" alt="远古企鹅" title="远古企鹅" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d439b6003af33a87189153a5c05c10385243b595.jpg" class="lazyload"></a></td></tr><tr><td align="center">鱼鸟</td><td align="center">Ichthyornis</td><td align="center">肉食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/ac4bd11373f08202b6ac59cd4dfbfbedab641b02.jpg" data-fancybox="group" data-caption="鱼鸟" class="fancybox"><img height="60" width="80" alt="鱼鸟" title="鱼鸟" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/ac4bd11373f08202b6ac59cd4dfbfbedab641b02.jpg" class="lazyload"></a></td></tr><tr><td align="center">始祖鸟</td><td align="center">Archaeopteryx</td><td align="center">肉食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d01373f082025aaf63a669c8fcedab64034f1a18.jpg" data-fancybox="group" data-caption="始祖鸟" class="fancybox"><img height="60" width="80" alt="始祖鸟" title="始祖鸟" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d01373f082025aaf63a669c8fcedab64034f1a18.jpg" class="lazyload"></a></td></tr><tr><td align="center">骇鸟</td><td align="center">Terror Bird</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">平原/高山/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0dd7912397dda14476aad20db4b7d0a20df486ea.jpg" data-fancybox="group" data-caption="骇鸟" class="fancybox"><img height="60" width="80" alt="骇鸟" title="骇鸟" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0dd7912397dda14476aad20db4b7d0a20df486ea.jpg" class="lazyload"></a></td></tr><tr><td align="center">伪齿鸟</td><td align="center">Pelagornis</td><td align="center">肉食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">海岸/海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/77094b36acaf2edd3e2daf2f8a1001e93801931c.jpg" data-fancybox="group" data-caption="伪齿鸟" class="fancybox"><img height="60" width="80" alt="伪齿鸟" title="伪齿鸟" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/77094b36acaf2edd3e2daf2f8a1001e93801931c.jpg" class="lazyload"></a></td></tr></tbody></table><h3 id="哺乳动物和似哺乳类爬行动物"><a href="#哺乳动物和似哺乳类爬行动物" class="headerlink" title="哺乳动物和似哺乳类爬行动物"></a>哺乳动物和似哺乳类爬行动物</h3><table><thead><tr><th align="center">名称</th><th align="center">英文名</th><th align="center">食性</th><th align="center">生物类型</th><th align="center">能否驯服</th><th align="center">活动范围</th><th align="center">图例</th></tr></thead><tbody><tr><td align="center">渐新象</td><td align="center">Phiomia</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/b2de9c82d158ccbf3b20cc281fd8bc3eb1354107.jpg" data-fancybox="group" data-caption="渐新象" class="fancybox"><img height="60" width="80" alt="渐新象" title="渐新象" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/b2de9c82d158ccbf3b20cc281fd8bc3eb1354107.jpg" class="lazyload"></a></td></tr><tr><td align="center">剑齿虎</td><td align="center">Sabertooth</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海岸/森林/雪原/高山</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/dc54564e9258d109e091d0a0d758ccbf6c814db5.jpg" data-fancybox="group" data-caption="剑齿虎" class="fancybox"><img height="60" width="80" alt="剑齿虎" title="剑齿虎" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/dc54564e9258d109e091d0a0d758ccbf6c814db5.jpg" class="lazyload"></a></td></tr><tr><td align="center">鬣齿兽</td><td align="center">hyaenodon</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海岸/森林<br>雪原/高山/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8601a18b87d6277f3b236d1f2f381f30e924fce0.jpg" data-fancybox="group" data-caption="鬣齿兽" class="fancybox"><img height="60" width="80" alt="鬣齿兽" title="鬣齿兽" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8601a18b87d6277f3b236d1f2f381f30e924fce0.jpg" class="lazyload"></a></td></tr><tr><td align="center">猛犸象</td><td align="center">Mammoth</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/高山/雪原/冰川</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d788d43f8794a4c2025a9e3908f41bd5ad6e39a2.jpg" data-fancybox="group" data-caption="猛犸象" class="fancybox"><img height="60" width="80" alt="猛犸象" title="猛犸象" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d788d43f8794a4c2025a9e3908f41bd5ad6e39a2.jpg" class="lazyload"></a></td></tr><tr><td align="center">大角鹿</td><td align="center">Megaloceros</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/64380cd7912397dd8ba1965b5f82b2b7d1a28790.jpg" data-fancybox="group" data-caption="大角鹿" class="fancybox"><img height="60" width="80" alt="大角鹿" title="大角鹿" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/64380cd7912397dd8ba1965b5f82b2b7d1a28790.jpg" class="lazyload"></a></td></tr><tr><td align="center">中猴</td><td align="center">Mesopithecus</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a08b87d6277f9e2f3861fa691930e924b899f37f.jpg" data-fancybox="group" data-caption="中猴" class="fancybox"><img height="60" width="80" alt="中猴" title="中猴" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a08b87d6277f9e2f3861fa691930e924b899f37f.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨猿</td><td align="center">Gigantopithecus</td><td align="center">草食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d788d43f8794a4c282541e4a08f41bd5ad6e3958.jpg" data-fancybox="group" data-caption="巨猿" class="fancybox"><img height="60" width="80" alt="巨猿" title="巨猿" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d788d43f8794a4c282541e4a08f41bd5ad6e3958.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨犀</td><td align="center">Paracer</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">沼泽/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/622762d0f703918ff5dfdbab573d269759eec441.jpg" data-fancybox="group" data-caption="巨犀" class="fancybox"><img height="60" width="80" alt="巨犀" title="巨犀" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/622762d0f703918ff5dfdbab573d269759eec441.jpg" class="lazyload"></a></td></tr><tr><td align="center">星尾兽</td><td align="center">Doedicurus</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">平原/森林/高山/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/838ba61ea8d3fd1f8fca485b364e251f94ca5f94.jpg" data-fancybox="group" data-caption="星尾兽" class="fancybox"><img height="60" width="80" alt="星尾兽" title="星尾兽" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/838ba61ea8d3fd1f8fca485b364e251f94ca5f94.jpg" class="lazyload"></a></td></tr><tr><td align="center">披毛犀</td><td align="center">WoollyRhino</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">平原/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/50da81cb39dbb6fd3e2cb8010e24ab18972b37a5.jpg" data-fancybox="group" data-caption="披毛犀" class="fancybox"><img height="60" width="80" alt="披毛犀" title="披毛犀" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/50da81cb39dbb6fd3e2cb8010e24ab18972b37a5.jpg" class="lazyload"></a></td></tr><tr><td align="center">爪蝠</td><td align="center">Bats</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">矿洞</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0b55b319ebc4b745e839ce04c9fc1e178a821576.jpg" data-fancybox="group" data-caption="爪蝠" class="fancybox"><img height="60" width="80" alt="爪蝠" title="爪蝠" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0b55b319ebc4b745e839ce04c9fc1e178a821576.jpg" class="lazyload"></a></td></tr><tr><td align="center">恐狼</td><td align="center">Direwolf</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a1ec08fa513d26971cefda3c53fbb2fb4316d897.jpg" data-fancybox="group" data-caption="恐狼" class="fancybox"><img height="60" width="80" alt="恐狼" title="恐狼" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a1ec08fa513d26971cefda3c53fbb2fb4316d897.jpg" class="lazyload"></a></td></tr><tr><td align="center">水龙兽</td><td align="center">Lystrosaurus</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">森林/平原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/bba1cd11728b4710dad59673c5cec3fdfd032392.jpg" data-fancybox="group" data-caption="水龙兽" class="fancybox"><img height="60" width="80" alt="水龙兽" title="水龙兽" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/bba1cd11728b4710dad59673c5cec3fdfd032392.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨河狸</td><td align="center">Castoroides</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/淡水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/faedab64034f78f09f99274c7f310a55b2191cfa.jpg" data-fancybox="group" data-caption="巨河狸" class="fancybox"><img height="60" width="80" alt="巨河狸" title="巨河狸" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/faedab64034f78f09f99274c7f310a55b2191cfa.jpg" class="lazyload"></a></td></tr><tr><td align="center">大地懒</td><td align="center">Megatherilm</td><td align="center">肉食</td><td align="center">对昆虫是欺软怕硬型<br>对其他生物是老实型</td><td align="center">可以驯服</td><td align="center">森林/平原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/78310a55b319ebc4c53ac7268426cffc1f1716ca.jpg" data-fancybox="group" data-caption="大地懒" class="fancybox"><img height="60" width="80" alt="大地懒" title="大地懒" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/78310a55b319ebc4c53ac7268426cffc1f1716ca.jpg" class="lazyload"></a></td></tr><tr><td align="center">袋狮</td><td align="center">Thylacoleo</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">森林/平原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/71cf3bc79f3df8dc9c25d4b6ca11728b471028f8.jpg" data-fancybox="group" data-caption="袋狮" class="fancybox"><img height="60" width="80" alt="袋狮" title="袋狮" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/71cf3bc79f3df8dc9c25d4b6ca11728b471028f8.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨型短面袋鼠</td><td align="center">Prolopiodon</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">森林/平原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/3801213fb80e7bec80b5934e292eb9389b506b36.jpg" data-fancybox="group" data-caption="巨型短面袋鼠" class="fancybox"><img height="60" width="80" alt="巨型短面袋鼠" title="巨型短面袋鼠" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/3801213fb80e7bec80b5934e292eb9389b506b36.jpg" class="lazyload"></a></td></tr><tr><td align="center">恐熊</td><td align="center">Direbear</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海岸/平原/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/80cb39dbb6fd5266adc35133ac18972bd4073628.jpg" data-fancybox="group" data-caption="恐熊" class="fancybox"><img height="60" width="80" alt="恐熊" title="恐熊" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/80cb39dbb6fd5266adc35133ac18972bd4073628.jpg" class="lazyload"></a></td></tr><tr><td align="center">砂犷兽</td><td align="center">Chalicotherium</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">森林/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1c950a7b02087bf434b8bc3df5d3572c10dfcf8a.jpg" data-fancybox="group" data-caption="砂犷兽" class="fancybox"><img height="60" width="80" alt="砂犷兽" title="砂犷兽" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1c950a7b02087bf434b8bc3df5d3572c10dfcf8a.jpg" class="lazyload"></a></td></tr><tr><td align="center">龙王鲸</td><td align="center">Basilosaurus</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0eb30f2442a7d933cb7d0ea7aa4bd11372f00108.jpg" data-fancybox="group" data-caption="龙王鲸" class="fancybox"><img height="60" width="80" alt="龙王鲸" title="龙王鲸" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0eb30f2442a7d933cb7d0ea7aa4bd11372f00108.jpg" class="lazyload"></a></td></tr><tr><td align="center">麝足兽</td><td align="center">Moschops</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">森林/海岸/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8435e5dde71190efd46f460bc91b9d16fcfa604a.jpg" data-fancybox="group" data-caption="麝足兽" class="fancybox"><img height="60" width="80" alt="麝足兽" title="麝足兽" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8435e5dde71190efd46f460bc91b9d16fcfa604a.jpg" class="lazyload"></a></td></tr><tr><td align="center">兽头兽</td><td align="center">Purlovia</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">森林/海岸/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a044ad345982b2b75747ed1036adcbef77099b0e.jpg" data-fancybox="group" data-caption="兽头兽" class="fancybox"><img height="60" width="80" alt="兽头兽" title="兽头兽" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a044ad345982b2b75747ed1036adcbef77099b0e.jpg" class="lazyload"></a></td></tr></tbody></table><h3 id="节肢动物、昆虫和无脊柱动物"><a href="#节肢动物、昆虫和无脊柱动物" class="headerlink" title="节肢动物、昆虫和无脊柱动物"></a>节肢动物、昆虫和无脊柱动物</h3><table><thead><tr><th align="center">名称</th><th align="center">英文名</th><th align="center">食性</th><th align="center">生物类型</th><th align="center">能否驯服</th><th align="center">活动范围</th><th align="center">图例</th></tr></thead><tbody><tr><td align="center">巨蝎</td><td align="center">Scorpions</td><td align="center">腐食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">森林/平原<br>海岸/高山/矿洞</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9213b07eca8065381adedd0191dda144ad3482ef.jpg" data-fancybox="group" data-caption="巨蝎" class="fancybox"><img height="60" width="80" alt="巨蝎" title="巨蝎" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9213b07eca8065381adedd0191dda144ad3482ef.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨型蜘蛛</td><td align="center">Spiders</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">无法驯服<br>特殊活动期间可以驯服</td><td align="center">矿洞</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2934349b033b5bb5cc9e5eec30d3d539b600bc52.jpg" data-fancybox="group" data-caption="巨型蜘蛛" class="fancybox"><img height="60" width="80" alt="巨型蜘蛛" title="巨型蜘蛛" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2934349b033b5bb5cc9e5eec30d3d539b600bc52.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨型雄蚁<br>巨型兵蚁</td><td align="center">Titanomyrma</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">无法驯服</td><td align="center">海岸/平原<br>森林/沼泽/红树林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9922720e0cf3d7ca084ac217f41fbe096b63a917.jpg" data-fancybox="group" data-caption="巨型雄蚁" class="fancybox"><img height="60" width="80" alt="巨型雄蚁" title="巨型雄蚁" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9922720e0cf3d7ca084ac217f41fbe096b63a917.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨脉蜻蜓</td><td align="center">Dragonfly</td><td align="center">肉食</td><td align="center">带血生物玩家<br>是欺软怕硬型<br>平常是软弱型</td><td align="center">无法驯服</td><td align="center">海岸/平原<br>森林/沼泽/红树林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/267f9e2f07082838565b2375be99a9014c08f179.jpg" data-fancybox="group" data-caption="巨脉蜻蜓" class="fancybox"><img height="60" width="80" alt="巨脉蜻蜓" title="巨脉蜻蜓" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/267f9e2f07082838565b2375be99a9014c08f179.jpg" class="lazyload"></a></td></tr><tr><td align="center">三叶虫</td><td align="center">Trilobite</td><td align="center">杂食</td><td align="center">软弱型</td><td align="center">无法驯服</td><td align="center">海岸/海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f9dcd100baa1cd1186dc8c41bf12c8fcc3ce2d6d.jpg" data-fancybox="group" data-caption="三叶虫" class="fancybox"><img height="60" width="80" alt="三叶虫" title="三叶虫" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f9dcd100baa1cd1186dc8c41bf12c8fcc3ce2d6d.jpg" class="lazyload"></a></td></tr><tr><td align="center">远古水母</td><td align="center">Cnidaria</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">无法驯服</td><td align="center">深海</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8435e5dde71190ef6d51ce60c81b9d16fcfa60e2.jpg" data-fancybox="group" data-caption="远古水母" class="fancybox"><img height="60" width="80" alt="远古水母" title="远古水母" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8435e5dde71190ef6d51ce60c81b9d16fcfa60e2.jpg" class="lazyload"></a></td></tr><tr><td align="center">古马陆</td><td align="center">Arthuopllera</td><td align="center">腐食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">沼泽</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/342ac65c10385343149edf9e9513b07eca808838.jpg" data-fancybox="group" data-caption="古马陆" class="fancybox"><img height="60" width="80" alt="古马陆" title="古马陆" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/342ac65c10385343149edf9e9513b07eca808838.jpg" class="lazyload"></a></td></tr><tr><td align="center">广翅鲎</td><td align="center">Eurypterid</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">无法驯服</td><td align="center">深海</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f703738da977391226bbdddefe198618377ae2f4.jpg" data-fancybox="group" data-caption="广翅鲎" class="fancybox"><img height="60" width="80" alt="广翅鲎" title="广翅鲎" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f703738da977391226bbdddefe198618377ae2f4.jpg" class="lazyload"></a></td></tr><tr><td align="center">远古蜣螂</td><td align="center">DlingBeetle</td><td align="center">粪食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">矿洞</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/eac4b74543a9822646926e988c82b9014a90eb3a.jpg" data-fancybox="group" data-caption="远古蜣螂" class="fancybox"><img height="60" width="80" alt="远古蜣螂" title="远古蜣螂" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/eac4b74543a9822646926e988c82b9014a90eb3a.jpg" class="lazyload"></a></td></tr><tr><td align="center">托斯特巨鱿</td><td align="center">Toth<br>The Giant Squid</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">深海</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/b8014a90f603738d29b5b99db51bb051f919ec96.jpg" data-fancybox="group" data-caption="托斯特巨鱿" class="fancybox"><img height="60" width="80" alt="托斯特巨鱿" title="托斯特巨鱿" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/b8014a90f603738d29b5b99db51bb051f919ec96.jpg" class="lazyload"></a></td></tr><tr><td align="center">玛瑙螺</td><td align="center">Achatina</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">沼泽/海岸/森林/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/503d269759ee3d6df270357445166d224e4adedf.jpg" data-fancybox="group" data-caption="玛瑙螺" class="fancybox"><img height="60" width="80" alt="玛瑙螺" title="玛瑙螺" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/503d269759ee3d6df270357445166d224e4adedf.jpg" class="lazyload"></a></td></tr><tr><td align="center">菊石</td><td align="center">Ammonite</td><td align="center">肉食</td><td align="center">软弱型</td><td align="center">无法驯服</td><td align="center">海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/fd039245d688d43ff6e8f3d57a1ed21b0ef43b57.jpg" data-fancybox="group" data-caption="菊石" class="fancybox"><img height="60" width="80" alt="菊石" title="菊石" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/fd039245d688d43ff6e8f3d57a1ed21b0ef43b57.jpg" class="lazyload"></a></td></tr><tr><td align="center">水蛭</td><td align="center">Leech</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">无法驯服</td><td align="center">沼泽</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9c16fdfaaf51f3de1ff253b093eef01f3b2979a6.jpg" data-fancybox="group" data-caption="水蛭" class="fancybox"><img height="60" width="80" alt="水蛭" title="水蛭" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9c16fdfaaf51f3de1ff253b093eef01f3b2979a6.jpg" class="lazyload"></a></td></tr></tbody></table><h3 id="爬行动物和两栖动物"><a href="#爬行动物和两栖动物" class="headerlink" title="爬行动物和两栖动物"></a>爬行动物和两栖动物</h3><table><thead><tr><th align="center">名称</th><th align="center">英文名</th><th align="center">食性</th><th align="center">生物类型</th><th align="center">能否驯服</th><th align="center">活动范围</th><th align="center">图例</th></tr></thead><tbody><tr><td align="center">双脊龙</td><td align="center">Dilophosauru</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林<br>矿洞/雪原/冰川</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/7aec54e736d12f2e8b8dd17249c2d56285356813.jpg" data-fancybox="group" data-caption="双脊龙" class="fancybox"><img height="60" width="80" alt="双脊龙" title="双脊龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/7aec54e736d12f2e8b8dd17249c2d56285356813.jpg" class="lazyload"></a></td></tr><tr><td align="center">迅猛龙</td><td align="center">Raptor</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">平原/森林<br>高山/雪原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/42166d224f4a20a4aac841d596529822730ed0ca.jpg" data-fancybox="group" data-caption="迅猛龙" class="fancybox"><img height="60" width="80" alt="迅猛龙" title="迅猛龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/42166d224f4a20a4aac841d596529822730ed0ca.jpg" class="lazyload"></a></td></tr><tr><td align="center">淡水碳龟</td><td align="center">Carbonemy</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林<br>淡水/海水/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d1160924ab18972b47bf72d8e0cd7b899e510a1e.jpg" data-fancybox="group" data-caption="淡水碳龟" class="fancybox"><img height="60" width="80" alt="淡水碳龟" title="淡水碳龟" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d1160924ab18972b47bf72d8e0cd7b899e510a1e.jpg" class="lazyload"></a></td></tr><tr><td align="center">甲龙</td><td align="center">Ankylosaurus</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">雪原/高山</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/6159252dd42a283437d649195db5c9ea15cebfab.jpg" data-fancybox="group" data-caption="甲龙" class="fancybox"><img height="60" width="80" alt="甲龙" title="甲龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/6159252dd42a283437d649195db5c9ea15cebfab.jpg" class="lazyload"></a></td></tr><tr><td align="center">副栉龙</td><td align="center">Parasaur</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d788d43f8794a4c2fc82983908f41bd5ad6e397a.jpg" data-fancybox="group" data-caption="副栉龙" class="fancybox"><img height="60" width="80" alt="副栉龙" title="副栉龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d788d43f8794a4c2fc82983908f41bd5ad6e397a.jpg" class="lazyload"></a></td></tr><tr><td align="center">禽龙</td><td align="center">Iglianodon</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8644ebf81a4c510f95f52ce86659252dd42aa50b.jpg" data-fancybox="group" data-caption="禽龙" class="fancybox"><img height="60" width="80" alt="禽龙" title="禽龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8644ebf81a4c510f95f52ce86659252dd42aa50b.jpg" class="lazyload"></a></td></tr><tr><td align="center">三角龙</td><td align="center">Triceratops</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/83025aafa40f4bfb59cee146054f78f0f7361881.jpg" data-fancybox="group" data-caption="三角龙" class="fancybox"><img height="60" width="80" alt="三角龙" title="三角龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/83025aafa40f4bfb59cee146054f78f0f7361881.jpg" class="lazyload"></a></td></tr><tr><td align="center">剑龙</td><td align="center">Stegosaurus</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">平原/森林<br>高山/海岸/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/4a36acaf2edda3cc5666c53207e93901213f9225.jpg" data-fancybox="group" data-caption="剑龙" class="fancybox"><img height="60" width="80" alt="剑龙" title="剑龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/4a36acaf2edda3cc5666c53207e93901213f9225.jpg" class="lazyload"></a></td></tr><tr><td align="center">无齿翼龙</td><td align="center">Pteranodon</td><td align="center">肉食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">海岸/平原/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d53f8794a4c27d1e5ad54ad61dd5ad6eddc43834.jpg" data-fancybox="group" data-caption="无齿翼龙" class="fancybox"><img height="60" width="80" alt="无齿翼龙" title="无齿翼龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d53f8794a4c27d1e5ad54ad61dd5ad6eddc43834.jpg" class="lazyload"></a></td></tr><tr><td align="center">帝王鳄</td><td align="center">Crocodile</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">海岸/淡水/海水/沼泽</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/5243fbf2b2119313a9208ca263380cd791238d44.jpg" data-fancybox="group" data-caption="帝王鳄" class="fancybox"><img height="60" width="80" alt="帝王鳄" title="帝王鳄" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/5243fbf2b2119313a9208ca263380cd791238d44.jpg" class="lazyload"></a></td></tr><tr><td align="center">野猪鳄</td><td align="center">Kaprosuchus</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">沼泽</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2934349b033b5bb5152c61ac30d3d539b700bced.jpg" data-fancybox="group" data-caption="野猪鳄" class="fancybox"><img height="60" width="80" alt="野猪鳄" title="野猪鳄" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2934349b033b5bb5152c61ac30d3d539b700bced.jpg" class="lazyload"></a></td></tr><tr><td align="center">食肉牛龙</td><td align="center">Carnotaurus</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">平原/森林/高山<br>海岸/雪原/红树林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a8ec8a13632762d02c17daada6ec08fa513dc6f3.jpg" data-fancybox="group" data-caption="食肉牛龙" class="fancybox"><img height="60" width="80" alt="食肉牛龙" title="食肉牛龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a8ec8a13632762d02c17daada6ec08fa513dc6f3.jpg" class="lazyload"></a></td></tr><tr><td align="center">泰坦巨蟒</td><td align="center">Titanoboa</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">无法驯服</td><td align="center">矿洞/沼泽</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f703738da97739120e7cf573fe198618367ae24e.jpg" data-fancybox="group" data-caption="泰坦巨蟒" class="fancybox"><img height="60" width="80" alt="泰坦巨蟒" title="泰坦巨蟒" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/f703738da97739120e7cf573fe198618367ae24e.jpg" class="lazyload"></a></td></tr><tr><td align="center">雷龙</td><td align="center">Brontosaurs</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/平原<br>森林/雪原/红树林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a71ea8d3fd1f4134f1ae786c231f95cad1c85e02.jpg" data-fancybox="group" data-caption="雷龙" class="fancybox"><img height="60" width="80" alt="雷龙" title="雷龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a71ea8d3fd1f4134f1ae786c231f95cad1c85e02.jpg" class="lazyload"></a></td></tr><tr><td align="center">梁龙</td><td align="center">Diplodollis</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">海岸/平原<br>森林/红树林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8b82b9014a90f60372b857b53f12b31bb051ed3c.jpg" data-fancybox="group" data-caption="梁龙" class="fancybox"><img height="60" width="80" alt="梁龙" title="梁龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8b82b9014a90f60372b857b53f12b31bb051ed3c.jpg" class="lazyload"></a></td></tr><tr><td align="center">霸王龙</td><td align="center">Rex</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">平原/森林/高山/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d62a6059252dd42a2a277eb9053b5bb5c9eab8f1.jpg" data-fancybox="group" data-caption="霸王龙" class="fancybox"><img height="60" width="80" alt="霸王龙" title="霸王龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d62a6059252dd42a2a277eb9053b5bb5c9eab8f1.jpg" class="lazyload"></a></td></tr><tr><td align="center">棘背龙</td><td align="center">Spinosaur</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">淡水/沼泽</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2934349b033b5bb5c2a650ec30d3d539b600bcaa.jpg" data-fancybox="group" data-caption="棘背龙" class="fancybox"><img height="60" width="80" alt="棘背龙" title="棘背龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2934349b033b5bb5c2a650ec30d3d539b600bcaa.jpg" class="lazyload"></a></td></tr><tr><td align="center">异齿龙</td><td align="center">Dimetrodon</td><td align="center">肉食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">沼泽</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/314e251f95cad1c88c984198793e6709c93d5169.jpg" data-fancybox="group" data-caption="异齿龙" class="fancybox"><img height="60" width="80" alt="异齿龙" title="异齿龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/314e251f95cad1c88c984198793e6709c93d5169.jpg" class="lazyload"></a></td></tr><tr><td align="center">肿头龙</td><td align="center">Pachy</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/77c6a7efce1b9d164fs757900f5deb48f8c546425.png" data-fancybox="group" data-caption="肿头龙" class="fancybox"><img height="60" width="80" alt="肿头龙" title="肿头龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/77c6a7efce1b9d164fs757900f5deb48f8c546425.png" class="lazyload"></a></td></tr><tr><td align="center">双型齿翼龙</td><td align="center">Dimorphodon</td><td align="center">肉食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">平原/森林/海岸/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9922720e0cf3d7ca090cc317f41fbe096a63a9dd.jpg" data-fancybox="group" data-caption="双型齿翼龙" class="fancybox"><img height="60" width="80" alt="双型齿翼龙" title="双型齿翼龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9922720e0cf3d7ca090cc317f41fbe096a63a9dd.jpg" class="lazyload"></a></td></tr><tr><td align="center">风神翼龙</td><td align="center">Quetzal</td><td align="center">肉食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">高山/平原/雪原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a6efce1b9d16fdfa1a752f78fb28f8c5494ee7bb2.png" data-fancybox="group" data-caption="风神翼龙" class="fancybox"><img height="60" width="80" alt="风神翼龙" title="风神翼龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/a6efce1b9d16fdfa1a752f78fb28f8c5494ee7bb2.png" class="lazyload"></a></td></tr><tr><td align="center">鱼龙</td><td align="center">Ichthy</td><td align="center">肉食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">海水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d52a2834349b033b6543d8bb13ce36d3d439bd83.jpg" data-fancybox="group" data-caption="鱼龙" class="fancybox"><img height="60" width="80" alt="鱼龙" title="鱼龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d52a2834349b033b6543d8bb13ce36d3d439bd83.jpg" class="lazyload"></a></td></tr><tr><td align="center">蛇颈龙</td><td align="center">Plesiosaur</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">深海</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/b90e7bec54e736d11a5cff1a9d504fc2d5626950.jpg" data-fancybox="group" data-caption="蛇颈龙" class="fancybox"><img height="60" width="80" alt="蛇颈龙" title="蛇颈龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/b90e7bec54e736d11a5cff1a9d504fc2d5626950.jpg" class="lazyload"></a></td></tr><tr><td align="center">滑齿龙</td><td align="center">Lioplelirodon</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">深海</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0df3d7ca7bcb0a464ee63f866d63f6246a60af4d.jpg" data-fancybox="group" data-caption="滑齿龙" class="fancybox"><img height="60" width="80" alt="滑齿龙" title="滑齿龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/0df3d7ca7bcb0a464ee63f866d63f6246a60af4d.jpg" class="lazyload"></a></td></tr><tr><td align="center">沧龙</td><td align="center">Mosasaurus</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">深海</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/c995d143ad4bd113677451535cafa40f4bfb0511.jpg" data-fancybox="group" data-caption="沧龙" class="fancybox"><img height="60" width="80" alt="沧龙" title="沧龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/c995d143ad4bd113677451535cafa40f4bfb0511.jpg" class="lazyload"></a></td></tr><tr><td align="center">魔鬼蛙</td><td align="center">Beelzebufo</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">沼泽</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/cf1b9d16fdfaaf516c7b5fde8a5494eef01f7a33.jpg" data-fancybox="group" data-caption="魔鬼蛙" class="fancybox"><img height="60" width="80" alt="魔鬼蛙" title="魔鬼蛙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/cf1b9d16fdfaaf516c7b5fde8a5494eef01f7a33.jpg" class="lazyload"></a></td></tr><tr><td align="center">古巨蜥</td><td align="center">Megalania</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">洞穴/海岸/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/3b87e950352ac65cfd1d3f54fcf2b21193138af9.jpg" data-fancybox="group" data-caption="古巨蜥" class="fancybox"><img height="60" width="80" alt="古巨蜥" title="古巨蜥" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/3b87e950352ac65cfd1d3f54fcf2b21193138af9.jpg" class="lazyload"></a></td></tr><tr><td align="center">双坚颌龙</td><td align="center">Pegomastax</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">森林/平原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/aa18972bd40735fa9ee11f0698510fb30f24087f.jpg" data-fancybox="group" data-caption="双坚颌龙" class="fancybox"><img height="60" width="80" alt="双坚颌龙" title="双坚颌龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/aa18972bd40735fa9ee11f0698510fb30f24087f.jpg" class="lazyload"></a></td></tr><tr><td align="center">厚鼻龙</td><td align="center">Pachyrhinosaurus</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海岸/平原/森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8435e5dde71190ef6b88c060c81b9d16fdfa6019.jpg" data-fancybox="group" data-caption="厚鼻龙" class="fancybox"><img height="60" width="80" alt="厚鼻龙" title="厚鼻龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8435e5dde71190ef6b88c060c81b9d16fdfa6019.jpg" class="lazyload"></a></td></tr><tr><td align="center">镰刀龙</td><td align="center">Therizinosaur</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">森林/平原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/730e0cf3d7ca7bcbda369e90b8096b63f724a8c4.jpg" data-fancybox="group" data-caption="镰刀龙" class="fancybox"><img height="60" width="80" alt="镰刀龙" title="镰刀龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/730e0cf3d7ca7bcbda369e90b8096b63f724a8c4.jpg" class="lazyload"></a></td></tr><tr><td align="center">异特龙</td><td align="center">Allosaurus</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">森林/平原/红树林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/bf096b63f6246b60df1ce8cbedf81a4c510fa27b.jpg" data-fancybox="group" data-caption="异特龙" class="fancybox"><img height="60" width="80" alt="异特龙" title="异特龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/bf096b63f6246b60df1ce8cbedf81a4c510fa27b.jpg" class="lazyload"></a></td></tr><tr><td align="center">南方巨兽龙</td><td align="center">Giganotosaurus</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">森林/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9a504fc2d5628535e1029a9e96ef76c6a6ef63aa.jpg" data-fancybox="group" data-caption="南方巨兽龙" class="fancybox"><img height="60" width="80" alt="南方巨兽龙" title="南方巨兽龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/9a504fc2d5628535e1029a9e96ef76c6a6ef63aa.jpg" class="lazyload"></a></td></tr><tr><td align="center">重爪龙</td><td align="center">Baryonyx</td><td align="center">肉食</td><td align="center">对水中生物是欺软怕硬型<br>对岸上生物是老实型</td><td align="center">可以驯服</td><td align="center">淡水/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/37d3d539b6003af3edd996df332ac65c1038b62a.jpg" data-fancybox="group" data-caption="重爪龙" class="fancybox"><img height="60" width="80" alt="重爪龙" title="重爪龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/37d3d539b6003af3edd996df332ac65c1038b62a.jpg" class="lazyload"></a></td></tr><tr><td align="center">窃蛋龙</td><td align="center">Ovirapior</td><td align="center">肉食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">平原/海岸/森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/738b4710b912c8fc81294272fa039245d78821b2.jpg" data-fancybox="group" data-caption="窃蛋龙" class="fancybox"><img height="60" width="80" alt="窃蛋龙" title="窃蛋龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/738b4710b912c8fc81294272fa039245d78821b2.jpg" class="lazyload"></a></td></tr><tr><td align="center">似鸡龙</td><td align="center">Gallimimlis</td><td align="center">草食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">平原/海岸/森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/4afbfbedab64034f129472b9a9c379310a551d37.jpg" data-fancybox="group" data-caption="似鸡龙" class="fancybox"><img height="60" width="80" alt="似鸡龙" title="似鸡龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/4afbfbedab64034f129472b9a9c379310a551d37.jpg" class="lazyload"></a></td></tr><tr><td align="center">小盗龙</td><td align="center">Microraptor</td><td align="center">肉食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">森林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/10dfa9ec8a136327c26b728c978fa0ec09fac78f.jpg" data-fancybox="group" data-caption="小盗龙" class="fancybox"><img height="60" width="80" alt="小盗龙" title="小盗龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/10dfa9ec8a136327c26b728c978fa0ec09fac78f.jpg" class="lazyload"></a></td></tr><tr><td align="center">美颌龙</td><td align="center">Compy</td><td align="center">肉食</td><td align="center">一只时弱 两只以上强</td><td align="center">可以驯服</td><td align="center">森林/平原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/c2cec3fdfc039245e94a5cb08194a4c27c1e2595.jpg" data-fancybox="group" data-caption="美颌龙" class="fancybox"><img height="60" width="80" alt="美颌龙" title="美颌龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/c2cec3fdfc039245e94a5cb08194a4c27c1e2595.jpg" class="lazyload"></a></td></tr><tr><td align="center">伤齿龙</td><td align="center">Troodon</td><td align="center">肉食</td><td align="center">欺软怕硬型</td><td align="center">可以驯服</td><td align="center">森林/海岸/平原</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/6a600c338744ebf8f07e0b18def9d72a6059a78e.jpg" data-fancybox="group" data-caption="伤齿龙" class="fancybox"><img height="60" width="80" alt="伤齿龙" title="伤齿龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/6a600c338744ebf8f07e0b18def9d72a6059a78e.jpg" class="lazyload"></a></td></tr><tr><td align="center">盗首螈</td><td align="center">Diplolalillia</td><td align="center">肉食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">海水/淡水</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/fc1f4134970a304e2f2c3355d7c8a786c9175c16.jpg" data-fancybox="group" data-caption="盗首螈" class="fancybox"><img height="60" width="80" alt="盗首螈" title="盗首螈" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/fc1f4134970a304e2f2c3355d7c8a786c9175c16.jpg" class="lazyload"></a></td></tr><tr><td align="center">泰坦龙</td><td align="center">Titanosaur</td><td align="center">草食</td><td align="center">老实型</td><td align="center">可以驯服</td><td align="center">平原/海岸/红树林</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8b82b9014a90f603514175933e12b31bb151ed75.jpg" data-fancybox="group" data-caption="泰坦龙" class="fancybox"><img height="60" width="80" alt="泰坦龙" title="泰坦龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8b82b9014a90f603514175933e12b31bb151ed75.jpg" class="lazyload"></a></td></tr><tr><td align="center">古神翼龙</td><td align="center">Tapejara</td><td align="center">肉食</td><td align="center">软弱型</td><td align="center">可以驯服</td><td align="center">平原/海岸</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/267f9e2f070828386c77772cb099a9014c08f194.jpg" data-fancybox="group" data-caption="古神翼龙" class="fancybox"><img height="60" width="80" alt="古神翼龙" title="古神翼龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/267f9e2f070828386c77772cb099a9014c08f194.jpg" class="lazyload"></a></td></tr></tbody></table><h3 id="Boss级别的生物"><a href="#Boss级别的生物" class="headerlink" title="Boss级别的生物"></a>Boss级别的生物</h3><p>Boss级别的生物都是无法驯服并且高攻击性的虚拟生物。</p><table><thead><tr><th align="center">名称</th><th align="center">英文名</th><th align="center">能否驯服</th><th align="center">活动范围</th><th align="center">图例</th></tr></thead><tbody><tr><td align="center">喷火龙</td><td align="center">Dragon</td><td align="center">无法驯服</td><td align="center">方尖碑召唤</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/34fae6cd7b899e51a0213f7b44a7d933c8950d35.jpg" data-fancybox="group" data-caption="喷火龙" class="fancybox"><img height="60" width="80" alt="喷火龙" title="喷火龙" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/34fae6cd7b899e51a0213f7b44a7d933c8950d35.jpg" class="lazyload"></a></td></tr><tr><td align="center">育母蜘蛛</td><td align="center">Broodmother Lysrix</td><td align="center">无法驯服</td><td align="center">方尖碑召唤</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/7a899e510fb30f247ead7cacce95d143ad4b036d.jpg" data-fancybox="group" data-caption="育母蜘蛛" class="fancybox"><img height="60" width="80" alt="育母蜘蛛" title="育母蜘蛛" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/7a899e510fb30f247ead7cacce95d143ad4b036d.jpg" class="lazyload"></a></td></tr><tr><td align="center">银背金刚</td><td align="center">Megapithecus</td><td align="center">无法驯服</td><td align="center">方尖碑召唤</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/91529822720e0cf38ef69a9a0c46f21fbe09aa4a.jpg" data-fancybox="group" data-caption="银背金刚" class="fancybox"><img height="60" width="80" alt="银背金刚" title="银背金刚" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/91529822720e0cf38ef69a9a0c46f21fbe09aa4a.jpg" class="lazyload"></a></td></tr></tbody></table><h3 id="特殊动物"><a href="#特殊动物" class="headerlink" title="特殊动物"></a>特殊动物</h3><table><thead><tr><th align="center">名称</th><th align="center">英文名</th><th align="center">能否驯服</th><th align="center">活动范围</th><th align="center">图例</th></tr></thead><tbody><tr><td align="center">霸王渡渡鸟</td><td align="center">Dodorex</td><td align="center">无法驯服</td><td align="center">万圣节活动时随机出现<br>感恩节或圣诞节活动用特定方法召唤<br>（按E可以领养，15分钟后消失）</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d31b0ef41bd5ad6ea6b6045587cb39dbb7fd3cc5.jpg" data-fancybox="group" data-caption="霸王渡渡鸟" class="fancybox"><img height="60" width="80" alt="霸王渡渡鸟" title="霸王渡渡鸟" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d31b0ef41bd5ad6ea6b6045587cb39dbb7fd3cc5.jpg" class="lazyload"></a></td></tr><tr><td align="center">巨型短面袋鼠兔子</td><td align="center">Procoptodon Bunny</td><td align="center">无法驯服</td><td align="center">万圣节活动时随机出现<br>感恩节或圣诞节活动用特定方法召唤<br>（按E可以领养，15分钟后消失）</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/fc1f4134970a304e7487c856d9c8a786c8175cf0.png" data-fancybox="group" data-caption="巨型短面袋鼠兔子" class="fancybox"><img height="60" width="80" alt="巨型短面袋鼠兔子" title="巨型短面袋鼠兔子" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/fc1f4134970a304e7487c856d9c8a786c8175cf0.png" class="lazyload"></a></td></tr></tbody></table><h2 id="孵化功能"><a href="#孵化功能" class="headerlink" title="孵化功能"></a>孵化功能</h2><p>在游戏中除了猎杀驯服恐龙动物，还可以让它们进行繁殖（并不是所有品种都可以，大怪全部不能）。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d53f8794a4c27d1e3aeded101cd5ad6edcc4381f.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/d53f8794a4c27d1e3aeded101cd5ad6edcc4381f.png" class="lazyload" title></a>  </p><p>恐龙或者动物在交配后，陆地生物会生下蛋或者胎生，水生生物会产下卵。<br>蛋有普通生物蛋与受精蛋，受精蛋可以进行孵化，变成小恐龙，普通蛋可以吃掉或者用来制作饲料。</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      ARK全名是ARK:Survival Evolved，中文名为 `方舟：生存进化`，是由独立工作室Wildcard旗下由虚幻引擎4（Unreal Engine 4）打造的生存类开放世界游戏。
    
    </summary>
    
    
      <category term="Game" scheme="https://tamsiree.com/categories/Game/"/>
    
      <category term="GamePlatform" scheme="https://tamsiree.com/categories/Game/GamePlatform/"/>
    
      <category term="Steam" scheme="https://tamsiree.com/categories/Game/GamePlatform/Steam/"/>
    
    
      <category term="Game" scheme="https://tamsiree.com/tags/Game/"/>
    
      <category term="Steam" scheme="https://tamsiree.com/tags/Steam/"/>
    
      <category term="ARK" scheme="https://tamsiree.com/tags/ARK/"/>
    
      <category term="GamePlatform" scheme="https://tamsiree.com/tags/GamePlatform/"/>
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="https://tamsiree.com/Research/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>https://tamsiree.com/Research/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2020-01-02T07:09:04.000Z</published>
    <updated>2020-01-03T19:15:20.898Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>数据结构(data structure)是带有结构特性的数据元素的集合，它研究的是数据的 <code>逻辑结构</code> 和数据的 <code>物理结构</code> 以及它们之间的相互关系，并对这种结构定义相适应的运算，设计出相应的算法，并确保经过这些运算以后所得到的新结构仍保持原来的结构类型。<br>简而言之，数据结构是相互之间存在一种或多种特定关系的数据元素的集合，即带“结构”的数据元素的集合。“结构”就是指数据元素之间存在的关系，分为 <code>逻辑结构</code> 和 <code>存储结构</code> 。</p><p>数据的 <code>逻辑结构</code> 和 <code>物理结构</code> 是数据结构的两个密切相关的方面，同一逻辑结构可以对应不同的存储结构。算法的设计取决于数据的 <code>逻辑结构</code> ，而算法的实现依赖于指定的 <code>存储结构</code> 。</p><p>数据结构的研究内容是构造复杂软件系统的基础，它的核心技术是 <code>分解</code> 与 <code>抽象</code> 。通过 <code>分解</code> 可以划分出数据的3个层次；再通过 <code>抽象</code> ，舍弃数据元素的具体内容，就得到 <code>逻辑结构</code> 。类似地，通过 <code>分解</code> 将处理要求划分成各种功能，再通过抽象舍弃实现细节，就得到运算的定义。上述两个方面的结合可以将问题变换为 <code>数据结构</code> 。这是一个从具体（即具体问题）到抽象（即数据结构）的过程。然后，通过增加对实现细节的考虑进一步得到 <code>存储结构</code> 和 <code>实现运算</code> ，从而完成设计任务。这是一个从抽象（即数据结构）到具体（即具体实现）的过程。</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      数据结构(data structure)是带有结构特性的数据元素的集合，它研究的是数据的 `逻辑结构` 和数据的 `物理结构` 以及它们之间的相互关系，并对这种结构定义相适应的运算，设计出相应的算法，并确保经过这些运算以后所得到的新结构仍保持原来的结构类型。
    
    </summary>
    
    
      <category term="Research" scheme="https://tamsiree.com/categories/Research/"/>
    
      <category term="数据结构" scheme="https://tamsiree.com/categories/Research/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="Research" scheme="https://tamsiree.com/tags/Research/"/>
    
      <category term="数据结构" scheme="https://tamsiree.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>TA是怎样炼成的</title>
    <link href="https://tamsiree.com/TechnicalResearch/TA/TA%E6%98%AF%E6%80%8E%E6%A0%B7%E7%82%BC%E6%88%90%E7%9A%84/"/>
    <id>https://tamsiree.com/TechnicalResearch/TA/TA%E6%98%AF%E6%80%8E%E6%A0%B7%E7%82%BC%E6%88%90%E7%9A%84/</id>
    <published>2019-12-29T15:56:12.000Z</published>
    <updated>2020-01-13T11:46:04.622Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>TA 是 Technical Artist 的缩写，就是游戏行业的技术美术岗位。<br>TA 是为项目解决问题的岗位,它的职责是节省项目成本，缩短项目周期，提升项目效果等。也为技术与美术作为沟通桥梁，所以才有的岗位细分方向。<br>岗位细分的大方向可分为 程序向、美术向两大方向。细分又可分为工具、渲染、流程、动作等方向。</p><p>本文是对 <a href="https://www.bilibili.com/video/av77755500?from=search&seid=12879415090510697416" target="_blank" rel="noopener">霜狼的视频</a> 的总结。 </p><h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>简单来说作为一个给其它岗位解决问题的职业，我们学习的第一个目标自然是锻炼自己解决问题的能力。</p><p>这个能力是短时间内学不来的，只有经历过大量的亲身实践才能积累下来。</p><p>实际上TA并不是所有部分都精通，大部分人都是多精一专。每一个领域都可以成为专家，无贵贱之分。</p><h1 id="学习框架"><a href="#学习框架" class="headerlink" title="学习框架"></a>学习框架</h1><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191230000432.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191230000432.png" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/plasmashell_20191230000722.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/plasmashell_20191230000722.png" class="lazyload" title></a></p><h2 id="基础部分"><a href="#基础部分" class="headerlink" title="基础部分"></a>基础部分</h2><ol><li><p>美术基础<br>《精虫叔叔设计秘密01》[轮廓-轮廓长线条短线条变化]<br>《设计入门教室系列》<br>摄影：<a href="http://open.163.com/newview/movie/courseintro?newurl=/special/cuvocw/sheyingmantan.html" target="_blank" rel="noopener">北京工业大学公开课：摄影的实用性与艺术性漫谈</a></p></li><li><p>程序基础<br>网易公开课全套计算机专业课程，<a href="https://study.163.com/curricula/cs.htm?from=inviteAct" target="_blank" rel="noopener">链接</a></p></li></ol><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/sdajovyajdks1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/sdajovyajdks1.png" class="lazyload" title></a></p><ol start="3"><li>学习方法：<br>核心：深入解决问题这一中心，逐步解决你学习过程中遇到的问题进行锻炼。<br>如：独立寻找学习资料。学会如何获取及筛选正确有用的信息。</li></ol><h2 id="入门阶段"><a href="#入门阶段" class="headerlink" title="入门阶段"></a>入门阶段</h2><ol><li><p>渲染知识：《shader入门精要》<br>《GPU阳春白雪与下里巴人》<br>《3D Game Programming with DirectX 》程序类分支必读<br>《 Real-Time Rendering 》渲染向入门后必读<br>字典：<br>《GPU精粹1-3》</p></li><li><p>美术制作流程：<br>建模-展UV-贴图绘制（一般可以委托美术同学制作，但是美术向的同学基本必须自己有修改能力，流程向必须全部了解）<br>蒙皮-绑定（动作向同学必修内容）<br>动画制作</p></li><li><p>环节规范：（和项目相关性较大属于项目经验范围）<br>常见：<br>命名规范<br>单位标准<br>资源结构<br>等  </p></li><li><p>工具编写：<br>unity引擎工具编写：<a href="http://www.xuanyusong.com/archives/category/unity/unity3deditor/page/3" target="_blank" rel="noopener">雨松momo</a></p></li></ol><p>初步了解max maya工具开发（动作向也需要学习）</p><h2 id="中级阶段"><a href="#中级阶段" class="headerlink" title="中级阶段"></a>中级阶段</h2><ol><li><p>自定义引擎管线：（渲染向）<br>Unity：《Unity 3D 内建着色器源码剖析》<br>UE4：《大象无形：虚幻引擎程序设计浅析》</p></li><li><p>深入各类dcc工具开发：（工具向、流程向）<br>进阶工具深度开发<br>MAX 、MAYA、ZB、Blender等等<br>开始入门自动化<br><a href="http://search.bilibili.com/all?keyword=sd%20%E6%95%99%E7%A8%8B&from_source=nav_search" target="_blank" rel="noopener">SD</a>、<a href="http://search.bilibili.com/all?keyword=houdini%20%E6%95%99%E7%A8%8B" target="_blank" rel="noopener">HOUDINI</a> 顺便送个我常看的<a href="https://www.aboutcg.com/page/2?s=HOUDINI" target="_blank" rel="noopener">搬运网站</a><br><a href="https://www.zhihu.com/search?type=content&q=TA" target="_blank" rel="noopener">参考知乎推荐</a></p></li><li><p>项目效率优化：（公共项）<br>优化内容：<br>模型资源优化<br>渲染计算优化</p></li><li><p>建立适合项目的工作流：（流程向）<br>针对性的选择开发工具定义流程<br>大量文档及案例工作  </p></li><li><p>协助其它岗位定立效果标杆： （公共项）<br>确定游戏风格  </p></li></ol><h2 id="高级阶段"><a href="#高级阶段" class="headerlink" title="高级阶段"></a>高级阶段</h2><ol><li><p>引擎管线优化：（渲染向   快成图程了）<br>各类优化算法和优化方案：各种paper和取舍</p></li><li><p>工具系统构建：（工具、流程向 ）<br>构建各类工具系统降低生产成本：GDC各类分享<br><a href="https://space.bilibili.com/138827797/" target="_blank" rel="noopener">虚幻引擎官方Bilibili空间</a><br>如：3A开发中大量使用照片建模等流程</p></li><li><p>自动化系统构建：（流程、工具向 ）<br>使用自动化工具构建整套资源生成系统：<a href="http://ma-yidong.com/2018/04/14/translate-procedural-world-generation-of-far-cry-5/" target="_blank" rel="noopener">参考链接</a></p></li></ol><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      TA 是 Technical Artist 的缩写，就是游戏行业的技术美术岗位。TA 是为项目解决问题的岗位,它的职责是节省项目成本，缩短项目周期，提升项目效果等。也为技术与美术作为沟通桥梁，所以才有的岗位细分方向。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="TA" scheme="https://tamsiree.com/categories/TechnicalResearch/TA/"/>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
      <category term="TA" scheme="https://tamsiree.com/tags/TA/"/>
    
  </entry>
  
  <entry>
    <title>Base64加密原理</title>
    <link href="https://tamsiree.com/TechnicalResearch/Base64%E5%8A%A0%E5%AF%86%E5%8E%9F%E7%90%86/"/>
    <id>https://tamsiree.com/TechnicalResearch/Base64%E5%8A%A0%E5%AF%86%E5%8E%9F%E7%90%86/</id>
    <published>2019-12-28T07:30:44.000Z</published>
    <updated>2020-01-13T12:10:08.144Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>在互联网中的每一刻，你可能都在享受着Base64带来的便捷，但对于Base64的基础原理又了解多少？今天这篇博文带领大家了解一下Base64的底层实现。</p></blockquote><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Base64的由来"><a href="#Base64的由来" class="headerlink" title="Base64的由来"></a>Base64的由来</h2><p>目前Base64已经成为网络上常见的传输8Bit字节代码的编码方式之一。在做支付系统时，系统之间的报文交互都需要使用Base64对明文进行转码，然后再进行签名或加密，之后再进行（或再次Base64）传输。那么，Base64到底起到什么作用呢？</p><p>在参数传输的过程中经常遇到的一种情况：使用全英文的没问题，但一旦涉及到中文就会出现乱码情况。与此类似，网络上传输的字符并不全是可打印的字符，比如二进制文件、图片等。Base64的出现就是为了解决此问题，它是基于64个可打印的字符来表示二进制的数据的一种方法。</p><p>电子邮件刚问世的时候，只能传输英文，但后来随着用户的增加，中文、日文等文字的用户也有需求，但这些字符并不能被服务器或网关有效处理，因此Base64就登场了。随之，Base64在URL、Cookie、网页传输少量二进制文件中也有相应的使用。</p><h2 id="Base64的编码原理"><a href="#Base64的编码原理" class="headerlink" title="Base64的编码原理"></a>Base64的编码原理</h2><p>Base64的原理比较简单，每当我们使用Base64时都会先定义一个类似这样的数组：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, ... <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, ... <span class="string">'0'</span>, <span class="string">'1'</span>, ... <span class="string">'+'</span>, <span class="string">'/'</span>]</span><br></pre></td></tr></table></figure></div><p>上面就是Base64的索引表，字符选用了”A-Z、a-z、0-9、+、/“ 64个可打印字符，这是标准的Base64协议规定。在日常使用中我们还会看到“=”或“==”号出现在Base64的编码结果中，“=”在此是作为填充字符出现，后面会讲到。</p><h3 id="具体转换步骤"><a href="#具体转换步骤" class="headerlink" title="具体转换步骤"></a>具体转换步骤</h3><ul><li>第一步，将待转换的字符串每三个字节分为一组，每个字节占8bit，那么共有24个二进制位。</li><li>第二步，将上面的24个二进制位每6个一组，共分为4组。</li><li>第三步，在每组前面添加两个0，每组由6个变为8个二进制位，总共32个二进制位，即四个字节。</li><li>第四步，根据Base64编码对照表（见下图）获得对应的值。</li></ul><table><thead><tr><th align="center">编号</th><th align="center">编码</th><th align="center">编号</th><th align="center">编码</th><th align="center">编号</th><th align="center">编码</th><th align="center">编号</th><th align="center">编码</th><th align="center">编号</th><th align="center">编码</th><th align="center">编号</th><th align="center">编码</th><th align="center">编号</th><th align="center">编码</th><th align="center">编号</th><th align="center">编码</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">A</td><td align="center">1</td><td align="center">B</td><td align="center">2</td><td align="center">C</td><td align="center">3</td><td align="center">D</td><td align="center">4</td><td align="center">E</td><td align="center">5</td><td align="center">F</td><td align="center">6</td><td align="center">G</td><td align="center">7</td><td align="center">H</td></tr><tr><td align="center">8</td><td align="center">I</td><td align="center">9</td><td align="center">J</td><td align="center">10</td><td align="center">K</td><td align="center">11</td><td align="center">L</td><td align="center">12</td><td align="center">M</td><td align="center">13</td><td align="center">N</td><td align="center">14</td><td align="center">O</td><td align="center">15</td><td align="center">P</td></tr><tr><td align="center">16</td><td align="center">Q</td><td align="center">17</td><td align="center">R</td><td align="center">18</td><td align="center">S</td><td align="center">19</td><td align="center">T</td><td align="center">20</td><td align="center">U</td><td align="center">21</td><td align="center">V</td><td align="center">22</td><td align="center">W</td><td align="center">23</td><td align="center">X</td></tr><tr><td align="center">24</td><td align="center">Y</td><td align="center">25</td><td align="center">Z</td><td align="center">26</td><td align="center">a</td><td align="center">27</td><td align="center">b</td><td align="center">28</td><td align="center">c</td><td align="center">29</td><td align="center">d</td><td align="center">30</td><td align="center">e</td><td align="center">31</td><td align="center">f</td></tr><tr><td align="center">32</td><td align="center">g</td><td align="center">33</td><td align="center">h</td><td align="center">34</td><td align="center">i</td><td align="center">35</td><td align="center">j</td><td align="center">36</td><td align="center">k</td><td align="center">37</td><td align="center">l</td><td align="center">38</td><td align="center">m</td><td align="center">39</td><td align="center">n</td></tr><tr><td align="center">40</td><td align="center">o</td><td align="center">41</td><td align="center">p</td><td align="center">42</td><td align="center">q</td><td align="center">43</td><td align="center">r</td><td align="center">44</td><td align="center">s</td><td align="center">45</td><td align="center">t</td><td align="center">46</td><td align="center">u</td><td align="center">47</td><td align="center">v</td></tr><tr><td align="center">48</td><td align="center">w</td><td align="center">49</td><td align="center">x</td><td align="center">50</td><td align="center">y</td><td align="center">51</td><td align="center">z</td><td align="center">52</td><td align="center">0</td><td align="center">53</td><td align="center">1</td><td align="center">54</td><td align="center">2</td><td align="center">55</td><td align="center">3</td></tr><tr><td align="center">56</td><td align="center">4</td><td align="center">57</td><td align="center">5</td><td align="center">58</td><td align="center">6</td><td align="center">59</td><td align="center">7</td><td align="center">60</td><td align="center">8</td><td align="center">61</td><td align="center">9</td><td align="center">62</td><td align="center">+</td><td align="center">63</td><td align="center">/</td></tr></tbody></table><p>从上面的步骤我们发现：</p><ul><li>Base64字符表中的字符原本用6个bit就可以表示，现在前面添加2个0，变为8个bit，会造成一定的浪费。因此，Base64编码之后的文本，要比原文大约三分之一。</li><li>为什么使用3个字节一组呢？因为6和8的最小公倍数为24，三个字节正好24个二进制位，每6个bit位一组，恰好能够分为4组。</li></ul><h3 id="示例说明"><a href="#示例说明" class="headerlink" title="示例说明"></a>示例说明</h3><p>以下图的表格为示例，我们具体分析一下整个过程。</p><p><a href="https://img-blog.csdnimg.cn/20190517212249969.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9oZWxsby5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190517212249969.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9oZWxsby5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70" class="lazyload" title="在这里插入图片描述"></a></p><ul><li>第一步：“M”、“a”、”n”对应的ASCII码值分别为77，97，110，对应的二进制值是01001101、01100001、01101110。如图第二三行所示，由此组成一个24位的二进制字符串。</li><li>第二步：如图红色框，将24位每6位二进制位一组分成四组。</li><li>第三步：在上面每一组前面补两个0，扩展成32个二进制位，此时变为四个字节：00010011、00010110、00000101、00101110。分别对应的值（Base64编码索引）为：19、22、5、46。</li><li>第四步：用上面的值在Base64编码表中进行查找，分别对应：T、W、F、u。因此“Man”Base64编码之后就变为：TWFu。</li></ul><h3 id="位数不足情况"><a href="#位数不足情况" class="headerlink" title="位数不足情况"></a>位数不足情况</h3><p>上面是按照三个字节来举例说明的，如果字节数不足三个，那么该如何处理？</p><p><a href="https://img-blog.csdnimg.cn/20190517212307382.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9oZWxsby5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190517212307382.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9oZWxsby5ibG9nLmNzZG4ubmV0,size_16,color_FFFFFF,t_70" class="lazyload" title="在这里插入图片描述"></a></p><ul><li>两个字节：两个字节共16个二进制位，依旧按照规则进行分组。此时总共16个二进制位，每6个一组，则第三组缺少2位，用0补齐，得到三个Base64编码，第四组完全没有数据则用“=”补上。因此，上图中“BC”转换之后为“QKM=”；</li><li>一个字节：一个字节共8个二进制位，依旧按照规则进行分组。此时共8个二进制位，每6个一组，则第二组缺少4位，用0补齐，得到两个Base64编码，而后面两组没有对应数据，都用“=”补上。因此，上图中“A”转换之后为“QQ==”；</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>大多数编码都是由字符串转化成二进制的过程，而Base64的编码则是从二进制转换为字符串。与常规恰恰相反，</li><li>Base64编码主要用在传输、存储、表示二进制领域，不能算得上加密，只是无法直接看到明文。也可以通过打乱Base64编码来进行加密。</li><li>中文有多种编码（比如：utf-8、gb2312、gbk等），不同编码对应Base64编码结果都不一样。</li></ul><h2 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h2><p>上面我们已经看到了Base64就是用6位（2的6次幂就是64）表示字符，因此成为Base64。同理，Base32就是用5位，Base16就是用4位。大家可以按照上面的步骤进行演化一下。</p><h2 id="Java-验证"><a href="#Java-验证" class="headerlink" title="Java 验证"></a>Java 验证</h2><p>最后，我们用一段Java代码来验证一下上面的转换结果：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tamsiree.utils;</span><br><span class="line"><span class="keyword">import</span> sun.misc.BASE64Encoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tamsiree</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Base64Utils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String a = <span class="string">"A"</span>;</span><br><span class="line">String bc = <span class="string">"BC"</span>;</span><br><span class="line">String man = <span class="string">"Man"</span>;</span><br><span class="line"></span><br><span class="line">BASE64Encoder encoder = <span class="keyword">new</span> BASE64Encoder();</span><br><span class="line">System.out.println(<span class="string">"A base64结果为："</span> + encoder.encode(a.getBytes()));</span><br><span class="line">System.out.println(<span class="string">"BC base64结果为："</span> + encoder.encode(bc.getBytes()));</span><br><span class="line">System.out.println(<span class="string">"Man base64结果为："</span> + encoder.encode(man.getBytes()));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>打印结果为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">console</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight console"><table><tr><td class="code"><pre><span class="line">A base64结果为：QQ==</span><br><span class="line">BC base64结果为：QkM=</span><br><span class="line">Man base64结果为：TWFu</span><br></pre></td></tr></table></figure></div><p>以上结果与我们分析所得完全一致。</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      在互联网中的每一刻，你可能都在享受着Base64带来的便捷，但对于Base64的基础原理又了解多少？今天这篇博文带领大家了解一下Base64的底层实现。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
    
      <category term="Base64" scheme="https://tamsiree.com/tags/Base64/"/>
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
  </entry>
  
  <entry>
    <title>Unity使用技巧</title>
    <link href="https://tamsiree.com/Software/Unity/Unity%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://tamsiree.com/Software/Unity/Unity%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</id>
    <published>2019-12-27T02:17:53.000Z</published>
    <updated>2020-01-13T11:45:17.505Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>掌握一些Unity编辑器的小技巧，会让你开发以及使用更加快捷有效。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="高亮选择"><a href="#高亮选择" class="headerlink" title="高亮选择"></a>高亮选择</h2><p>在Scene面板右上角的Gizmo下拉列表中，可以通过设置Selection Outline选项决定是否在选中物体时显示边缘高亮的标识。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/142532ag2kg816g2kck2km.jpg" data-fancybox="group" data-caption="高亮选择" class="fancybox"><img alt="高亮选择" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/142532ag2kg816g2kck2km.jpg" class="lazyload" title="高亮选择"></a></p><h2 id="Pixel-Perfect-Camera"><a href="#Pixel-Perfect-Camera" class="headerlink" title="Pixel Perfect Camera"></a>Pixel Perfect Camera</h2><p>在摄像机上挂载Pixel Perfect Camera组件能够使2D像素风格的游戏画面更加整洁清晰。此组件需要使用Package Manager安装2D Pixel Perfect包。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/142551tqjgqbt5b3b4zqqz.jpg" data-fancybox="group" data-caption="Pixel Perfect Camera" class="fancybox"><img alt="Pixel Perfect Camera" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/142551tqjgqbt5b3b4zqqz.jpg" class="lazyload" title="Pixel Perfect Camera"></a></p><h2 id="以Y轴为依据进行Sprite排序"><a href="#以Y轴为依据进行Sprite排序" class="headerlink" title="以Y轴为依据进行Sprite排序"></a>以Y轴为依据进行Sprite排序</h2><p>对于2D游戏，将Transparency Sort Mode (Edit &gt; Project Settings &gt; Graphics ) 设置为Custom Axis，然后设置Transparency Sort Axis，场景中的Sprite可以根据Y轴进行排序。如下图所示，当设置为（0,1,0）时，Y坐标相对较大的Sprite排在Y坐标相对较小的Sprite之下，当设置为(0,-1,0)时，则相反。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/142614qbbea1emzmwqgm1m.jpg" data-fancybox="group" data-caption="以Y轴为依据进行Sprite排序" class="fancybox"><img alt="以Y轴为依据进行Sprite排序" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/142614qbbea1emzmwqgm1m.jpg" class="lazyload" title="以Y轴为依据进行Sprite排序"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/142652ta2jnuubasowppak.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/142652ta2jnuubasowppak.jpg" class="lazyload" title></a></p><h2 id="延迟销毁游戏对象"><a href="#延迟销毁游戏对象" class="headerlink" title="延迟销毁游戏对象"></a>延迟销毁游戏对象</h2><p>默认情况下，使用Destroy()方法会立即销毁游戏对象，如果想延迟一段时间再销毁，可在此方法中传递一个时间参数，如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c#</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Destroy(gameObject,<span class="number">2f</span>);</span><br></pre></td></tr></table></figure></div><h2 id="快速新建基于自定义Shader的材质"><a href="#快速新建基于自定义Shader的材质" class="headerlink" title="快速新建基于自定义Shader的材质"></a>快速新建基于自定义Shader的材质</h2><p>在 Project 面板中选中一个自定义 Shader ，右键选择新建材质（Create&gt;Material），则材质默认使用的着色器为z之前选择的Shader，同时材质名称为Shader的名称。</p><h2 id="脚本不挂载到游戏对象执行"><a href="#脚本不挂载到游戏对象执行" class="headerlink" title="脚本不挂载到游戏对象执行"></a>脚本不挂载到游戏对象执行</h2><p>通常情况下，新建的脚本要挂载到游戏对象上才能运行，如果在脚本中的方法前使用[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterSceneLoad)]，可以不用挂载到任何游戏对象上即可在程序运行时执行此方法，方便在在程序初始化前做一些额外的初始化工作。如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c#</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">[<span class="meta">RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterSceneLoad)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoSomething</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Debug.Log(<span class="string">"It's the start of the game"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="保存程序运行时组件属性的改变"><a href="#保存程序运行时组件属性的改变" class="headerlink" title="保存程序运行时组件属性的改变"></a>保存程序运行时组件属性的改变</h2><p>在程序运行时改变组件的各属性值，当停止运行后，这些改变将重置为编辑状态下的数值，。程序运行时改变了组件的属性值，可以点击组件右上角的齿轮按钮，选择Copy Component命令，停止播放后，在相同的组件上，执行Paste Component Value，从而能够保存在运行时对该组件做出的改变。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/143543paeeai0szwz9avwi.jpg" data-fancybox="group" data-caption="保存程序运行时组件属性的改变" class="fancybox"><img alt="保存程序运行时组件属性的改变" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/143543paeeai0szwz9avwi.jpg" class="lazyload" title="保存程序运行时组件属性的改变"></a></p><h2 id="获取一个随机布尔值"><a href="#获取一个随机布尔值" class="headerlink" title="获取一个随机布尔值"></a>获取一个随机布尔值</h2><p>我们知道Random.value能够返回0~1之间的随机数，所以让此随机数与0.5f进行比较，就能够获取一个随机的布尔值True或者False，如下代码所示:  </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c#</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> trueOrFalse = (Random.<span class="keyword">value</span> &gt; <span class="number">0.5f</span>);</span><br></pre></td></tr></table></figure></div><h2 id="使用Struct代替Class"><a href="#使用Struct代替Class" class="headerlink" title="使用Struct代替Class"></a>使用Struct代替Class</h2><p>如果数据结构仅保存了有限的几个数值变量，可以考虑使用struct代替Class，因为Class实例由垃圾回收机制来保证内存的回收处理;而struct变量使用完后立即自动解除内存分配。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/143618liz5lvk7ifk7kjs7.jpg" data-fancybox="group" data-caption="使用Struct代替Class" class="fancybox"><img alt="使用Struct代替Class" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/143618liz5lvk7ifk7kjs7.jpg" class="lazyload" title="使用Struct代替Class"></a></p><h2 id="Visual-Studio-自动语句补全"><a href="#Visual-Studio-自动语句补全" class="headerlink" title="Visual Studio 自动语句补全"></a>Visual Studio 自动语句补全</h2><p>当使用Visual Studio进行代码编写时，可双击Tab键来辅助完成像if、for、switch等语句的补全。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/143650svvbqvnbpqk2vezz.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/143650svvbqvnbpqk2vezz.jpg" class="lazyload" title></a></p><h2 id="协程嵌套"><a href="#协程嵌套" class="headerlink" title="协程嵌套"></a>协程嵌套</h2><p>在一个协程里开启另外一个协程，可使用以下方法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c#</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    StartCoroutine(FirstCo());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">IEnumerator <span class="title">FirstCo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">yield</span> return <span class="title">StartCoroutine</span>(<span class="params">SecondCo(</span>))</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">IEnumerator <span class="title">SecondCo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="脚本变量参与动画制作"><a href="#脚本变量参与动画制作" class="headerlink" title="脚本变量参与动画制作"></a>脚本变量参与动画制作</h2><p>使用工具还可以改变脚本的变量。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/143736fe4s6imoo8eigiu6.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/143736fe4s6imoo8eigiu6.jpg" class="lazyload" title></a></p><h2 id="Animation窗口快捷键"><a href="#Animation窗口快捷键" class="headerlink" title="Animation窗口快捷键"></a>Animation窗口快捷键</h2><p>在Animation窗口中，按下Ctrl+A，所有关键帧将集中显示在窗口中；选择某些关键帧，按下F键，可将它们居中显示在窗口中；按下C键，可以在曲线视图和关键帧视图间切换；按下K键添加关键帧。</p><h2 id="反向播放动画"><a href="#反向播放动画" class="headerlink" title="反向播放动画"></a>反向播放动画</h2><p>在Animator窗口中，设置动画的Speed属性为-1可使动画片段反向播放。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/145029h9i7kq4p95ifmg7n.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/145029h9i7kq4p95ifmg7n.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="快速比较距离"><a href="#快速比较距离" class="headerlink" title="快速比较距离"></a>快速比较距离</h2><p>将两点之间的距离与一个固定距离进行比较时，可使两点相减然后取平方（即sqrMagnitude），然后用该值与某个距离值的平方进行比较。不建议使用Vector3.Distance方法获取两点之间距离，然后与给定的距离值进行比较。因为Vector3.Distance(a,b) 相当于 (a-b).magnitude，即求平方后开根，而sqrMagnitude方法省去了求平方根的操作，所以比magnitude执行快。<br>建议：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ((pointA - pointB).sqrMagnitude &lt; dist * dist)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>不建议：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Vector3.Distance(pointA, pointB) &lt; dist)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="使用TextMeshPro"><a href="#使用TextMeshPro" class="headerlink" title="使用TextMeshPro"></a>使用TextMeshPro</h2><p>使用TextMeshPro能够获得更多的文字控制自由度，并且能够有效防止文字边缘模糊。如下图所示，第一行文字通过”Create &gt; UI &gt; Text”命令创建，第二行文字通过”Create &gt; UI &gt; TextMeshPro - Text”命令创建。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/150011ivqsfvusc8nvucpa.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/150011ivqsfvusc8nvucpa.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="在Inspector面板中显示私有变量"><a href="#在Inspector面板中显示私有变量" class="headerlink" title="在Inspector面板中显示私有变量"></a>在Inspector面板中显示私有变量</h2><p>将私有变量标记为SerializeField，可在Inspector面板中将其显示。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> myNumber = <span class="number">20</span>;</span><br></pre></td></tr></table></figure></div><h2 id="在Inspector面板中隐藏公有变量"><a href="#在Inspector面板中隐藏公有变量" class="headerlink" title="在Inspector面板中隐藏公有变量"></a>在Inspector面板中隐藏公有变量</h2><p>如果不希望在Inspector面板中显示公有变量，可将其标记为[HideInInspector]。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> myNumber = <span class="number">20</span>;</span><br></pre></td></tr></table></figure></div><h2 id="变量重命名后继续保持值"><a href="#变量重命名后继续保持值" class="headerlink" title="变量重命名后继续保持值"></a>变量重命名后继续保持值</h2><p>当变量重命名后，如果希望继续保留其数值，可使用FormerlySerializedAs，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">FormerlySerializedAs(<span class="meta-string">"hp"</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> myNumber = <span class="number">20</span>;</span><br></pre></td></tr></table></figure></div><p>需要引用命名空间：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.Serialization;</span><br></pre></td></tr></table></figure></div><h2 id="使用文件夹快捷方式"><a href="#使用文件夹快捷方式" class="headerlink" title="使用文件夹快捷方式"></a>使用文件夹快捷方式</h2><p>可将经常访问的文件夹的快捷方式拖入Project面板中，双击快捷方式可快速打开此目录。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/150338u8rweojymjjj85ml.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/150338u8rweojymjjj85ml.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="F与Shift-F"><a href="#F与Shift-F" class="headerlink" title="F与Shift+F"></a>F与Shift+F</h2><p>选择游戏对象，按下F键，可将Scene的视口中央移动到该游戏对象处；按下Shift+F，可将视口与该游戏对象锁定，即无论如何移动游戏对象，视口中央始终跟随此游戏对象。</p><h2 id="对齐Scene与Game视图"><a href="#对齐Scene与Game视图" class="headerlink" title="对齐Scene与Game视图"></a>对齐Scene与Game视图</h2><p>在Hierarchy面板中选择摄像机，按下Ctrl+Shift+F，可将摄像机移动到能够呈现Scene窗口中内容的位置。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/150409n9uwivkdybvhbhik.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/150409n9uwivkdybvhbhik.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="CompareTag方法"><a href="#CompareTag方法" class="headerlink" title="CompareTag方法"></a>CompareTag方法</h2><p>当对游戏对象的Tag进行比对时，从性能考虑，可使用CompareTag方法，不建议使用双等号进行判断。<br>建议：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (gameObject.CompareTag(<span class="string">"Enemy"</span>))</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>不建议：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (gameObject.tag == <span class="string">"Enemy"</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="使用空游戏对象作为分隔符"><a href="#使用空游戏对象作为分隔符" class="headerlink" title="使用空游戏对象作为分隔符"></a>使用空游戏对象作为分隔符</h2><p>在Hierarchy面板中，可以使用名称中带有分隔符的空游戏对象进行组织管理。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/153523bzs5snhlkdzyhhpx.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/153523bzs5snhlkdzyhhpx.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="查找含有某组件的游戏对象"><a href="#查找含有某组件的游戏对象" class="headerlink" title="查找含有某组件的游戏对象"></a>查找含有某组件的游戏对象</h2><p>如果需要查找挂载了某个组件的游戏对象，直接在Hierarchy面板的搜索框中输入组件名称即可，需要注意组件名称中的空格，比如搜索”MeshCollider“而不是”Mesh Collider“。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/153542miz6ovo3ybzhy6b3.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/153542miz6ovo3ybzhy6b3.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="查找某种类型的资源"><a href="#查找某种类型的资源" class="headerlink" title="查找某种类型的资源"></a>查找某种类型的资源</h2><p>在Project面板中的搜索框中输入”t:”+资源类型，可以过滤显示某种类型的资源，比如输入”t:scene”，会过滤出所有场景文件，输入”t:texture”，则会显示所有贴图。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/153846fg2apaa83pjx5a9j.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/153846fg2apaa83pjx5a9j.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="移动代码行"><a href="#移动代码行" class="headerlink" title="移动代码行"></a>移动代码行</h2><p>在Visual Studio中，使用快捷键Alt+上下键，可以在代码块中快速上移/下移光标所在的代码行，不用复制粘贴。</p><h2 id="快速查看组件文档"><a href="#快速查看组件文档" class="headerlink" title="快速查看组件文档"></a>快速查看组件文档</h2><p>点击组件右上角的文档按钮，可快速打开关于当前组件的文档。建议下载离线文档，以便更加快速打开文档，如果没有下载，Unity将打开在线文档。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/155754rbra2rjg3ddr0a0v.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/155754rbra2rjg3ddr0a0v.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="文档版本历史"><a href="#文档版本历史" class="headerlink" title="文档版本历史"></a>文档版本历史</h2><p>在Unity文档中点击Documentation Version链接，可查看不同版本的文档。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/155911mp7ppfz0fiwvmts7.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/155911mp7ppfz0fiwvmts7.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="展开-折叠所有节点"><a href="#展开-折叠所有节点" class="headerlink" title="展开/折叠所有节点"></a>展开/折叠所有节点</h2><p>在Hierarchy面板中，按下Alt键，鼠标左键点击树形节点，可展开/折叠当前节点下的所有子节点。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/155958e8ep8s17e1dy9sos.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/155958e8ep8s17e1dy9sos.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="保存编辑器窗口布局"><a href="#保存编辑器窗口布局" class="headerlink" title="保存编辑器窗口布局"></a>保存编辑器窗口布局</h2><p>Unity窗口布局可自定义，调整完毕以后，如果希望以后继续沿用此布局，点击编辑器右上角的Layout下拉列表，选择命令Save Layout，可将当前窗口布局进行保存。</p><h2 id="改变编辑器颜色"><a href="#改变编辑器颜色" class="headerlink" title="改变编辑器颜色"></a>改变编辑器颜色</h2><p>选择命令Editor &gt; Preferences命令，可自定义编辑器当前主题的颜色。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160023ei520ohvg10ee8r3.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160023ei520ohvg10ee8r3.jpg" class="lazyload" title="在这里插入图片描述"></a><br>修改Playmode tint的颜色值，可以改变编辑器在运行模式时的颜色，以提醒开发者此时为运行模式。</p><h2 id="开关场景特效"><a href="#开关场景特效" class="headerlink" title="开关场景特效"></a>开关场景特效</h2><p>在Scene面板顶部的图片下拉列表中，可选择开关某种类型的特效。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160044d07tp7d2awa0gpf1.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160044d07tp7d2awa0gpf1.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="MenuItem属性"><a href="#MenuItem属性" class="headerlink" title="MenuItem属性"></a>MenuItem属性</h2><p>要在编辑器的菜单栏中选择执行编写的函数，可在函数前添加MenuItem属性，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">MenuItem(<span class="meta-string">"MyMenu/Do Something"</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DoSomething</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160114w10zen44j223nym2.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160114w10zen44j223nym2.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="ContextMenu"><a href="#ContextMenu" class="headerlink" title="ContextMenu"></a>ContextMenu</h2><p>使用ContextMenu属性标记函数，能够在脚本所在的上下文菜单中调用，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">ContextMenu(<span class="meta-string">"Do Something"</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DoSomething</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160223spc3pxrq6xsrqpfw.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160223spc3pxrq6xsrqpfw.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="隐藏和锁定层"><a href="#隐藏和锁定层" class="headerlink" title="隐藏和锁定层"></a>隐藏和锁定层</h2><p>在编辑器右上角的Layers下拉列表中，点击对应层右侧的眼睛按钮，可以隐藏或显示某个层上的对象；点击锁按钮，可对某个层进行锁定或解锁，当被锁定后，该层上的所有对象将不能被选择。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160304qe1o1xwrvrgonts6.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160304qe1o1xwrvrgonts6.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="层子菜单"><a href="#层子菜单" class="headerlink" title="层子菜单"></a>层子菜单</h2><p>当创建层时，使用斜杠符进行路径式命名可以为层添加子菜单，可以更好地组织项目。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160336nzdbjkyygjbgjjrd.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160336nzdbjkyygjbgjjrd.jpg" class="lazyload" title="在这里插入图片描述"></a><br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160355v22mifyy3iaw9jn2.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160355v22mifyy3iaw9jn2.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="使用Scripting-Define-Symbols定义脚本"><a href="#使用Scripting-Define-Symbols定义脚本" class="headerlink" title="使用Scripting Define Symbols定义脚本"></a>使用Scripting Define Symbols定义脚本</h2><p>在不同的目标平台下添加 Scripting Define Symbols（Project Settings &gt; Player &gt; Scripting Define Symbols），以分号分隔，可以将这些符号像使用Unity内置标签一样用作#if指令的条件。</p><h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><p>在使用Color控件的滴管工具进行颜色选择时，可以拾取Unity编辑器之外的颜色。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160444xaaemg6zz5a6qwag.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160444xaaemg6zz5a6qwag.jpg" class="lazyload" title="在这里插入图片描述"></a><br>在颜色属性之间也可以使用右键命令进行复制粘贴。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160521cgigkgb5isgfzz21.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160521cgigkgb5isgfzz21.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="最大化窗口"><a href="#最大化窗口" class="headerlink" title="最大化窗口"></a>最大化窗口</h2><p>使用快捷键Shift+空格键，可以快速最大化鼠标所在的窗口，而不用选择窗口右上角的Maximize命令</p><h2 id="序列化Struct和Class"><a href="#序列化Struct和Class" class="headerlink" title="序列化Struct和Class"></a>序列化Struct和Class</h2><p>在数据类型Struct和Class声明前使用[System.Serializable]，可以将其显示在Inspector面板中进行赋值。</p><h2 id="碰撞矩阵"><a href="#碰撞矩阵" class="headerlink" title="碰撞矩阵"></a>碰撞矩阵</h2><p>在 Edit &gt; Project Settings… &gt; Physics 中，通过设置Layer Collision Matrix 可以决定能够互相碰撞的层。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160552d33nyc8731d1vh0z.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160552d33nyc8731d1vh0z.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="Collider相互作用矩阵"><a href="#Collider相互作用矩阵" class="headerlink" title="Collider相互作用矩阵"></a>Collider相互作用矩阵</h2><p>当两个对象发生碰撞时，会发送不同的碰撞事件，如OnTriggerEnter、OnCollisionEnter等等，这取决于具体的碰撞体设置，下表列出了不同类型的碰撞体发生碰撞时所能发出的事件类型。详情可参考Unity 官方文档：<a href="https://docs.unity3d.com/Manual/CollidersOverview.html" target="_blank" rel="noopener">https://docs.unity3d.com/Manual/CollidersOverview.html</a><br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160552d33nyc8731d1vh0z.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160552d33nyc8731d1vh0z.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="数值输入"><a href="#数值输入" class="headerlink" title="数值输入"></a>数值输入</h2><p>在Inspector面板中涉及到数值输入的字段，不仅可以直接输入数据，还可以在输入框中输入数学表达式，按下回车后Unity会将计算结果填充到输入框中。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160644g4fhif8xan1affrx.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160644g4fhif8xan1affrx.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="锁定Inspector"><a href="#锁定Inspector" class="headerlink" title="锁定Inspector"></a>锁定Inspector</h2><p>点击Inspector右上角的锁定按钮，或在上下文菜单中选择Lock命令，可以将当前选中游戏对象的Inspector面板锁定。然后选择Add Tab &gt; Inspector命令，添加一个Inspector，这样能够方便在两个游戏对象之间互相拷贝组件数据。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160715ehy3dondcz3reo0d.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160715ehy3dondcz3reo0d.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="Inspector调试模式"><a href="#Inspector调试模式" class="headerlink" title="Inspector调试模式"></a>Inspector调试模式</h2><p>在Inspector面板右上角的下拉菜单中，选择Debug命令，启动调试模式，此时将显示组件包含的所有变量，包括私有变量，当运行编辑器时，可以实时查看各组件所有变量的变化。</p><h2 id="高亮显示Debug-Log对应的游戏对象"><a href="#高亮显示Debug-Log对应的游戏对象" class="headerlink" title="高亮显示Debug.Log对应的游戏对象"></a>高亮显示Debug.Log对应的游戏对象</h2><p>当使用Debug.Log方法输出信息时，可将gameObject作为此方法的第二个参数，当程序运行时，点击Console面板中对应的输出信息，可在Hierarchy面板中高亮显示挂载了此脚本的游戏对象。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Debug.Log(<span class="string">"this is a message"</span>,gameObject);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160753kmr7pybmfsb47am7.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160753kmr7pybmfsb47am7.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="风格化Debug-Log的输出信息"><a href="#风格化Debug-Log的输出信息" class="headerlink" title="风格化Debug.Log的输出信息"></a>风格化Debug.Log的输出信息</h2><p>当Debug.Log方法的输出消息是字符串时，可以使用富文本标记来强调内容。如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Debug.Log(<span class="string">"&lt;color=red&gt;Fatal error:&lt;/color&gt; AssetBundle not found"</span>);</span><br></pre></td></tr></table></figure></div><p>输出效果：<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160823pbffw26bkzfbkfvk.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160823pbffw26bkzfbkfvk.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="绘制调试数据"><a href="#绘制调试数据" class="headerlink" title="绘制调试数据"></a>绘制调试数据</h2><p>当变量随着时间的推进而改变时，可使用AnimationCurve实例在程序运行时绘制此数据，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> AnimationCurve plot = <span class="keyword">new</span> AnimationCurve();</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> <span class="keyword">value</span> = Mathf.Sin(Time.time);</span><br><span class="line">    plot.AddKey(Time.realtimeSinceStartup, <span class="keyword">value</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>返回Unity编辑器，运行程序，点击plot属性，此时会随着时间动态绘制数据的变化情况，如下图所示：</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160859xwwojis79qx9bqsm.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160859xwwojis79qx9bqsm.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="快速新建脚本并挂载到游戏对象上"><a href="#快速新建脚本并挂载到游戏对象上" class="headerlink" title="快速新建脚本并挂载到游戏对象上"></a>快速新建脚本并挂载到游戏对象上</h2><p>选择游戏对象，在Inspector面板上点击Add Component按钮，在搜索框中输入新建的脚本名称并回车，可新建脚本并挂载到目标游戏对象上，双击脚本名称进行脚本编写。</p><h2 id="导入第三方项目文件"><a href="#导入第三方项目文件" class="headerlink" title="导入第三方项目文件"></a>导入第三方项目文件</h2><p>Unity能够读取部分第三方创作工具保存的项目文件，比如Photoshop的PSD，Blender的源文件等，不需要从这些软件导出中转文件格式，比如Jpg、FBX等。</p><h2 id="导入后保留PSD文件的图层结构"><a href="#导入后保留PSD文件的图层结构" class="headerlink" title="导入后保留PSD文件的图层结构"></a>导入后保留PSD文件的图层结构</h2><p>将PSD文件另存为PSB格式，将其导入Unity后可保留文件图层结构，此时需要在Package Manager中安装2D PSD Importer，并且在文件的导入属性中设置Texture Type 为Sprite (2D and UI)。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160928np57sw9hp8zq8siu.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/160928np57sw9hp8zq8siu.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="为游戏对象指定-自定义图标"><a href="#为游戏对象指定-自定义图标" class="headerlink" title="为游戏对象指定/自定义图标"></a>为游戏对象指定/自定义图标</h2><p>点击游戏对象Inspector面板左上角的下拉菜单，可为游戏对象指定一个特定颜色的标识，这对空游戏对象的可视化也比较有用。点击Other…按钮，可以用自己的图片来进行标识。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161001u9c488sp91aarscw.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161001u9c488sp91aarscw.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="显示-隐藏Gizmo"><a href="#显示-隐藏Gizmo" class="headerlink" title="显示/隐藏Gizmo"></a>显示/隐藏Gizmo</h2><p>点击Scene面板右上角的Gizmo下拉列表，可以选择显示或隐藏某类组件的图标和Gizmo标识；也可点击Game面板右上角的Gizmo按钮，显示或隐藏所有资源的图标和Gizmo。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161025j747zhutt5995v7m.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161025j747zhutt5995v7m.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h2><p>可使用StringBuilder进行字符串的拼接，不要使用字符串相加的形式，因为这样会带来额外的内存垃圾。如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">StringBuilder myStr = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">myStr.Append(<span class="string">"Hello"</span>).Append(<span class="string">"The"</span>).Append(<span class="string">"World"</span>);</span><br></pre></td></tr></table></figure></div><p>不建议：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">string</span> myStr = <span class="string">"Hello"</span> + <span class="string">"the"</span> + <span class="string">"world"</span>;</span><br></pre></td></tr></table></figure></div><p>使用StringBuilder需要引用命名空间System.Text。</p><h2 id="使用ScriptableObjects管理游戏数据"><a href="#使用ScriptableObjects管理游戏数据" class="headerlink" title="使用ScriptableObjects管理游戏数据"></a>使用ScriptableObjects管理游戏数据</h2><p>对于游戏数据比如武器、成就等，可使用ScriptableObjects在编辑器中进行有效组织。如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NewBehaviourScript</span> : <span class="title">ScriptableObject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> ItemName;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> ItemLevel;</span><br><span class="line">    <span class="keyword">public</span> Texture2D ItemIcon;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161200az0uuk043kz737yx.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161200az0uuk043kz737yx.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="编辑器播放时修改脚本后的处理"><a href="#编辑器播放时修改脚本后的处理" class="headerlink" title="编辑器播放时修改脚本后的处理"></a>编辑器播放时修改脚本后的处理</h2><p>选择 Edit &gt; Preferences &gt; General 命令，在Script Changes While Playing中，可以设置编辑器在播放状态下如果脚本发生改变后的处理，比如停止播放重新编译等。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161227srvsgjceqsjc69f4.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161227srvsgjceqsjc69f4.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="自定义窗口"><a href="#自定义窗口" class="headerlink" title="自定义窗口"></a>自定义窗口</h2><p>将类继承自EditorWindow，可以添加自定义窗口，在此基础上编写一些命令和工具，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEditor;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ExampleWindow</span> : <span class="title">EditorWindow</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">MenuItem(<span class="meta-string">"Window/Example"</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ShowWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        GetWindow&lt;ExampleWindow&gt;(<span class="string">"Example"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>执行效果：<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161305yqmom79mukfuouo6.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161305yqmom79mukfuouo6.jpg" class="lazyload" title="在这里插入图片描述"></a><br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161330dnnhuhu5h5nsud5q.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161330dnnhuhu5h5nsud5q.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="自定义Inspector"><a href="#自定义Inspector" class="headerlink" title="自定义Inspector"></a>自定义Inspector</h2><p>也可对Inspector进行自定义，添加一些控件。如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEditor;</span><br><span class="line"></span><br><span class="line">[<span class="meta">CustomEditor(typeof(Sphere))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SphereEditor</span> : <span class="title">Editor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnInspectorGUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        GUILayout.Label(<span class="string">"自定义Inspector"</span>);</span><br><span class="line">        GUILayout.Button(<span class="string">"确定"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>执行效果：<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161405gtrl8c1jcdt5tvqt.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161405gtrl8c1jcdt5tvqt.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="工具快捷键"><a href="#工具快捷键" class="headerlink" title="工具快捷键"></a>工具快捷键</h2><p>使用快捷键Q、W、E、R、T、Y切换移动、旋转、缩放等工具。</p><h2 id="使用RectTransform工具缩放3D物体"><a href="#使用RectTransform工具缩放3D物体" class="headerlink" title="使用RectTransform工具缩放3D物体"></a>使用RectTransform工具缩放3D物体</h2><p>RectTransform工具一般用于缩放2D物体，对3D物体使用该工具可以在某个二维平面对其进行缩放，这取决于物体与视口的关系。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161426bh7svphm6ukmqmdc.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161426bh7svphm6ukmqmdc.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="吸附"><a href="#吸附" class="headerlink" title="吸附"></a>吸附</h2><p>按下Ctrl键对游戏对象进行移动、旋转、缩放，将以步进的形式进行操作，选择Editor &gt; Snap Settings…命令，可设置步进大小。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161448tqdlhoq1421y9z11.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161448tqdlhoq1421y9z11.jpg" class="lazyload" title="在这里插入图片描述"></a></p><p>按下V键，在游戏对象上选择顶点进行拖放，将以此顶点为基础，把游戏对象吸附到其它顶点的位置。</p><h2 id="管理程序集"><a href="#管理程序集" class="headerlink" title="管理程序集"></a>管理程序集</h2><p>在Project面板中选择Create &gt; Assembly Definition 命令，创建程序集文件，然后将其拖放到指定的文件夹中，定义脚本依赖关系，可以确保脚本更改后，只会重新生成必需的程序集，从而减少编译时间。</p><h2 id="WaitForSecondsRealtime"><a href="#WaitForSecondsRealtime" class="headerlink" title="WaitForSecondsRealtime"></a>WaitForSecondsRealtime</h2><p>当时间缩放为0时（即Time.timeScale=0f），waitForSeconds方法将不会停止等待，后续代码也不会执行，此时可使用WaitForSecondsRealtime方法，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Time.timeScale = <span class="number">0f</span>;</span><br><span class="line"><span class="function"><span class="keyword">yield</span> return new <span class="title">WaitForSecondsRealtime</span>(<span class="params"><span class="number">1f</span></span>)</span>;</span><br></pre></td></tr></table></figure></div><h2 id="缓存组件引用"><a href="#缓存组件引用" class="headerlink" title="缓存组件引用"></a>缓存组件引用</h2><p>当某组件需要被频繁访问时，可在初始化时预先获取该组件的引用，从而避免在访问时由于重复获取引起的性能开销。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Rigidbody rb;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    rb = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    rb.AddForce(<span class="number">0f</span>, <span class="number">-2f</span>, <span class="number">0f</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>同样的情况，也不要在使用Camera.main获取摄像机组件，尤其避免使用类似以下方法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Camera cam = GameObject.FindGameObjectWithTag(<span class="string">"MainCamera"</span>).GetComponent&lt;Camera&gt;();</span><br></pre></td></tr></table></figure></div><p>这样会带来更大的性能消耗。</p><h2 id="字符串性能优化"><a href="#字符串性能优化" class="headerlink" title="字符串性能优化"></a>字符串性能优化</h2><p>如果某字符串在整个应用过程中不会改变且被频繁使用，可将其存储在静态只读变量中，从而节省内存分配，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">string</span> Fire1 = <span class="string">"Fire1"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Input.GetAxis(Fire1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>不建议：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Input.GetAxis(<span class="string">"Fire1"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="方便使用的元数据"><a href="#方便使用的元数据" class="headerlink" title="方便使用的元数据"></a>方便使用的元数据</h2><p>为变量添加一些属性可使它们在Inspector面板中更容易被使用。在变量前添加Range属性可将其限定在某个范围内使用滑块进行调节，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">Range(0f,10f)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> speed = <span class="number">1f</span>;</span><br></pre></td></tr></table></figure></div><p>执行效果：<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161620rxz7ogq1oyxos418.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161620rxz7ogq1oyxos418.jpg" class="lazyload" title="在这里插入图片描述"></a></p><p>两个变量声明之间加入[Space]可在Inspector中添加一个空行；添加Header可在Inspector面板中加入一段文字，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> speed = <span class="number">1f</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> size = <span class="number">10</span>;</span><br></pre></td></tr></table></figure></div><p>执行效果：<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161647q8e8inx303nsnz8a.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161647q8e8inx303nsnz8a.jpg" class="lazyload" title="在这里插入图片描述"></a></p><p>在变量前加入Tooltip，当鼠标悬停在Inspector面板中的变量上时，可显示关于此变量的说明，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">Tooltip(<span class="meta-string">"移动速度"</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> speed = <span class="number">1f</span>;</span><br></pre></td></tr></table></figure></div><p>执行效果：<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161711gx31xkucrcechkw7.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161711gx31xkucrcechkw7.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="在Unit编辑器中访问Asset-Store"><a href="#在Unit编辑器中访问Asset-Store" class="headerlink" title="在Unit编辑器中访问Asset Store"></a>在Unit编辑器中访问Asset Store</h2><p>Asset Store可在Unity编辑器和网页浏览器中访问。（此条有充数嫌疑）</p><h2 id="合并场景"><a href="#合并场景" class="headerlink" title="合并场景"></a>合并场景</h2><p>在Project面板中，将一个场景文件拖到另外一个上，可将场景进行合并。</p><h2 id="创建游戏对象-数组元素副本快捷键"><a href="#创建游戏对象-数组元素副本快捷键" class="headerlink" title="创建游戏对象/数组元素副本快捷键"></a>创建游戏对象/数组元素副本快捷键</h2><p>选择一个游戏对象，使用快捷键Ctrl+D可快速创建该游戏对象的副本，同样的方法可创建数组元素的副本。</p><h2 id="组件预设"><a href="#组件预设" class="headerlink" title="组件预设"></a>组件预设</h2><p>当完成某个组件的属性设置后，可点击组件右上角的预设按钮，将当前属性设置保存为预设，方便后续进行组件设置时使用。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161736hd1fd0wq0bqrdv6v.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161736hd1fd0wq0bqrdv6v.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="遍历游戏对象所有子物体"><a href="#遍历游戏对象所有子物体" class="headerlink" title="遍历游戏对象所有子物体"></a>遍历游戏对象所有子物体</h2><p>可使用foreach循环遍历游戏对象的所有子物体，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (Transform child <span class="keyword">in</span> transform)</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(child.name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="通过脚本改变游戏对象在Hierarchy中的顺序"><a href="#通过脚本改变游戏对象在Hierarchy中的顺序" class="headerlink" title="通过脚本改变游戏对象在Hierarchy中的顺序"></a>通过脚本改变游戏对象在Hierarchy中的顺序</h2><p>使用transform.SetSiblingIndex方法可以设置游戏对象在Hierarchy面板中的顺序，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">transform.SetSiblingIndex(<span class="number">1</span>);</span><br></pre></td></tr></table></figure></div><p>以上代码实现在游戏运行时，设置游戏对象在Hierarchy面板中的顺序为同级节点中的第二个。</p><h2 id="保存选择状态"><a href="#保存选择状态" class="headerlink" title="保存选择状态"></a>保存选择状态</h2><p>当选择了多个游戏对象后，可在 Edit &gt; Selection 的子菜单中选择一个Save Selection项，暂存当前选择状态。选择Load Selection+对应的序号，即可恢复某个选择状态。此方法对跨节点选择多个对象的情况非常适用，这样将不必依次展开节点重新进行查找选择。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161819jtvzw62w9xz5de47.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161819jtvzw62w9xz5de47.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="region-和-endregion"><a href="#region-和-endregion" class="headerlink" title="#region 和 #endregion"></a>#region 和 #endregion</h2><p>使用#region 和 #endregion可以将两者之间包含的代码折叠，方便阅读。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161840hr12orw55q2wa57q.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161840hr12orw55q2wa57q.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="通过脚本暂定编辑器播放"><a href="#通过脚本暂定编辑器播放" class="headerlink" title="通过脚本暂定编辑器播放"></a>通过脚本暂定编辑器播放</h2><p>使用EditorApplication.isPaused可通过代码在编辑器播放时将其暂停，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Time.time &gt;= <span class="number">10f</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        EditorApplication.isPaused = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>需要引用命名空间UnityEditor。</p><h2 id="逐帧查看程序运行"><a href="#逐帧查看程序运行" class="headerlink" title="逐帧查看程序运行"></a>逐帧查看程序运行</h2><p>点击暂停按钮右侧的步进（Step）按钮，可以在程序运行时逐帧查看程序运行状态。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161903oggzgxzg5fj7jlwz.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161903oggzgxzg5fj7jlwz.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="查看游戏性能统计"><a href="#查看游戏性能统计" class="headerlink" title="查看游戏性能统计"></a>查看游戏性能统计</h2><p>点击Game窗口右上角的Stats按钮可以查看游戏性能统计数据，如帧率、批处理等指标。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161925y3djqz0sicl3cxy2.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161925y3djqz0sicl3cxy2.jpg" class="lazyload" title="在这里插入图片描述"></a></p><p>查看更加详细的分析数据，可使用Window &gt; Analysis &gt; Profiler工具；使用Profiler.BeginSample和Profiler.EndSample方法可在Profiler中查看函数的资源使用情况，如下代码所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">csharp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Profiler.BeginSample(<span class="string">"expensive"</span>);</span><br><span class="line">CalculateSomething();</span><br><span class="line">Profiler.EndSample();</span><br></pre></td></tr></table></figure></div><p>需要引入UnityEngine.Profiling命名空间。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161955clfpcb6v2lt2tzq6.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/161955clfpcb6v2lt2tzq6.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="弹出预览窗口"><a href="#弹出预览窗口" class="headerlink" title="弹出预览窗口"></a>弹出预览窗口</h2><p>通常情况下，项目资源在Inspector面板底部均有一个预览窗口。鼠标右键点击预览窗口顶部，可将该窗口弹出，作为独立窗口，放置在编辑器的任意位置。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162016qln9n8tzz9te88m9.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162016qln9n8tzz9te88m9.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="测试游戏时静音"><a href="#测试游戏时静音" class="headerlink" title="测试游戏时静音"></a>测试游戏时静音</h2><p>点击Game窗口右上角的Mute Audio按钮，可在编辑器播放时将所有声音关闭。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162038bdui3jetittyuvff.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162038bdui3jetittyuvff.jpg" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="InvokeRepeating方法"><a href="#InvokeRepeating方法" class="headerlink" title="InvokeRepeating方法"></a>InvokeRepeating方法</h2><p>InvokeRepeating能够按照一定的时间间隔反复执行某个函数，若不使用CancelInvoke方法，InvokeRepeating将持续执行，即使将方法所在的脚本关闭。</p><h2 id="Frame-Debugger"><a href="#Frame-Debugger" class="headerlink" title="Frame Debugger"></a>Frame Debugger</h2><p>使用Frame Debugger（Window &gt; Analysis &gt; Frame Debugger）可以查看每一帧的渲染过程。</p><h2 id="Physics-Debugger"><a href="#Physics-Debugger" class="headerlink" title="Physics Debugger"></a>Physics Debugger</h2><p>使用Physics Debugger（Window &gt; Analysis &gt; Physics Debugger）可以查看碰撞引起的异常，当开启Collision Geometry选项后，场景中所有游戏对象的碰撞体都将被绘制出来，而不用依次选择游戏对象进行检查。如下图所示，球体因为添加了不正确的Box Collider，在物理碰撞时必然不能达到预期的表现效果。<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162100ne3fx66get6bensn.jpg" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/162100ne3fx66get6bensn.jpg" class="lazyload" title="在这里插入图片描述"></a></p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      掌握一些Unity编辑器的小技巧，会让你开发以及使用更加快捷有效。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/categories/Software/Unity/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="Unity" scheme="https://tamsiree.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>VisualStudioCode中Settings Sync插件的基本用法</title>
    <link href="https://tamsiree.com/Software/VisualStudioCode/VisualStudioCode%E4%B8%ADSettings-Sync%E6%8F%92%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
    <id>https://tamsiree.com/Software/VisualStudioCode/VisualStudioCode%E4%B8%ADSettings-Sync%E6%8F%92%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</id>
    <published>2019-12-26T15:12:08.000Z</published>
    <updated>2020-01-13T11:44:26.071Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>自己平常工作生活中偶尔折腾系统，或许是因为驱动或者其他原因导致系统重装了，vscode的插件与配置等每次都需要单独记录一下然后再重新配置一遍，发现可以使用Settings Sync插件可以直接同步配置和插件。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1975534395-5b73c12c825ba_articlex.png" data-fancybox="group" data-caption="clipboard.png" class="fancybox"><img alt="clipboard.png" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1975534395-5b73c12c825ba_articlex.png" class="lazyload" title="clipboard.png"></a></p><h2 id="上传配置以及相关"><a href="#上传配置以及相关" class="headerlink" title="上传配置以及相关"></a>上传配置以及相关</h2><ul><li>首先在VSC中安装SettingsSync，安装完Settings Sync插件重启窗口之后按快捷键<code>Shift + Alt + U</code>准备上传你的配置，但是首次上传需要一个access token。</li><li>到GitHub个人设置创建一个新的access token。登录github，在[Personal access tokens]页面点击Generate New Token按钮</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2317606048-5b73c5af281e1_articlex.png" data-fancybox="group" data-caption="clipboard.png" class="fancybox"><img alt="clipboard.png" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/2317606048-5b73c5af281e1_articlex.png" class="lazyload" title="clipboard.png"></a></p><ul><li>输入<code>Token description</code>token的描述，勾选<code>gist</code>权限，</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1110566462-5b73c5dc835d4_articlex.png" data-fancybox="group" data-caption="clipboard.png" class="fancybox"><img alt="clipboard.png" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/1110566462-5b73c5dc835d4_articlex.png" class="lazyload" title="clipboard.png"></a></p><ul><li>用新建的Access Token上传你的配置和扩展记录</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/671610823-5b73c65e95ceb_articlex.png" data-fancybox="group" data-caption="clipboard.png" class="fancybox"><img alt="clipboard.png" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/671610823-5b73c65e95ceb_articlex.png" class="lazyload" title="clipboard.png"></a></p><p>回到vscode，在任意界面按 Alt + Shift + U，在对话框中输出刚才复制的 token。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8056318-9e56c8327172b494.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8056318-9e56c8327172b494.webp" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8056318-c18d2e32912c1958.webp" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/8056318-c18d2e32912c1958.webp" class="lazyload" title></a></p><p>再次按 Alt + Shift + U 完成配置上传，使用组合键 Alt + Shift + D 即可下载配置。</p><p>一切完成后会自动弹出<code>Gist ID</code>，控制台也会显示Gist ID，这意味着你的配置上传到了GitHub Gist，你可以在 <code>https://gist.github.com/{your_userName}/{gist_id}</code> 上查看具体的上传内容</p><p>在VS Code中修改<br>复制重新生成好的token</p><p>点击命令面板 或 Ctrl+Shift+P 输入 sync: 找到 Advanced Options 回车<br><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/4181780275-5c246e001cd68_articlex.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/4181780275-5c246e001cd68_articlex.png" class="lazyload" title></a></p><p>选中 Edit Extension Local Settings</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/531495797-5c246e3c67f93_articlex.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/531495797-5c246e3c67f93_articlex.png" class="lazyload" title></a></p><p>修改本地配置文件中的 token 属性就可以了</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/527372815-5c246ef664938_articlex.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/527372815-5c246ef664938_articlex.png" class="lazyload" title></a></p><p>找到配置文件修改<br>复制重新生成好的token</p><p>Win下：<code>C:\Users\Administrator\AppData\Roaming\Code\User</code><br>Mac下：<code>~/Library/Application Support/Code/User/syncLocalSettings.json</code><br>Linux下：<code>~/.config/Code/User/syncLocalSettings.json</code>  </p><p>进入目录后，找到 syncLocalSettings.json 这个文件，查找token，并替换后面复制的值，就可以顺利进行同步配置信息了。</p><blockquote><p>GitHub Gist: 28a47860089b3948b39775df2ffaaf4e</p></blockquote><h2 id="下载配置"><a href="#下载配置" class="headerlink" title="下载配置"></a>下载配置</h2><ul><li>快捷键<code>Shift + Alt + D</code>下载配置</li><li>首次下载需要输入你的Github Access Token.</li><li>然后输入 <code>Gist ID</code> 即可下载指定的配置，以及安装拓展，假如你有自定义扩展不在这个列表内，它们将被移除，你可以设置是否每次下载都直接移除旧的部分。</li></ul><p>大功告成！ 现在你就可以在任何机器上轻松复制你的IDE配置了，嗯，每次重装系统之后也能很快进入工作状态啦 (๑•̀ㅂ•́)و✧</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><p><a href="https://gist.github.com/" target="_blank" rel="noopener">Gist</a><br><a href="https://github.com/settings/tokens" target="_blank" rel="noopener">Personal access tokens</a><br><a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync" target="_blank" rel="noopener">Settings Sync – VSCode</a> </p></blockquote><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      自己平常工作生活中偶尔折腾系统，或许是因为驱动或者其他原因导致系统重装了，vscode的插件与配置等每次都需要单独记录一下然后再重新配置一遍，发现可以使用Settings Sync插件可以直接同步配置和插件。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="VisualStudioCode" scheme="https://tamsiree.com/categories/Software/VisualStudioCode/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="VisualStudioCode" scheme="https://tamsiree.com/tags/VisualStudioCode/"/>
    
  </entry>
  
  <entry>
    <title>SteamOS</title>
    <link href="https://tamsiree.com/OperationSystem/Linux/SteamOS/SteamOS/"/>
    <id>https://tamsiree.com/OperationSystem/Linux/SteamOS/SteamOS/</id>
    <published>2019-12-24T18:18:14.000Z</published>
    <updated>2019-12-30T06:08:14.804Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>SteamOS Beta 是 Steam 团队研发的 Linux 架构操作系统。该操作系统基于代号为 Debian Jessie 的 Debian 8 系统。它的工作始于 Debian 系统强劲的核心，并尽可能对其进行优化，使其拥有良好的客厅体验。最重要的是，它是开源的 Linux 平台，一切尽在您的掌控之内。您可以掌控您的系统，并且随心所欲地安装您想要的新软件或内容。</p><blockquote><p>可以查看这个 <a href="https://store.steampowered.com/steamos/buildyourown?l=schinese" target="_blank" rel="noopener">SteamOS官方描述</a>。</p></blockquote><hr><h1 id="安装和自定义-SteamOS"><a href="#安装和自定义-SteamOS" class="headerlink" title="安装和自定义 SteamOS"></a>安装和自定义 SteamOS</h1><h2 id="SteamOS-硬件需求如何？"><a href="#SteamOS-硬件需求如何？" class="headerlink" title="SteamOS 硬件需求如何？"></a>SteamOS 硬件需求如何？</h2><blockquote><p>处理器： <code>Intel</code> 或 AMD 64 位性能处理器<br>内存： <code>4GB</code> 或更多内存<br>硬盘驱动器： <code>200GB</code> 或更大磁盘空间<br>显卡： <code>NVIDIA</code> 显卡<br>　　　AMD 显卡（RADEON 8500 和更新）<br>　　　Intel 显卡<br>附注事项： 安装需要 USB 端口<br><code>UEFI</code> 固件（推荐）  </p></blockquote><hr><h2 id="我该如何安装-SteamOS？"><a href="#我该如何安装-SteamOS？" class="headerlink" title="我该如何安装 SteamOS？"></a>我该如何安装 SteamOS？</h2><p>您可以通过两种不同的方式安装 SteamOS。推荐方式就是自动安装方式：使用默认的磁盘配置进行安装。专业安装方式会使用 Debian 安装程序，允许您在经过自动安装步骤后进行自定义安装。请在以下安装方式中选择一种。</p><blockquote><p>警告：两种安装方式都将清除目标计算机上的所有内容</p></blockquote><h3 id="自动安装"><a href="#自动安装" class="headerlink" title="自动安装"></a>自动安装</h3><ol><li><a href="https://store.steampowered.com/steamos/download/?ver=custom" target="_blank" rel="noopener">下载 SteamOS 安装</a></li><li>解压 SteamOS.zip 到一个空的 FAT32 格式 U 盘。确保使用的是 MBR 分区。</li><li>将 U 盘插入您的目标机器。启动您的机器并在 BIOS 中选择从 U 盘启动。（通常在启动界面按下 F8、F11 或 F12 可以进入 BIOS 的启动菜单）。</li><li>确保您选择的是 UEFI 启动，该选项可能看起来是类似“UEFI: Patriot Memory PMAP”。如果没有 UEFI 启动的选项，您可能需要在 BIOS 设置中启用 UEFI 支持。</li><li>从菜单中选择“Automated install（会清除磁盘数据！）”。</li><li>剩余的安装设置将自动完成，之后会给驱动器重新分区并安装 SteamOS。</li><li>安装完成后，系统会重启，自动登入并安装 Steam。此时需要有互联网接入。如果您有互联网接入，Steam 会自动安装。如果您没有接入互联网（例如您需要连接至一个 WiFi 接入点），您将收到弹出提示告诉您接入互联网。关闭弹出的提示您将进入网络设置界面，在此设置您的网络。一旦您连接至互联网，关闭网络设置界面后 Steam 将开始安装。</li><li>在 Steam 完成安装后，您的系统将自动重启并创建一个系统分区的备份。</li><li>备份完成后，选择“reboot”来进入您全新安装好的 SteamOS</li></ol><h3 id="专业安装"><a href="#专业安装" class="headerlink" title="专业安装"></a>专业安装</h3><ol><li><a href="https://store.steampowered.com/steamos/download/?ver=custom" target="_blank" rel="noopener">下载 SteamOS 安装</a></li><li>解压 SteamOS.zip 到一个空的 FAT32 格式 U 盘。确保使用的是 MBR 分区。</li><li>将 U 盘插入您的目标机器。启动您的机器并在 BIOS 中选择从 U 盘启动。（通常在启动界面按下 F8、F11 或 F12 可以进入 BIOS 的启动菜单）。</li><li>确保您选择的是 UEFI 启动，该选项可能看起来是类似“UEFI: Patriot Memory PMAP”。如果没有 UEFI 启动的选项，您可能需要在 BIOS 设置中启用 UEFI 支持。</li><li>从菜单中选择“Expert install”。</li><li>选择您的首选语言，位置和键盘布局。</li><li>您可以选择更改默认的磁盘分区。</li><li>剩余的安装设置将自动完成，并且会安装 SteamOS。</li><li>安装完成后，系统会重启，自动登入并安装 Steam。此时需要有互联网接入。如果您有互联网接入，Steam 会自动安装。如果您没有接入互联网（例如您需要连接至一个 WiFi 接入点），您将收到弹出提示告诉您接入互联网。关闭弹出的提示您将进入网络设置界面，在此设置您的网络。一旦您连接至互联网，关闭网络设置界面后 Steam 将开始安装。</li><li>在 Steam 完成安装后，您的系统将自动重启并创建一个系统分区的备份。</li><li>备份完成后，选择“reboot”来进入您全新安装好的 SteamOS</li></ol><hr><h1 id="我的操作"><a href="#我的操作" class="headerlink" title="我的操作"></a>我的操作</h1><p>因为我本身的 <code>Alienware</code> 安装的是 <code>Manjaro</code> 系统，所以我便选择了 <code>VMWare</code> 虚拟机安装。<br>因此，此时需要 <code>SteamOS</code> 的 <code>ISO</code> 文件，因为<a href="https://store.steampowered.com/steamos/download/?ver=custom" target="_blank" rel="noopener">下载 SteamOS 安装</a>下载的是 <code>.zip</code> 文件,因此我先将其解压，然后再将其打包成 <code>ISO</code> 文件：</p><ol><li><p>首先安装 <code>cdrkit</code> 工具</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -S cdrkit</span><br></pre></td></tr></table></figure></div></li><li><p>然后将目标文件夹打包成为 <code>ISO</code> 文件</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkisofs -r -o &#x2F;home&#x2F;tamsiree&#x2F;Tam1T&#x2F;SteamOS.iso &#x2F;home&#x2F;tamsiree&#x2F;Tam1T&#x2F;系统镜像&#x2F;SteamOSInstaller&#x2F;</span><br></pre></td></tr></table></figure></div></li><li><p>最后用 <code>VMWare</code> 安装 <code>SteamOS</code> 系统。</p></li></ol><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      SteamOS Beta 是Steam团队研发的 Linux 架构操作系统。该操作系统基于代号为 Debian Jessie 的 Debian 8 系统。它的工作始于 Debian 系统强劲的核心，并尽可能对其进行优化，使其拥有良好的客厅体验。最重要的是，它是开源的 Linux 平台，一切尽在您的掌控之内。您可以掌控您的系统，并且随心所欲地安装您想要的新软件或内容。
    
    </summary>
    
    
      <category term="OperationSystem" scheme="https://tamsiree.com/categories/OperationSystem/"/>
    
      <category term="Linux" scheme="https://tamsiree.com/categories/OperationSystem/Linux/"/>
    
      <category term="SteamOS" scheme="https://tamsiree.com/categories/OperationSystem/Linux/SteamOS/"/>
    
    
      <category term="Steam" scheme="https://tamsiree.com/tags/Steam/"/>
    
      <category term="OperationSystem" scheme="https://tamsiree.com/tags/OperationSystem/"/>
    
      <category term="Linux" scheme="https://tamsiree.com/tags/Linux/"/>
    
      <category term="SteamOS" scheme="https://tamsiree.com/tags/SteamOS/"/>
    
  </entry>
  
  <entry>
    <title>Thunderbird问题归纳</title>
    <link href="https://tamsiree.com/Software/Thunderbird/Thunderbird%E9%97%AE%E9%A2%98%E5%BD%92%E7%BA%B3/"/>
    <id>https://tamsiree.com/Software/Thunderbird/Thunderbird%E9%97%AE%E9%A2%98%E5%BD%92%E7%BA%B3/</id>
    <published>2019-12-24T14:08:04.000Z</published>
    <updated>2020-01-13T11:51:00.692Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Mozilla Thunderbird 非常的好用的邮件客户端，虽然很多人都习惯在网页上收发邮件，不过还是有很多资深网民喜欢用本地邮件客户端收发邮件，这款Thunderbird推荐给大家使用。它是经过对 Mozilla 的邮件组件的进行重新设计后的产品，它可整合多个网络邮箱于一体，随时都能拉取邮件到本地处理，或者随时发送邮件。简单易用，功能强大，个性化配置，Thunderbird 邮件客户端带给你全方位的体验。Thunderbird 支持 IMAP 、POP 邮件协议以及 HTML 邮件格式。轻松导入您已有的邮件账号和信息。内置 RSS 技术, 功能强大的快速搜索, 自动拼写检查等。</p><p><a href="https://www.thunderbird.net/zh-CN/" target="_blank" rel="noopener">Thunderbird官网</a></p><h1 id="使用配置技巧"><a href="#使用配置技巧" class="headerlink" title="使用配置技巧"></a>使用配置技巧</h1><ol><li>用thunderbird接收非压缩包附件时候<br>默认会自动打开附件作为邮件正文来阅读。但是对于经常接收大文本附件的人来说就不好用了，经常会因为附件太大把邮件卡死机。<br>在工具–&gt;首选项–&gt;高级–&gt;高级配置–&gt;配置编辑器,找到 mail.inline_attachments，赋值选择 false。</li></ol><ol start="2"><li>默认thunderbird是将回复加在回复邮件的后面，可以通过修改配置项实现回复在前面，步骤如上，找到配置编辑器，将 mail.identity.default.reply_on_top 这一项由默认的0改为1即可。</li></ol><ol start="3"><li>如果附件为中文文件名，其他的邮件客户端有时候可能无法正确识别，通过修改配置可以解决这个问题，步骤依然如上，在配置编辑器中将选择 mail.strictly_mime.param_folding”,将其值设置为0或1。</li></ol><ol start="4"><li>让thunderbird回复或转发带着latest邮件的header信息，包括发件人收件人时间等，你可以直接安装”change quote and reply format”插件。虽然可以修 改本地配置项来实现，但是比较麻烦，喜欢的同学可以自己去弄弄。</li></ol><ol start="5"><li>thunderbird日历跟Google calendar同步<br>需要安装lighting 插件，Google 日历插件，之前在记录与手机配置同步的时候介绍过。</li></ol><ol start="6"><li><p>thunderbird设置签名档在回复内容之上<br>默认回复邮件时签名档是放在回复内容的后面（即整个邮件的结尾），这时可以设置一下“mail.identity.default.sig_bottom”这一开关项，默认是true，将其修改为false即可。</p></li><li><p>thunderbird在转发邮件是默认不带签名，可以设置一下  “mail.identity.default.sig_on_reply”选项，默认是true，将其修改为false转发邮件时就可以自动带上签名了。</p></li></ol><h1 id="接收服务器已存在"><a href="#接收服务器已存在" class="headerlink" title="接收服务器已存在"></a>接收服务器已存在</h1><p>昨天系统重做之后安装Thunderbird准备进行配置，却遇到了一个诡异的问题。</p><p>向里面添加主gmail账户时不停的报错说“接收服务器已存在”，而添加其他gmail账户却没有这个问题。实在是让人不知道是怎么回事，于是拉出度娘来，依然没有找到答案。话说用雷鸟有那么非主流吗？还是说我遇到的问题比较罕见？</p><p>“接收服务器已存在”的错误原文是incoming server already exists</p><p>最后终于通过google找到了“接收服务器已存在”这个错误在英文版里的原文，实在是感谢mozila连本地化文件都共享出来的精神啊。</p><p>不过解决方法简单的让人有点郁闷呢，这个问题只要重新启动雷鸟就可以解决了，连重启系统都不用……</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      Mozilla Thunderbird 非常的好用的邮件客户端，虽然很多人都习惯在网页上收发邮件，不过还是有很多资深网民喜欢用本地邮件客户端收发邮件，这款Thunderbird推荐给大家使用。它是经过对 Mozilla 的邮件组件的进行重新设计后的产品，它可整合多个网络邮箱于一体，随时都能拉取邮件到本地处理，或者随时发送邮件。简单易用，功能强大，个性化配置，Thunderbird 邮件客户端带给你全方位的体验。Thunderbird 支持 IMAP 、POP 邮件协议以及 HTML 邮件格式。轻松导入您已有的邮件账号和信息。内置 RSS 技术, 功能强大的快速搜索, 自动拼写检查等。
    
    </summary>
    
    
      <category term="Software" scheme="https://tamsiree.com/categories/Software/"/>
    
      <category term="Thunderbird" scheme="https://tamsiree.com/categories/Software/Thunderbird/"/>
    
    
      <category term="Software" scheme="https://tamsiree.com/tags/Software/"/>
    
      <category term="Thunderbird" scheme="https://tamsiree.com/tags/Thunderbird/"/>
    
  </entry>
  
  <entry>
    <title>考研英语作文</title>
    <link href="https://tamsiree.com/Research/%E8%8B%B1%E8%AF%AD/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87/"/>
    <id>https://tamsiree.com/Research/%E8%8B%B1%E8%AF%AD/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87/</id>
    <published>2019-11-29T12:34:37.000Z</published>
    <updated>2019-12-25T07:12:28.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>考研英语的大纲要求：</p><blockquote><p>要求根据所规定的情景或给出的提纲，写出一篇150词左右的英语说明文或议论文。<br>提供的场景的形式一般为 <a href="#往年图表形式分析">图表</a> 。共15分。</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/DeskTop/nzy2dv.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/DeskTop/nzy2dv.jpg" class="lazyload"></a></p><h1 id="往年图表形式分析"><a href="#往年图表形式分析" class="headerlink" title="往年图表形式分析"></a>往年图表形式分析</h1><table><thead><tr><th align="center">年份</th><th align="center">图表形式</th><th>主题</th></tr></thead><tbody><tr><td align="center">2010</td><td align="center">柱状图</td><td>发展中国家和发达国家手机用户量增长情况对比</td></tr><tr><td align="center">2011</td><td align="center">柱状图</td><td>国内汽车市场部分品牌份额变化</td></tr><tr><td align="center">2012</td><td align="center">表格</td><td>某公司不同年龄人群的工作满意度调查</td></tr><tr><td align="center">2013</td><td align="center">柱状图</td><td>大学生兼职比例逐年级递增</td></tr><tr><td align="center">2014</td><td align="center">柱状图</td><td>20年间城市人口与农村人口的变化</td></tr><tr><td align="center">2015</td><td align="center">饼状图</td><td>居民春节期间花销比例情况</td></tr><tr><td align="center">2016</td><td align="center">饼状图</td><td>高校学生旅行目的调查</td></tr><tr><td align="center">2017</td><td align="center">折线图</td><td>博物馆数量和参观人数的变化</td></tr><tr><td align="center">2018</td><td align="center">饼状图</td><td>顾客就餐时的考虑因素</td></tr><tr><td align="center">2019</td><td align="center">柱状图</td><td>高校本科毕业生的去向变化</td></tr></tbody></table><blockquote><p>柱状图： Bar Chart<br>表格： Table<br>饼状图： Pie Chart<br>折线图： Line Chart</p></blockquote><p>结论：</p><ol><li>主要考察数据图表；  </li><li>既有动态的数据变化图（柱状图、折线图）<br>又有静态的比例分配图（饼状图、表格）</li><li>话题聚焦生活场景与校园生活。</li></ol><hr><h1 id="范文"><a href="#范文" class="headerlink" title="范文"></a>范文</h1><h2 id="动态图"><a href="#动态图" class="headerlink" title="动态图"></a>动态图</h2><p>以2010年的英语作文为例：</p><blockquote><p>Directions:<br>In the section,you are asked to write an essay based on the following chart. In your writing,you should</p><ol><li>) interpret the chart and </li><li>) give your comments.<br>You should write at least 150 words.  </li></ol></blockquote><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191129210237.png" data-fancybox="group" data-caption="2010年" class="fancybox"><img alt="2010年" title="2010年" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191129210237.png" class="lazyload"></a></p><p>分为三段写，因此</p><p>第一段：</p><blockquote><p>In the light of  <code>bar chart</code>  above,it is evident that the period between <code>2000</code> and <code>2008</code> has witnessed dramatic changes in <code>mobile-phone subscriptions</code>.While the number of <code>cellphone subscriptions in developed countries</code> rose slightly from <code>about 0.6 billion</code> to <code>1 billion</code>,that <code>in developing countries</code> rocketed up from <code>around 0.5 billion</code> to <code>4 billion</code>.What’s more,the statistics of <code>developing countries exceeded that of its rival for the first time in 2003,and then rocketed up since 2005</code>.</p></blockquote><p>知识点提示：<br>描写比较数据的句式一般为：<br>while 句 1（相对不重要的部分），句 2（重点放在后面讲）</p><p>句 1：具体类别（主语）+ 变化趋势（谓语） + from …… to …… .</p><p>同义词：  </p><blockquote><p>大约：<br>about 、 nearly 、 around 、 roughly 、 some（后面加数字为大约的意思） 、 approximately</p></blockquote><blockquote><p>超过：<br>exceeded 、 pass 、 surpass</p></blockquote><p>短语：  </p><blockquote><p>witnessed dramatic changes in<br>在 …… 方面发生了巨大变化</p></blockquote><blockquote><p>rose slightly<br>上升缓慢（rose是rise的过去式）</p></blockquote><blockquote><p>rocketed up<br>像火箭般上升</p></blockquote><p>第二段：</p><blockquote><p>In effect,there are a host of accessible reasons,I reckon,that gave rise to this remarkable phenomenon.First and foremost,with the rapid advance of <code>economy</code>,those in developing countries became better off and attained increasingly greater purchasing power,which explains the sharp rise of <code>the smart-phone subscriptions there</code>. An equally critical factor is the significant improvement of <code>technology</code>, which ensured <code>the mass production of cellphones and affordable prices</code>,promoting <code>the phone industry in developing countries</code> to boom and flourish.</p></blockquote><p>第三段：</p><blockquote><p>Basing on the analysis above,we may safely conclude that <code>economy</code> and <code>technology</code> are two contributing factors for the thriving of <code>phone subscriptions</code>. Therefore,it is highly suggested that we strive to promote <code>economy</code> and <code>technology</code> in order to push forward <code>mobile-phone industry</code>.</p></blockquote><hr><h2 id="静态图"><a href="#静态图" class="headerlink" title="静态图"></a>静态图</h2><p>以2015年的英语作文为例：</p><blockquote><p>Directions:<br>In the section,you are asked to write an essay based on the following chart. In your writing,you should</p><ol><li>) interpret the chart and </li><li>) give your comments.<br>You should write at least 150 words.  </li></ol></blockquote><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191129225752.png" data-fancybox="group" data-caption="2015年" class="fancybox"><img alt="2015年" title="2015年" data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191129225752.png" class="lazyload"></a></p><p>分为三段写，因此</p><p>第一段：</p><blockquote><p>In the light of the <code>pie chart</code> above,there are dramatic differences in <code>the proportions of spending of Chinese citizens during the Spring Festival</code>.While the <code>expenses on transportation,taking dinner parties and others</code> account for <code>20%</code> respectively,that on <code>purchasing New Year&#39;s gifts</code> makes up <code>40%</code>,<code>which equals twice of each of the former three</code>.  </p></blockquote><p>第二段：</p><blockquote><p>In effect,there are a host of accessible reasons,I reckon,that gave rise to the remarkable phenomenon.First and foremost,it is a well-known fact that <code>Chinese place a high value on interpersonal relationship</code>,<code>constantly visiting and partying with relatives</code>,<code>friends as well as colleagues</code>,which explains <code>the huge expenses on gift-giving and dinner parties</code>. Besides,<code>during the Spring Festival,the most important holiday in China,nearly all those working far away from parents and children return home to reunite with their families,spending large sums of money on traffic fees.</code></p></blockquote><p>短语：  </p><blockquote><p>party with somebody<br>与某人聚会</p></blockquote><p>第三段：</p><blockquote><p>Basing on the analysis above,we may conclude that <code>with the continuous advance in economy and society</code>,this established trend will continue for quite a while in the future.And it is worth noting that <code>while viewing this consuming mode with respect,we should also cultivate an atmosphere of reasonable consumption</code>.</p></blockquote><hr><h1 id="图表描述词汇、词组及句型常用表达"><a href="#图表描述词汇、词组及句型常用表达" class="headerlink" title="图表描述词汇、词组及句型常用表达"></a>图表描述词汇、词组及句型常用表达</h1><h2 id="基本要素"><a href="#基本要素" class="headerlink" title="基本要素"></a>基本要素</h2><h3 id="类型："><a href="#类型：" class="headerlink" title="类型："></a>类型：</h3><blockquote><p>table, chart, diagram/graph, column chart, pie graph</p></blockquote><h3 id="描述："><a href="#描述：" class="headerlink" title="描述："></a>描述：</h3><blockquote><p>show, describe, illustrate, reveal, represent, can be seen from, clear, apparent</p></blockquote><h3 id="内容："><a href="#内容：" class="headerlink" title="内容："></a>内容：</h3><blockquote><p>figure, statistic, number, percentage, proportion</p></blockquote><h3 id="表示数据变化的单词或者词组-–动词"><a href="#表示数据变化的单词或者词组-–动词" class="headerlink" title="表示数据变化的单词或者词组 –动词"></a>表示数据变化的单词或者词组 –动词</h3><p>(1) 起伏、波动</p><blockquote><p>rise and fall, fluctuate, wave, undulate, rebound, recover</p></blockquote><p>(2) 高、低点值</p><blockquote><p>peak, reach a (high) peak/point，reach the bottom, reach a low point</p></blockquote><p>(3) 增加、上升、提高</p><blockquote><p>increase, grow, rise, climb, expand, ascend, skyrocket, soar</p></blockquote><p>(4) 减少、下降</p><blockquote><p>decrease, decline, fall, drop, descend, diminish, slide, shrink, collapse</p></blockquote><h3 id="形容词或副词"><a href="#形容词或副词" class="headerlink" title="形容词或副词"></a>形容词或副词</h3><p>(1)变化巨大</p><p>迅速的，飞快的， rapid / rapidly</p><p>戏剧性的，生动的 　dramatic / dramatically</p><p>有意义的，重大的 significant / significantly</p><p>锐利的，明显的 sharp / sharply</p><p>急剧升降的 steep / steeply</p><p>(2)变化平缓</p><p>稳固的，坚定不移的 　steady / steadily</p><p>渐进的，逐渐的 gradual / gradually</p><p>缓慢的，不活跃的 　slow / slowly</p><p>轻微的、略微地 slight / slightly</p><p>稳定的 stable / stably</p><h2 id="英语图表写作套句推荐"><a href="#英语图表写作套句推荐" class="headerlink" title="英语图表写作套句推荐"></a>英语图表写作套句推荐</h2><h3 id="图表的总体描述"><a href="#图表的总体描述" class="headerlink" title="图表的总体描述"></a>图表的总体描述</h3><ol><li><p>The table shows the changes in the number of……over the period from……to……</p></li><li><p>The data/statistics/figures lead us to the conclusion that……</p></li><li><p>As can be seen from the diagram, great changes have taken place in……/ the two curves show the fluctuation of……</p></li><li><p>From the table/chart/diagram/figure, we can see clearly that……or it is clear/apparent from the chart that……</p></li><li><p>This is a graph which illustrates……</p></li><li><p>The graph, …presented in a pie chart, shows the general trend in……</p></li><li><p>This is a column chart showing……</p></li></ol><h3 id="时间段表达方式"><a href="#时间段表达方式" class="headerlink" title="时间段表达方式"></a>时间段表达方式</h3><ol><li><p>over the period from…to…the…remained level.</p></li><li><p>in the year between……and……　</p></li><li><p>in the 3 years spanning from 1995 through 1998……</p></li><li><p>from then on/from this time onwards……　</p></li></ol><h2 id="数据变化表达方式"><a href="#数据变化表达方式" class="headerlink" title="数据变化表达方式"></a>数据变化表达方式</h2><h3 id="表示上升趋势的句型："><a href="#表示上升趋势的句型：" class="headerlink" title="表示上升趋势的句型："></a>表示上升趋势的句型：</h3><ol><li><p>the number sharply went up to……</p></li><li><p>the figures peaked at……in（month/year）</p></li><li><p>the situation reached a peak（a high point at） of[%].</p></li><li><p>a increased by……　</p></li><li><p>a increased to……</p></li><li><p>there is an upward trend in the number of……</p></li><li><p>a considerable increase/decrease occurred from……to……</p></li><li><p>……（year）witnessed/saw a sharp rise in……</p></li></ol><h3 id="表示下降趋势的句型："><a href="#表示下降趋势的句型：" class="headerlink" title="表示下降趋势的句型："></a>表示下降趋势的句型：</h3><ol><li><p>the figures/situation bottomed out in……</p></li><li><p>the figures reached the bottom/a low point/hit a trough.</p></li><li><p>from……to……the rate of decrease slow down.</p></li><li><p>from this year on，there was a gradual decline/ reduction in the……，reaching a figure of……</p></li></ol><h3 id="表示平稳趋势的句型："><a href="#表示平稳趋势的句型：" class="headerlink" title="表示平稳趋势的句型："></a>表示平稳趋势的句型：</h3><ol><li><p>the number of……remained steady/stable from （month/year） to （month/year）.</p></li><li><p>the percentage of…stayed the same between…and……</p></li><li><p>the percentage remained steady at……</p></li></ol><h3 id="表示比较的句型："><a href="#表示比较的句型：" class="headerlink" title="表示比较的句型："></a>表示比较的句型：</h3><ol><li><p>the percentage of…is slightly larger/smaller than that of</p></li><li><p>there is not a great deal of difference between……and……</p></li><li><p>…decreased year by year while……increased steadily.</p></li><li><p>there are a lot similarities/differences between……and……</p></li><li><p>a has something in common with b</p></li><li><p>the difference between a and b lies in……</p></li></ol><h3 id="表示倍数的句型："><a href="#表示倍数的句型：" class="headerlink" title="表示倍数的句型："></a>表示倍数的句型：</h3><ol><li><p>the graphs show a threefold increase in the number of……</p></li><li><p>a is ……times as much/many as b.</p></li></ol><hr><h1 id="例句"><a href="#例句" class="headerlink" title="例句"></a>例句</h1><h2 id="社科类（网络、科技、旅游等）"><a href="#社科类（网络、科技、旅游等）" class="headerlink" title="社科类（网络、科技、旅游等）"></a>社科类（网络、科技、旅游等）</h2><h3 id="网恋-cyber-romance"><a href="#网恋-cyber-romance" class="headerlink" title="网恋 cyber romance"></a>网恋 cyber romance</h3><p>With the development of internet , cyber romance has gradually become increasingly popular among people .</p><p>随着网络的发展，网恋在人们中逐渐流行起来。</p><h3 id="网购-online-shopping"><a href="#网购-online-shopping" class="headerlink" title="网购 online shopping"></a>网购 online shopping</h3><p>Online shopping has revolutionized the consumer experience .</p><p>网购已经使消费者的购物体验发生了革命性的变化。</p><h3 id="团购-group-buying"><a href="#团购-group-buying" class="headerlink" title="团购 group buying"></a>团购 group buying</h3><p>Not everyone thinks group-buying and shopping online is the best way to save money .</p><p>并非所有的人都认为团购和网上购物是省钱的最佳途径。</p><h3 id="秒杀-sec-kill"><a href="#秒杀-sec-kill" class="headerlink" title="秒杀 sec-kill"></a>秒杀 sec-kill</h3><h3 id="网店-online-shop-store"><a href="#网店-online-shop-store" class="headerlink" title="网店 online shop/store"></a>网店 online shop/store</h3><p>To give our customers a greater choice , we keep updating our range of products on our online shop regularly .</p><p>网上商店的货品亦会定期更新，为我们的顾客提供新鲜感。</p><p>Whether you’re working on a portfolio website , online store or Web app , making your pages easy and enjoyable for your visitors to use is key .</p><p>无论你是在做一个作品集网站、网上商店还是网络应用，让你的页面对用户来说可以容易和快乐的使用是一个关键。</p><h3 id="信誉-credit"><a href="#信誉-credit" class="headerlink" title="信誉 credit"></a>信誉 credit</h3><p>Credit is the life-blood of the consumer society .</p><p>信誉是消费界的生命线。</p><h3 id="退款-refund"><a href="#退款-refund" class="headerlink" title="退款 refund"></a>退款 refund</h3><p>Ask for a refund if the goods are faulty .</p><p>商品如有缺陷，可要求退款。</p><h3 id="科学技术-science-and-technology"><a href="#科学技术-science-and-technology" class="headerlink" title="科学技术 science and technology"></a>科学技术 science and technology</h3><p>Science and technology have made major changes to the way we live .</p><p>科技极大地改变了我们的生活方式。</p><h3 id="电脑犯罪-computer-crime"><a href="#电脑犯罪-computer-crime" class="headerlink" title="电脑犯罪 computer crime"></a>电脑犯罪 computer crime</h3><p>Sabotage is also an increasingly common type of computer crime .</p><p>蓄意破坏也是日益增加的普遍的电脑犯罪。</p><h3 id="电子商务-e-commerce"><a href="#电子商务-e-commerce" class="headerlink" title="电子商务 e-commerce"></a>电子商务 e-commerce</h3><p>The first law of e-commerce is that if users cannot find the product , they cannot buy it either .</p><p>电子商务的第一法则是，如果用户不能找到商品，他们就不会购买它。</p><h3 id="虚拟生活-virtual-life"><a href="#虚拟生活-virtual-life" class="headerlink" title="虚拟生活 virtual life"></a>虚拟生活 virtual life</h3><p>Most players live out virtual life with more than one character , as if they are trying out various facets of their persona .</p><p>另外，绝大多数的玩家都会在他们的虚拟生活中扮演多个角色，就好象他们要去尝试其人格中的多种面貌一样。</p><h3 id="信息时代-information-era"><a href="#信息时代-information-era" class="headerlink" title="信息时代 information era"></a>信息时代 information era</h3><p>Along with the coming of information era , cellphone has become necessary consumer goods .</p><p>随着信息时代的到来，手机已成为人们离不开的消费品。</p><h3 id="网上冲浪-surf-the-Internet"><a href="#网上冲浪-surf-the-Internet" class="headerlink" title="网上冲浪 surf the Internet"></a>网上冲浪 surf the Internet</h3><p>But keeping in mind that the netbook is primarily used to surf the Internet , those dangers are possibly multiplied many-fold , especially if there is no anti-virus software installed in the machine .</p><p>尤其需要提高警惕的是，上网本的主要用途是网上冲浪，因此其遭遇危险的可能性加倍，尤其是如果上网本没有安装反病毒软件的话。</p><h3 id="电子书-electronic-book"><a href="#电子书-electronic-book" class="headerlink" title="电子书 electronic book"></a>电子书 electronic book</h3><p>The electronic book is a new type of book which is developing rapidly , and its appearance is a challenge to the mode of traditional knowledge propagation and copyright protection .</p><p>电子书是近年来快速发展的新型图书形式，它的出现对传统的著作权及其保护方式提出了尖锐的挑战。</p><h3 id="网拍麻豆-net-model"><a href="#网拍麻豆-net-model" class="headerlink" title="网拍麻豆 net model"></a>网拍麻豆 net model</h3><h3 id="浏览器购物-monitor-shopping"><a href="#浏览器购物-monitor-shopping" class="headerlink" title="浏览器购物 monitor shopping"></a>浏览器购物 monitor shopping</h3><h3 id="橱窗购物-window-shopping"><a href="#橱窗购物-window-shopping" class="headerlink" title="橱窗购物 window shopping"></a>橱窗购物 window shopping</h3><p>Almost every shop is full of special offers and bargains , which can make it hard to just go window shopping .</p><p>几乎每家商店都有特价，打折活动，这使得要做到光看不买的去逛商店变得太难了。</p><h3 id="网络书评-internet-book-review"><a href="#网络书评-internet-book-review" class="headerlink" title="网络书评 internet book review"></a>网络书评 internet book review</h3><p>His paper takes internet book review as an example to analyse present situation of library and give several suggestions for library’s internet book review .</p><p>文章以网络书评服务为例，分析了目前图书馆网络书评工作的现状，提出了加强图书馆网络书评服务工作的几点建议。</p><h3 id="网上纠纷-online-dispute"><a href="#网上纠纷-online-dispute" class="headerlink" title="网上纠纷 online dispute"></a>网上纠纷 online dispute</h3><p>With the rapid development of electronic commerce , more and more online disputes appear . Because the characteristic of online dispute , network becomes the best choice .</p><p>电子商务的飞速发展使得以其为基础的网上纠纷也越来越多，网上纠纷的特殊性使得其通过特殊的方式即网络来解决成为首选。</p><h3 id="恶性骚扰-malicious-harassment"><a href="#恶性骚扰-malicious-harassment" class="headerlink" title="恶性骚扰 malicious harassment"></a>恶性骚扰 malicious harassment</h3><p>Malicious harassment as the development of the telecommunications industry has become intensified , result in serious harm to society .</p><p>恶意短信骚扰随着电信行业的发展变得愈演愈烈，给社会带来严重的危害。</p><h3 id="品质保证-quality-guarantee"><a href="#品质保证-quality-guarantee" class="headerlink" title="品质保证 quality guarantee"></a>品质保证 quality guarantee</h3><p>Good management of classroom discipline problems is to develop the teaching job premise , harmonious classroom environment is to improve the classroom teaching quality guarantee .</p><p>管理好课堂纪律问题是开展教学工作的前提，和谐的课堂环境是提高课堂教学质量的保证。</p><hr><h2 id="教育类（就业率、毕业生工资、留学人数等）"><a href="#教育类（就业率、毕业生工资、留学人数等）" class="headerlink" title="教育类（就业率、毕业生工资、留学人数等）"></a>教育类（就业率、毕业生工资、留学人数等）</h2><h3 id="培养-cultivate"><a href="#培养-cultivate" class="headerlink" title="培养 cultivate"></a>培养 cultivate</h3><p>We must cultivate their ability to analyze and solve problems .</p><p>我们必须培养他们分析问题，解决问题的能力。</p><h3 id="课余的-extracurricular"><a href="#课余的-extracurricular" class="headerlink" title="课余的 extracurricular"></a>课余的 extracurricular</h3><p>A great many American campuses and communities have organized special extracurricular activities for students from other countries .</p><p>许多美国校园和社团都为来自其他国家的学生组织了特别的课外活动。</p><h3 id="填鸭式-duck-stuffing"><a href="#填鸭式-duck-stuffing" class="headerlink" title="填鸭式 duck-stuffing"></a>填鸭式 duck-stuffing</h3><p>Simultaneously , the great pressure of college entrance examination and “ duck-stuffing “ teaching cause the loss of senior students’ happiness in learning English .</p><p>同时，巨大的升学压力和“填鸭式”课堂教学，造成高中学生英语学习幸福感的缺失。</p><h3 id="文凭热-diploma-craze"><a href="#文凭热-diploma-craze" class="headerlink" title="文凭热 diploma craze"></a>文凭热 diploma craze</h3><h3 id="教学改革-educational-reform"><a href="#教学改革-educational-reform" class="headerlink" title="教学改革 educational reform"></a>教学改革 educational reform</h3><p>As college educational reform goes further and further , the disadvantaged groups in college were paid extensive attention .</p><p>随着高校教育改革的不断深入，高校中弱势群体得到了社会的广泛关注。</p><h3 id="学术的-academic"><a href="#学术的-academic" class="headerlink" title="学术的 academic"></a>学术的 academic</h3><p>Students’ interests are mostly limited to the academic realm .</p><p>学生们的兴趣大多限于学术领域。</p><h3 id="创新学习-innovative-learning"><a href="#创新学习-innovative-learning" class="headerlink" title="创新学习 innovative learning"></a>创新学习 innovative learning</h3><p>The evaluation of students innovative learning behaviors is an important link and effective means of guiding students innovative learning .</p><p>学生创新学习行为评价是创新学习指导的一个重要环节和有效手段。</p><h3 id="高等教育-higher-education"><a href="#高等教育-higher-education" class="headerlink" title="高等教育 higher education"></a>高等教育 higher education</h3><p>We improved the overall quality of higher education , and enhanced the innovation capacity of colleges and universities .</p><p>全面提高高等教育质量和水平，增强高校创新能力。</p><h3 id="考研热-the-craze-for-graduate-school"><a href="#考研热-the-craze-for-graduate-school" class="headerlink" title="考研热 the craze for graduate school"></a>考研热 the craze for graduate school</h3><h3 id="贫困学生-poverty-stricken-students"><a href="#贫困学生-poverty-stricken-students" class="headerlink" title="贫困学生 poverty-stricken students"></a>贫困学生 poverty-stricken students</h3><p>In recent years , the succor of poverty-stricken college students has become a hot issue , which has attracted great concern of the society .</p><p>贫困生救助问题是近几年广受社会关注的热点问题。</p><h3 id="全体教员-faculty"><a href="#全体教员-faculty" class="headerlink" title="全体教员 faculty"></a>全体教员 faculty</h3><p>For the faculty , there exists the triad of responsibilities : teaching , research , and service .</p><p>教员要承担三重责任：教学、研究与服务。</p><h3 id="深造-further-one’s-study"><a href="#深造-further-one’s-study" class="headerlink" title="深造 further one’s study"></a>深造 further one’s study</h3><p>In 2002 he was awarded the Hong Kong Jockey Club Dance Scholarship to further his study at the National Conservatoire of Music and Dance in Paris .</p><p>在校期间，黎氏曾获取多项奖学金，2002年考获香港赛马会舞蹈基金，远赴巴黎国家音乐及舞蹈学院深造。</p><h3 id="素质教育-quality-education"><a href="#素质教育-quality-education" class="headerlink" title="素质教育 quality education"></a>素质教育 quality education</h3><p>The essence of quality education is an educational ideology , a philosophy of education .</p><p>素质教育是我国教育方针精神实质的一种教育思想，一种教育理念。</p><h3 id="培养能力-foster-abilities"><a href="#培养能力-foster-abilities" class="headerlink" title="培养能力 foster abilities"></a>培养能力 foster abilities</h3><p>The tasks of prose teaching are to acquire knowledge , foster abilities , edify sentiment and irradiate the mind .</p><p>散文教学的任务是获取知识，培养能力，陶冶情操，启迪心智。</p><h3 id="品学兼优-be-a-students-of-fine-qualities-and-fine-scholar"><a href="#品学兼优-be-a-students-of-fine-qualities-and-fine-scholar" class="headerlink" title="品学兼优 be a students of fine qualities and fine scholar"></a>品学兼优 be a students of fine qualities and fine scholar</h3><h3 id="适应社会的改变-adjust-to-the-social-changes-quickly"><a href="#适应社会的改变-adjust-to-the-social-changes-quickly" class="headerlink" title="适应社会的改变 adjust to the social changes quickly"></a>适应社会的改变 adjust to the social changes quickly</h3><h3 id="满足社会的急需-meet-the-urgent-need-of-the-society"><a href="#满足社会的急需-meet-the-urgent-need-of-the-society" class="headerlink" title="满足社会的急需 meet the urgent need of the society"></a>满足社会的急需 meet the urgent need of the society</h3><h3 id="努力获得精神文明-make-efforts-to-seek-cultural-and-ideological-progress"><a href="#努力获得精神文明-make-efforts-to-seek-cultural-and-ideological-progress" class="headerlink" title="努力获得精神文明 make efforts to seek cultural and ideological progress"></a>努力获得精神文明 make efforts to seek cultural and ideological progress</h3><hr><h2 id="经济类"><a href="#经济类" class="headerlink" title="经济类"></a>经济类</h2><h3 id="经济-economy"><a href="#经济-economy" class="headerlink" title="经济 economy"></a>经济 economy</h3><p>The economy is expanding , notching up high growth rates .</p><p>经济在发展，实现了高增长率。</p><h3 id="繁荣-boom"><a href="#繁荣-boom" class="headerlink" title="繁荣 boom"></a>繁荣 boom</h3><p>An economic boom followed , especially in housing and construction .</p><p>接着出现了经济繁荣，尤其是在房地产业和建筑业。</p><h3 id="零售-retail"><a href="#零售-retail" class="headerlink" title="零售 retail"></a>零售 retail</h3><p>Unemployment is rising again and retail buying has fallen off .</p><p>失业率再次上升，零售品购买量下降。</p><h3 id="促销-promote-sales"><a href="#促销-promote-sales" class="headerlink" title="促销 promote sales"></a>促销 promote sales</h3><p>Despite the short-term cost burden , the development of the economy will promote sales , bringing more opportunities to enterprises .</p><p>虽然对企业有短期成本压力，但经济持续发展，市场销售增加能给企业带来更多机会。</p><h3 id="管理-management"><a href="#管理-management" class="headerlink" title="管理 management"></a>管理 management</h3><p>Scientific management promotes production .</p><p>科学管理推动了生产。</p><h3 id="金融-finance-commerce-commercial"><a href="#金融-finance-commerce-commercial" class="headerlink" title="金融 finance , commerce/commercial"></a>金融 finance , commerce/commercial</h3><p>Reform in finance , taxation , banking , distribution , housing , government institutions and other areas has continued to deepen .</p><p>财税、金融、流通、住房和政府机构等改革继续深化。</p><p>Region economy and Commerce collectivize are one of fundamental trends that current world economy grows .</p><p>区域经济和贸易集团化是当今世界经济发展的重要趋势之一。</p><p>Universities are turning from academic to commercial sponsorship .</p><p>各大学正从学术赞助转而寻求商业赞助。</p><h3 id="经济全球化-economic-globalization"><a href="#经济全球化-economic-globalization" class="headerlink" title="经济全球化 economic globalization"></a>经济全球化 economic globalization</h3><p>The world is moving further toward multi-polarization and economic globalization .</p><p>世界多极化和经济全球化趋势进一步发展。</p><h3 id="可持续发展-sustainable-development"><a href="#可持续发展-sustainable-development" class="headerlink" title="可持续发展 sustainable development"></a>可持续发展 sustainable development</h3><p>Sustainable development of circular economy is an inevitable choice .</p><p>循环经济是可持续发展的必然选择。</p><h3 id="不正当竞争-unfair-competition"><a href="#不正当竞争-unfair-competition" class="headerlink" title="不正当竞争 unfair competition"></a>不正当竞争 unfair competition</h3><p>No functionary may support or cover up unfair competition acts .</p><p>国家官员不得支持、包庇不正当竞争行为。</p><h3 id="假冒伪劣产品-fake-and-inferior-product"><a href="#假冒伪劣产品-fake-and-inferior-product" class="headerlink" title="假冒伪劣产品 fake and inferior product"></a>假冒伪劣产品 fake and inferior product</h3><p>In my opinion , several strong measures should be adopted to deal with fake and inferior products .</p><p>依我看，必须采取若干有力措施来对付假冒伪劣产品。</p><h3 id="打假-crack-down-on-fake-commodities"><a href="#打假-crack-down-on-fake-commodities" class="headerlink" title="打假 crack down on fake commodities"></a>打假 crack down on fake commodities</h3><p>We should unswervingly crack down on illegal activities such as manufacturing and marketing fake commodities , tax evasion and smuggling .</p><p>坚持不懈地打击制售假冒伪劣产品、偷税、走私等违法犯罪活动。</p><h3 id="购买力-purchasing-power"><a href="#购买力-purchasing-power" class="headerlink" title="购买力 purchasing power"></a>购买力 purchasing power</h3><p>Inflation reduces the purchasing power of people living on fixed incomes .</p><p>靠固定收入生活的人其购买力因通货膨胀而下降。</p><h3 id="激烈竞争-fierce-competition"><a href="#激烈竞争-fierce-competition" class="headerlink" title="激烈竞争 fierce competition"></a>激烈竞争 fierce competition</h3><p>It has thus indirectly promoted fierce competition in international banking .</p><p>因此，这间接促进了国际银行市场的激烈竞争。</p><h3 id="售后服务-after-sale-service"><a href="#售后服务-after-sale-service" class="headerlink" title="售后服务 after-sale service"></a>售后服务 after-sale service</h3><p>Complaint is piling up about the after-sale service .</p><p>人们对售后服务抱怨日益增多。</p><h3 id="生计问题-bread-and-butter-issue"><a href="#生计问题-bread-and-butter-issue" class="headerlink" title="生计问题 bread-and-butter issue"></a>生计问题 bread-and-butter issue</h3><p>He doesn’t just write for fun ; writing is his bread and butter .</p><p>他写作并不只是为了乐趣，那是他的谋生方式。</p><h3 id="企业形象-enterprise-image"><a href="#企业形象-enterprise-image" class="headerlink" title="企业形象 enterprise image"></a>企业形象 enterprise image</h3><p>According to the reasons of the enterprise crisis , this essay argues how to prevent the enterprise crisis , how to deal with it and how to restore the enterprise image after the crisis .</p><p>文章针对企业危机产生的原因，就如何进行企业危机预防、企业危机发生后如何处理、危机结束后如何恢复企业形象等问题进行了论述。</p><h3 id="信用危机-credit-crisis"><a href="#信用危机-credit-crisis" class="headerlink" title="信用危机 credit crisis"></a>信用危机 credit crisis</h3><p>The credit crisis has produced an avalanche of problems and also of explanations .</p><p>信贷危机带来了成堆的问题，也带来了各种解释。</p><h3 id="稳定物价-stabilize-prices"><a href="#稳定物价-stabilize-prices" class="headerlink" title="稳定物价 stabilize prices"></a>稳定物价 stabilize prices</h3><p>The chief issue of stabilizing the economy is how to stabilize prices .</p><p>稳定经济的首要问题是稳定物价。</p><h3 id="品牌效应-brand-effect"><a href="#品牌效应-brand-effect" class="headerlink" title="品牌效应 brand effect"></a>品牌效应 brand effect</h3><p>There has been a growing awareness among company owners in the importance of brand effect .</p><p>企业家越来越意识到品牌效应的重要性。</p><h3 id="流行的消遣方式-popular-pastime"><a href="#流行的消遣方式-popular-pastime" class="headerlink" title="流行的消遣方式 popular pastime"></a>流行的消遣方式 popular pastime</h3><p>Blowing cyberkisses has become a popular pastime in emerging markets too .</p><p>网上恋爱也成为新兴市场中的流行消遣。</p><hr><h2 id="管理类"><a href="#管理类" class="headerlink" title="管理类"></a>管理类</h2><h3 id="资本-capital"><a href="#资本-capital" class="headerlink" title="资本 capital"></a>资本 capital</h3><p>Land , labor and capital are all productive of wealth .</p><p>土地、劳动和资本都能创造财富。</p><h3 id="债券-bond"><a href="#债券-bond" class="headerlink" title="债券 bond"></a>债券 bond</h3><p>The eight-year bond will bear annual interest of 10.5% .</p><p>这种8年期的债券年利率为10.5%。</p><h3 id="预算-budget"><a href="#预算-budget" class="headerlink" title="预算 budget"></a>预算 budget</h3><p>This budget will have a net expansionary effect on the economy .</p><p>本预算对经济的发展最终会有促进作用。</p><h3 id="没收-confiscate"><a href="#没收-confiscate" class="headerlink" title="没收 confiscate"></a>没收 confiscate</h3><p>The copyright administrative authorities may confiscate their illegal income or impose a fine on them .</p><p>由著作权行政管理部门给予没收非法所得、罚款等行政处分。</p><h3 id="拨款-appropriate"><a href="#拨款-appropriate" class="headerlink" title="拨款 appropriate"></a>拨款 appropriate</h3><p>The legislature appropriated funds for the university .</p><p>立法机关拨款作为大学经费。</p><h3 id="公司-corporation"><a href="#公司-corporation" class="headerlink" title="公司 corporation"></a>公司 corporation</h3><p>It takes brains to administer upon a large corporation .</p><p>管理一家大公司需要智慧。</p><h3 id="贸易顺差-active-trade-balance"><a href="#贸易顺差-active-trade-balance" class="headerlink" title="贸易顺差 active trade balance"></a>贸易顺差 active trade balance</h3><p>We also have faced a serious problem of active trade balance which has lasted for 14 years began from year 1994 and is presenting an enlarging trend recently .</p><p>自1994年以来，我国已经保持了14年的贸易顺差，并且呈现出不断扩大的态势。</p><h3 id="贸易逆差-adverse-trade-balance"><a href="#贸易逆差-adverse-trade-balance" class="headerlink" title="贸易逆差 adverse trade balance"></a>贸易逆差 adverse trade balance</h3><p>The total trade volume in imports and exports of mineral products reached US$160 billion in 2003 in China with the adverse trade balance growing .</p><p>伴随着贸易逆差的不断扩大，2003年中国进出口矿产品贸易总额达1600亿美元。</p><h3 id="审计员、查帐员-auditor"><a href="#审计员、查帐员-auditor" class="headerlink" title="审计员、查帐员 auditor"></a>审计员、查帐员 auditor</h3><p>The audit report has been used to influence the auditor’s legal liability .</p><p>审计报告对审计人员的法律责任同样会产生重要影响。</p><h3 id="资产负债表-balance-sheet"><a href="#资产负债表-balance-sheet" class="headerlink" title="资产负债表 balance sheet"></a>资产负债表 balance sheet</h3><p>Cash is listed first in the balance sheet , because it is the most liquid of all current assets .</p><p>在所有的资产中，现金最具有流动性，因此，它作为流动资产的第一项列示于资产负债表上。</p><h3 id="便宜货-bargain"><a href="#便宜货-bargain" class="headerlink" title="便宜货 bargain"></a>便宜货 bargain</h3><p>Sometimes I like hunting a bargain at Taobao.com .</p><p>有时候我喜欢在淘宝网上淘便宜货。</p><h3 id="董事会-hoard-of-directors"><a href="#董事会-hoard-of-directors" class="headerlink" title="董事会 hoard of directors"></a>董事会 hoard of directors</h3><p>The Board of Directors has approved the decision unanimously .</p><p>董事会成员一致批准了该项决定。</p><h3 id="盈亏表-bottom-line"><a href="#盈亏表-bottom-line" class="headerlink" title="盈亏表 bottom line"></a>盈亏表 bottom line</h3><p>These small promotions were costly and they did nothing to increase his bottom line .</p><p>这些小规模的促销活动成本很高，而且对增加他的最终效益没什么贡献。</p><h3 id="生意兴隆-brisk"><a href="#生意兴隆-brisk" class="headerlink" title="生意兴隆 brisk"></a>生意兴隆 brisk</h3><p>Rices are stable and the market is brisk .</p><p>物价稳定，市场繁荣。</p><h3 id="泡沫经济-bubble-economy"><a href="#泡沫经济-bubble-economy" class="headerlink" title="泡沫经济 bubble economy"></a>泡沫经济 bubble economy</h3><p>Bubble economy usually starts with false prosperity and ends in a breakout of crises .</p><p>泡沫经济通常以虚假繁荣开始，以危机爆发告终。</p><h3 id="商业重组-business-restructuring"><a href="#商业重组-business-restructuring" class="headerlink" title="商业重组 business restructuring"></a>商业重组 business restructuring</h3><p>With the globalization of market competition , enterprises must adapt to changing demand and continuous changes in personality , and provide fast and efficient software support for enterprise business restructuring and development to improve collaboration efficiency and its competitiveness .</p><p>随着市场竞争的全球化，企业必须适应千变万化的个性需求和持续的变革，并对企业业务的重组和发展提供快速高效的软件支持，以提高协同工作效率和自身竞争力。</p><h3 id="货物清单-cargo-manifest"><a href="#货物清单-cargo-manifest" class="headerlink" title="货物清单 cargo manifest"></a>货物清单 cargo manifest</h3><p>Arriving cargo should be reconciled against information on the cargo manifest .</p><p>被装运后将要离岸的货物应该与货物单的信息相符。</p><h3 id="商品展销会-commodities-fair"><a href="#商品展销会-commodities-fair" class="headerlink" title="商品展销会 commodities fair"></a>商品展销会 commodities fair</h3><p>The Chinese export commodities fair offers an opportunity to meet many current friends in one place for business discussion , and to meet new friends that will open new business relationships .</p><p>中国出口商品交易会提供了一个机会，让我们在一个地方会见很多老朋友，商洽业务；又可遇见新朋友，开创新的贸易关系。</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      考研加油！
    
    </summary>
    
    
      <category term="Research" scheme="https://tamsiree.com/categories/Research/"/>
    
      <category term="英语" scheme="https://tamsiree.com/categories/Research/%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="Research" scheme="https://tamsiree.com/tags/Research/"/>
    
      <category term="英语" scheme="https://tamsiree.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>伪代码</title>
    <link href="https://tamsiree.com/Research/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/PseudoCode/%E4%BC%AA%E4%BB%A3%E7%A0%81/"/>
    <id>https://tamsiree.com/Research/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/PseudoCode/%E4%BC%AA%E4%BB%A3%E7%A0%81/</id>
    <published>2019-11-24T13:01:51.000Z</published>
    <updated>2019-12-25T07:12:28.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>伪代码（Pseudocode）是一种算法描述语言。<br>使用伪代码的目的是为了使被描述的算法可以容易地以任何一种编程语言（Pascal，C，Java，etc）实现。<br>因此，伪代码必须结构清晰、代码简单、可读性好，并且类似自然语言。<br>介于自然语言与编程语言之间。</p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/code-wallpaper-15.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/code-wallpaper-15.jpg" class="lazyload"></a></p><p>它以编程语言的书写形式指明算法的职能。<br>相比于程序语言（例如Java, C++,C, Dephi 等等）它更类似自然语言。<br>它是半角式化、不标准的语言。<br>我们可以将整个算法运行过程的结构用接近自然语言的形式（这里，你可以使用任何一种你熟悉的文字，中文，英文 等等，关键是你把你程序的意思表达出来）描述出来。<br>使用伪代码, 可以帮助我们更好的表述算法, 不用拘泥于具体的实现。</p><p>人们在用不同的编程语言实现同一个算法时意识到，他们的实现（注意:这里是实现,不是功能）很不同。  </p><blockquote><p>尤其是对于那些熟练于不同编程语言的程序员要理解一个 (用其他编程语言编写的程序的) 功能时可能很难，因为程序语言的形式限制了程序员对程序关键部分的理解。 </p></blockquote><p>这样伪代码就应运而生了。</p><p>当考虑算法功能（而不是其语言实现）时，伪代码常常得到应用。<br>计算机科学在教学中通常使用虚拟码，以使得所有的程序员都能理解。</p><blockquote><p>综上，简单的说，让人便于理解的代码。<br>不依赖于语言的，用来表示程序执行过程，而不一定能编译运行的代码。<br>在数据结构讲算法的时候用的很多。 </p></blockquote><h1 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h1><p>例如，类Pascal语言的伪代码的语法规则是： 在伪代码中，每一条指令占一行（else if，例外）。<br>指令后不跟任何符号（Pascal和C中语句要以分号结尾）。<br>书写上的“缩进”表示程序中的分支程序结构。<br>这种缩进风格也适用于if-then-else语句。<br>用缩进取代传统 Pascal 中的 begin 和 end 语句来表示程序的块结构可以大大提高代码的清晰性；同一模块的语句有相同的缩进量，次一级模块的语句相对与其父级模块的语句缩进。</p><p>算法的伪代码语言在某些方面可能显得不太正规，但是给我们描述算法提供了很多方便，并且可以使我们忽略算法实现中很多麻烦的细节。<br>通常每个算法开始时都要描述它的输入和输出，而且算法中的每一行都给编上号码，在解释算法的过程中会经常使用算法步骤中的行号来指代算法的步骤。<br>算法的伪代码描述形式上并不是非常严格，其主要特性和通常的规定如下：</p><ol><li>算法中出现的数组、变量可以是以下类型：整数、实数、字符、位串或指针。<br>通常这些类型可以从算法的上下文来看是清楚的，并不需要额外加以说明。  </li><li>在算法中的某些指令或子任务可以用文字来叙述，例如，”设x是A中的最大项”，这里A是一个数组；或者”将x插入L中”，这里L是一个链表。<br>这样做的目的是为了避免因那些与主要问题无关的细节使算法本身杂乱无章。</li><li>算术表达式可以使用通常的算术运算符（<code>+</code>，<code>-</code>，<code>*</code>，<code>/</code>，以及表示幂的<code>^</code>）。<br>逻辑表达式可以使用关系运算符<code>=</code>,<code>≠</code>,<code>&lt;</code>,<code>&gt;</code>,<code>≤</code>和<code>≥</code>，以及逻辑运算符与（<code>and</code>）, 或（<code>or</code>），非（<code>not</code>）。</li><li>赋值语句是如下形式的语句：<code>a&lt;-b</code> 。<br>这里 <code>a</code> 是变量、数组项，<code>b</code> 是算术表达式、逻辑表达式或指针表达式。<br>语句的含义是将 <code>b</code> 的值赋给 <code>a</code>。</li><li>若 <code>a</code> 和 <code>b</code>都是变量、数组项，那么记号<code>a&lt;-&gt;b</code> 表示<code>a</code>和<code>b</code>的内容进行交换。</li><li>goto语句具有形式<br>它将导致转向具有指定标号的语句。 <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">goto label（goto标号）</span><br></pre></td></tr></table></figure></div></li><li>条件语句有以下两种形式：<br>这里c是逻辑表达式，s和s′是单一的语句或者是被括在do和end之间的语句串。<br>对于上述两种形式，<br>　　假若c为真，则s被执行一次。<br>　　假若c为假，则在第一种形式中，if语句的执行就完成了，而在第二种形式中，执行s′。<br>在所有的情况下，控制就进行到了下一个语句，除非在s或s′中的goto语句使控制转向到其它地方。 <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if c then s或者</span><br><span class="line">　　if c then s</span><br><span class="line">else s′</span><br></pre></td></tr></table></figure></div></li><li>有两种循环指令： <code>while</code> 和 <code>for</code>。<br>while语句的形式是：<br>　　这里c是逻辑表达式，而s是由一个或更多个语句组成的语句串。<br>　　　　当c为真时，执行s。<br>　　　　　　在每一次执行s之前，c都被检查一下；<br>　　　　假若c为假，控制就进行到紧跟在while语句后面的语句。<br>　　注意，当控制第一次达到while语句时，假若c为假，则s一次也不执行。  <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">while c do </span><br><span class="line">　　s</span><br><span class="line">end</span><br></pre></td></tr></table></figure></div>for语句的形式是：<br>这里var是变量，init、limit和incr都是算术表达式，而s是由一个或多个语句组成的语句串。<br>初始时，var被赋予init的值。<br>假若incr≥0，则只要var≤limit，就执行s并且将incr加到var上。<br>（假若incr&lt;0，则只要var≥limit，就执行s并且将incr加到var上）。<br>incr的符号不能由s来该改变。<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for var init to limit by incr do</span><br><span class="line">　　s</span><br><span class="line">end</span><br></pre></td></tr></table></figure></div></li><li>exit语句可以在通常的结束条件满足之前，被用来结束while循环或者for循环的执行。<br>exit导致转向到紧接在包含exit的（最内层）while或者for循环后面的一个语句。</li><li>return用来指出一个算法执行的终点；<br>如果算法在最后一条指令之后结束，它通常是被省略的；<br>它被用得最多的场合是检测到不合需要的条件时。<br>return的后面可以紧接被括在引号的信息。</li><li>算法中的注释被括在/* */之中。<br>诸如read和output之类的各种输入或者输出也在需要时被用到。</li></ol><hr><h2 id="符号体系："><a href="#符号体系：" class="headerlink" title="符号体系："></a>符号体系：</h2><ol><li>开始和结束（begin end）</li><li>输入和输出（read write）</li><li>条件分支（if   ||  case of）<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　if （） then</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　case *  of</span><br><span class="line"></span><br><span class="line">　　　　case 常量1：语句</span><br><span class="line"></span><br><span class="line">　　　　case 常量2：语句</span><br><span class="line"></span><br><span class="line">　　　　default：语句</span><br><span class="line"></span><br><span class="line">　　end</span><br></pre></td></tr></table></figure></div></li><li>循环（while  for  repeat ）<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　while（条件表达式成立）do</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　repeat  ********   until （条件表达式成立）</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　for 循换变量初值 to 终值 step 步长 do</span><br></pre></td></tr></table></figure></div>　　单循环与多循环（嵌套）<br>　　　　循环中的变量：<blockquote><p>循环控制变量<br>累积变量<br>递推变量<br>不确定变量（每次循环操作初始化）  </p></blockquote></li><li>函数和过程（procedure  function）<br>定义：<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　function F(形参1，形参2)  结束需要 return(  )</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　procedure Z(形参1，形参2)</span><br></pre></td></tr></table></figure></div>调用：<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　函数：x&#x3D;F（a，b）</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　　过程：Z（a，b）</span><br></pre></td></tr></table></figure></div></li></ol><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IF</span><br><span class="line">　　S</span><br><span class="line">ELSE</span><br><span class="line">　　BLOCK</span><br><span class="line">　　　　G</span><br><span class="line">　　　　N</span><br><span class="line">　　ENDBLOCK</span><br></pre></td></tr></table></figure></div><p>在这里 <code>BLOCK</code> 可以理解为左括号，<code>ENDBLOCK</code> 为右括号，把 <code>G</code> 和 <code>N</code> 两个语句括起来放在了上面的ELSE中处理。</p><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      伪代码（PseudoCode）是一种算法描述语言。使用伪代码的目的是为了使被描述的算法可以容易地以任何一种编程语言（Pascal，C，Java，etc）实现。
    
    </summary>
    
    
      <category term="Research" scheme="https://tamsiree.com/categories/Research/"/>
    
      <category term="软件工程" scheme="https://tamsiree.com/categories/Research/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="PseudoCode" scheme="https://tamsiree.com/categories/Research/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/PseudoCode/"/>
    
    
      <category term="Research" scheme="https://tamsiree.com/tags/Research/"/>
    
      <category term="软件工程" scheme="https://tamsiree.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="PseudoCode" scheme="https://tamsiree.com/tags/PseudoCode/"/>
    
  </entry>
  
  <entry>
    <title>GitHub提速方案</title>
    <link href="https://tamsiree.com/TechnicalResearch/GitHub/GitHub%E6%8F%90%E9%80%9F%E6%96%B9%E6%A1%88/"/>
    <id>https://tamsiree.com/TechnicalResearch/GitHub/GitHub%E6%8F%90%E9%80%9F%E6%96%B9%E6%A1%88/</id>
    <published>2019-11-23T15:58:18.000Z</published>
    <updated>2020-01-13T12:07:17.106Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Github 是程序员必备的代码托管平台，上面有许多公开项目资源可以供学习者免费下载学习，但有时候在github用git clone 下载公开项目的文件时，速度特别慢，因此Github提速迫在眉睫。</p><h1 id="Github提速方案"><a href="#Github提速方案" class="headerlink" title="Github提速方案"></a>Github提速方案</h1><p>为了解决上项目文件上传、下载速度慢的问题，翻越万里长城查阅资料，发现解决办法可以从 git clone 的域名入手。  </p><blockquote><p>实际上用 git clone 下载项目文件时使用的域名是 <a href="http://github.global.ssl.fastly.net" target="_blank" rel="noopener">http://github.global.ssl.fastly.net</a> ，非 <a href="http://github.com/" target="_blank" rel="noopener">http://github.com/</a> 。  </p></blockquote><p>因此，我们可以修改本地的 <strong>hosts</strong> 文件，在 <strong>hosts</strong> 文件中增加域名及域名解析对应的 ip，给该域名指定 ip 。</p><h2 id="获取域名-IP"><a href="#获取域名-IP" class="headerlink" title="获取域名 IP"></a>获取域名 IP</h2><p>有两种方法可以查询 <code>github.global.ssl.fastly.net</code> 该域名对应的 IP：  </p><ol><li>登录域名  的 ip 地址查询网页<blockquote><p><a href="http://github.global.ssl.fastly.net.ipaddress.com/" target="_blank" rel="noopener">http://github.global.ssl.fastly.net.ipaddress.com/</a></p></blockquote></li></ol><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191124001009.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191124001009.png" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191124001225.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191124001225.png" class="lazyload" title></a></p><p>找到域名 <code>github.global.ssl.fastly.net</code> 对应的 IP: <code>199.232.5.194</code> 。  </p><ol start="2"><li>利用第三方 DNS 域名解析网站，查询响应 IP<br>常用的第三方 DNS 域名解析网站 <a href="http://tool.chinaz.com/dns" target="_blank" rel="noopener">http://tool.chinaz.com/dns</a></li></ol><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191124002601.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/20191124002601.png" class="lazyload" title></a></p><p>不同地方对应该域名的响应ip不一样，网页解析速度也就不一样。选择TTL值最小的ip即可。</p><ol start="3"><li>查询CDN IP<br>前往<a href="https://www.ipaddress.com/" target="_blank" rel="noopener">ipaddress</a>找到最近的github的CDN IP</li></ol><p><a href="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/owzawzjyse.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/Tamsiree/Assets@master/Picture/Blog/Post/owzawzjyse.png" class="lazyload" title></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">github-cloud.s3.amazonaws.com</span><br><span class="line">github.com</span><br><span class="line">assets-cdn.github.com</span><br><span class="line">github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure></div><h2 id="修改-Hosts"><a href="#修改-Hosts" class="headerlink" title="修改 Hosts"></a>修改 Hosts</h2><p>修改 hosts 文件，给域名绑定访问 IP。<br>例如： </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">151.101.185.194 github.global-ssl.fastly.net</span><br><span class="line">192.30.253.112 github.com</span><br></pre></td></tr></table></figure></div><blockquote><p>此hosts更新时间为 2019-07-08 18:32</p></blockquote><p>每个系统下 hosts 文件的路径有点差异。</p><blockquote><ul><li>Windows<br>  C:\Windows\System32\drivers\etc\hosts</li><li>mac<br>  /etc/hosts</li><li>Linux<br>  /etc/hosts</li></ul></blockquote><h2 id="刷新dns"><a href="#刷新dns" class="headerlink" title="刷新dns"></a>刷新dns</h2><p>为了使修改的hosts文件生效，需要刷新DNS缓存。</p><p>每个系统下刷新DNS缓存的方式有点差异。</p><blockquote><ul><li>Windows:<br>　　ipconfig /flushdns</li></ul></blockquote><blockquote><ul><li>Mac OS X:<br>　　sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder</li></ul></blockquote><blockquote><ul><li>Debian/Ubuntu:<br>　　sudo /etc/rc.d/init.d/nscd restart</li></ul></blockquote><blockquote><ul><li>Linux with systemd:<br>　　sudo systemctl restart network.service</li></ul></blockquote><blockquote><ul><li>Fedora Linux:<br>　　sudo systemctl restart NetworkManager.service</li></ul></blockquote><blockquote><ul><li>Arch Linux/Manjaro with Network Manager:<br>　　sudo systemctl restart NetworkManager.service</li></ul></blockquote><blockquote><ul><li>Arch Linux/Manjaro with Wicd:<br>　　sudo systemctl restart wicd.service</li></ul></blockquote><p>我使用的是Manjaro，所以我的方法是：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart NetworkManager.service</span><br></pre></td></tr></table></figure></div><hr><blockquote><p>to be continued…</p></blockquote>]]></content>
    
    <summary type="html">
    
      Github 是程序员必备的代码托管平台，上面有许多公开项目资源可以供学习者免费下载学习，但有时候在github用git clone 下载公开项目的文件时，速度特别慢，因此Github提速迫在眉睫。
    
    </summary>
    
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/categories/TechnicalResearch/"/>
    
      <category term="GitHub" scheme="https://tamsiree.com/categories/TechnicalResearch/GitHub/"/>
    
    
      <category term="GitHub" scheme="https://tamsiree.com/tags/GitHub/"/>
    
      <category term="TechnicalResearch" scheme="https://tamsiree.com/tags/TechnicalResearch/"/>
    
  </entry>
  
</feed>
